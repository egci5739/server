2022-01-07 15:15:17.683 [main] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 15:15:18.109 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 15:15:18.668 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 15:15:18.812 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 15:15:19.061 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{ [/]}: getEquipment()
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{GET [/equipment]}: equipment(Model)
	{ [/equipment/getData]}: getEquipmentData()
	{ [/staffOperation]}: staffOperation()
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{ [/history]}: history(Model)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
2022-01-07 15:15:19.066 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 15:15:19.089 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 15:15:19.171 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 15:15:19.451 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 15:15:19.453 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:15:19.454 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:15:19.456 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:15:19.456 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:15:19.457 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:15:19.457 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:15:19.457 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:15:19.458 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:15:19.458 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:15:19.459 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:15:19.459 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:15:19.460 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:15:19.460 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:15:19.460 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:15:19.461 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:15:19.461 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:15:19.461 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:15:19.462 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 15:15:19.462 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:15:19.462 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:15:19.463 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:15:19.463 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:15:19.463 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:15:19.464 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:15:19.464 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:15:19.465 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:15:19.465 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 15:15:19.465 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:15:19.466 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:15:19.466 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:15:19.467 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:15:19.467 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:15:19.467 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:15:19.468 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:15:19.468 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:15:19.843 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 6bf13b25-ebb1-4382-83d6-9ef9b4b9b6d4
2022-01-07 15:15:19.849 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:15:19.866 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:15:19.879 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:15:19.886 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:15:19.886 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:15:19.888 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:15:19.945 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:15:19.960 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: eb92c49e-9da8-43de-b607-efcaed42e024
2022-01-07 15:15:19.976 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: 52ebf116-d6cf-4e79-a432-87523db6cba9
2022-01-07 15:15:19.989 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 026a1809-1579-4486-ac21-0b24fbdd6ac0
2022-01-07 15:15:20.003 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 1b083e14-21aa-420c-bcf0-60b6633f843c
2022-01-07 15:15:20.017 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 563c1573-6ef5-4f20-b1bb-9db0875bc460
2022-01-07 15:15:20.030 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: d615ed87-27de-4a45-a6ee-f6b472d5104c
2022-01-07 15:15:20.041 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: e325c83d-1152-44fd-b47d-d94db5ecfe17
2022-01-07 15:15:20.053 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: d97c5e56-d889-44ce-97c6-a9cb90638459
2022-01-07 15:15:20.064 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 9231377a-5c79-4e1b-af3f-f7b7d6e156a1
2022-01-07 15:15:20.064 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:15:30.007 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 15:15:49.957 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:15:56.497 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:15:56.497 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:15:56.499 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:15:56.500 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:15:56.500 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:15:56.500 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:15:56.504 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:15:56.508 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:15:56.509 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:15:56.510 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:15:56.510 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:15:56.511 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:15:56.511 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:15:56.512 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:15:56.513 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:15:56.513 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:15:56.513 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:15:56.514 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:15:56.514 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 15:15:56.514 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:15:56.515 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:15:56.515 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:15:56.515 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:15:56.516 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:15:56.516 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:15:56.516 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:15:56.517 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:15:56.517 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 15:15:56.517 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:15:56.518 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:15:56.518 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:15:56.518 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:15:56.519 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:15:56.519 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:15:56.519 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:15:56.520 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:15:56.529 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 15:15:56.545 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: a12c42d1-2542-4b86-8c2f-1c5791cd9d21
2022-01-07 15:15:56.546 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:15:56.546 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:15:56.549 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:15:56.646 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:15:56.662 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@6f9f266b
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@64e4f171
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@32ce2ce5
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 15:15:56.666 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 436d75f4-4fad-4413-9bf8-31727d3cd069
2022-01-07 15:15:56.694 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 15:15:56.711 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: eedc4f36-57c1-464a-a534-7bbb427725f1
2022-01-07 15:15:56.731 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: dbc9da08-3b28-488e-8826-6bff80957388
2022-01-07 15:15:56.749 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: c6cf7b38-7acb-446a-b1b4-0d64402dd923
2022-01-07 15:15:56.766 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 41e17519-d318-4058-afd2-0d18e75900ec
2022-01-07 15:15:56.795 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: f74d034d-b4aa-4f24-8bf4-50e389bf4b57
2022-01-07 15:15:56.826 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: b4f2c71b-61e3-4cf1-b985-1107c38a42aa
2022-01-07 15:15:56.866 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 00cd5963-2994-42bc-bd1a-d4bb82903aa9
2022-01-07 15:15:56.898 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 1dc1e05e-ab87-48ce-8986-481a2b9816f3
2022-01-07 15:15:56.898 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:16:08.229 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:16:08.231 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:16:08.231 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:16:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:16:26.512 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:16:26.653 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=1, idle=9, waiting=0)
2022-01-07 15:17:26.252 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:17:26.254 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:17:26.254 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:17:26.258 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:17:33.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:17:33.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:17:33.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:17:51.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:17:51.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:17:51.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:17:56.274 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:17:56.274 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:17:56.274 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:17:56.275 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:18:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:18:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:18:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:18:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:18:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:18:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:18:26.288 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:18:26.288 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:18:26.288 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:18:26.290 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:18:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:18:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:18:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:18:36.331 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:18:36.333 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 6bf13b25-ebb1-4382-83d6-9ef9b4b9b6d4: (connection evicted)
2022-01-07 15:18:36.334 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: eb92c49e-9da8-43de-b607-efcaed42e024: (connection evicted)
2022-01-07 15:18:36.334 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: 52ebf116-d6cf-4e79-a432-87523db6cba9: (connection evicted)
2022-01-07 15:18:36.334 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 026a1809-1579-4486-ac21-0b24fbdd6ac0: (connection evicted)
2022-01-07 15:18:36.335 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 1b083e14-21aa-420c-bcf0-60b6633f843c: (connection evicted)
2022-01-07 15:18:36.335 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: 563c1573-6ef5-4f20-b1bb-9db0875bc460: (connection evicted)
2022-01-07 15:18:36.336 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: d615ed87-27de-4a45-a6ee-f6b472d5104c: (connection evicted)
2022-01-07 15:18:36.336 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: e325c83d-1152-44fd-b47d-d94db5ecfe17: (connection evicted)
2022-01-07 15:18:36.337 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: d97c5e56-d889-44ce-97c6-a9cb90638459: (connection evicted)
2022-01-07 15:18:36.337 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: 9231377a-5c79-4e1b-af3f-f7b7d6e156a1: (connection evicted)
2022-01-07 15:18:36.338 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 15:18:36.338 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:18:36.339 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: a12c42d1-2542-4b86-8c2f-1c5791cd9d21: (connection evicted)
2022-01-07 15:18:36.339 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 436d75f4-4fad-4413-9bf8-31727d3cd069: (connection evicted)
2022-01-07 15:18:36.340 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: eedc4f36-57c1-464a-a534-7bbb427725f1: (connection evicted)
2022-01-07 15:18:36.340 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: dbc9da08-3b28-488e-8826-6bff80957388: (connection evicted)
2022-01-07 15:18:36.340 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: c6cf7b38-7acb-446a-b1b4-0d64402dd923: (connection evicted)
2022-01-07 15:18:36.341 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: 41e17519-d318-4058-afd2-0d18e75900ec: (connection evicted)
2022-01-07 15:18:36.341 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: f74d034d-b4aa-4f24-8bf4-50e389bf4b57: (connection evicted)
2022-01-07 15:18:36.341 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: b4f2c71b-61e3-4cf1-b985-1107c38a42aa: (connection evicted)
2022-01-07 15:18:36.342 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: 00cd5963-2994-42bc-bd1a-d4bb82903aa9: (connection evicted)
2022-01-07 15:18:36.342 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: 1dc1e05e-ab87-48ce-8986-481a2b9816f3: (connection evicted)
2022-01-07 15:18:36.342 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 15:19:08.020 [main] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 15:19:08.456 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 15:19:09.043 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 15:19:09.185 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 15:19:09.433 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{ [/history]}: history(Model)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{GET [/equipment]}: equipment(Model)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{ [/staffOperation]}: staffOperation()
	{ [/]}: getEquipment()
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
2022-01-07 15:19:09.438 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 15:19:09.461 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 15:19:09.542 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 15:19:09.840 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 15:19:09.842 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:19:09.842 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:19:09.843 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:19:09.843 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:19:09.843 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:19:09.844 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:19:09.844 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:19:09.844 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:19:09.845 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:19:09.845 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:19:09.845 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:19:09.846 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:19:09.846 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:19:09.846 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:19:09.847 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:19:09.847 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:19:09.848 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:19:09.848 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 15:19:09.848 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:19:09.849 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:19:09.849 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:19:09.849 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:19:09.850 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:19:09.850 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:19:09.850 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:19:09.851 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:19:09.851 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 15:19:09.851 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:19:09.852 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:19:09.852 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:19:09.852 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:19:09.853 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:19:09.856 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:19:09.857 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:19:09.857 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:19:10.237 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: f6e302bc-6c30-45d6-9c85-a1c8fc8ed3f2
2022-01-07 15:19:10.244 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:19:10.262 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:19:10.277 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:19:10.283 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:19:10.284 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:19:10.285 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:19:10.351 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:19:10.371 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: bf57b1a9-68cf-4d10-b543-31144d92d8ba
2022-01-07 15:19:10.385 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: d588f19e-0236-4b5a-a902-17f64d279245
2022-01-07 15:19:10.397 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 61bee52a-0ba6-424d-8021-a9ebfb4a8c6a
2022-01-07 15:19:10.409 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 0dc70c7c-c0c2-4357-b705-7923a6c90bbd
2022-01-07 15:19:10.421 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 1bdce505-31e0-4446-a936-0da28dfa5d74
2022-01-07 15:19:10.434 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 21b806ab-4ad3-4a9b-9bb8-2d8f18a2a4ce
2022-01-07 15:19:10.445 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: f43e8d31-3274-439e-b76d-23a44dec2127
2022-01-07 15:19:10.456 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 5deb1d2f-7a4a-4e7a-937b-4e55de26cea9
2022-01-07 15:19:10.468 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 1bd03abc-e3fe-46cb-82bc-7caf36d30849
2022-01-07 15:19:10.468 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:19:15.006 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 15:19:15.007 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:19:15.007 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:19:15.007 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:19:15.008 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:19:15.008 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:19:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:19:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:19:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:19:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:19:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:19:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:19:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:19:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:19:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:19:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:19:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:19:15.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:19:15.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 15:19:15.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:19:15.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:19:15.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:19:15.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:19:15.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:19:15.015 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:19:15.015 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:19:15.015 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:19:15.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 15:19:15.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:19:15.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:19:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:19:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:19:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:19:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:19:15.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:19:15.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:19:15.030 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 85cf5919-e2f9-407f-93f6-ff4db66c38da
2022-01-07 15:19:15.031 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:19:15.032 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:19:15.033 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:19:15.134 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:19:15.149 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: c43771d4-5730-44ea-8e6d-bee57e69d41f
2022-01-07 15:19:15.159 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: 5d361db3-c864-4f36-9cff-28eeccfb5002
2022-01-07 15:19:15.169 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: d62a5f32-5f83-4b31-8a3f-0e321ab6984f
2022-01-07 15:19:15.179 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 4b082951-1eab-450f-aa0f-a25c1d7ad502
2022-01-07 15:19:15.190 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: e3346d87-7510-4907-bbfc-859c8dd985b4
2022-01-07 15:19:15.201 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: f40a2d41-6ab8-4b99-8116-e91f481181f5
2022-01-07 15:19:15.212 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: d376ba7d-66d6-47b2-b53a-5ffed32f6ce3
2022-01-07 15:19:15.223 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: ed0d7ee6-9dd9-49ec-a16b-62f5f7a6b490
2022-01-07 15:19:15.235 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 5d66d371-e191-4491-9a4f-84ad92e90988
2022-01-07 15:19:15.235 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:19:40.365 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:19:40.366 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:19:41.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:19:41.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:19:41.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:19:42.741 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 15:19:42.847 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@72d789cf
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6575ca03
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@439ee627
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 15:19:42.864 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 15:19:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:19:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:19:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:19:45.140 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:19:45.140 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:20:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:20:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:20:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:20:10.378 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:20:10.378 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:20:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:20:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:20:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:20:15.150 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:20:15.150 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:20:21.876 [http-nio-8080-exec-5] DEBUG c.f.s.m.staffInfo.StaffMapper.getStaffByUserId - ==>  Preparing: select * from V_UserInfo where staffUserId = ? and staffImage is not null;
2022-01-07 15:20:21.880 [http-nio-8080-exec-5] DEBUG c.f.s.m.staffInfo.StaffMapper.getStaffByUserId - ==> Parameters: 张健(String)
2022-01-07 15:20:21.896 [http-nio-8080-exec-5] DEBUG c.f.s.m.staffInfo.StaffMapper.getStaffByUserId - <==      Total: 0
2022-01-07 15:20:26.524 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByName - ==>  Preparing: select * from V_UserInfo where staffName = ? and staffImage is not null;
2022-01-07 15:20:26.524 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByName - ==> Parameters: 张健(String)
2022-01-07 15:20:26.534 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByName - <==      Total: 3
2022-01-07 15:20:40.384 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:20:40.384 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:20:41.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:20:41.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:20:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:20:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:20:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:20:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:20:45.161 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:20:45.161 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:20:55.239 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:20:55.240 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:20:55.249 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:20:55.251 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:20:55.252 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:20:36.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:20:55.265 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:21:01.121 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:21:01.123 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:21:01.125 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:21:01.126 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:21:01.127 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:20:42.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:21:01.133 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:21:01.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:21:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:21:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:21:10.389 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:21:10.390 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:21:11.202 [Thread-7] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:21:11.203 [Thread-7] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:20:52.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:21:11.209 [Thread-7] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:21:14.404 [Thread-8] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:21:14.405 [Thread-8] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:20:55.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:21:14.405 [Thread-8] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:21:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:21:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:21:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:21:15.176 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:21:15.176 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:21:23.322 [Thread-9] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:21:23.322 [Thread-9] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:21:04.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:21:23.328 [Thread-9] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:21:26.053 [Thread-10] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:21:26.054 [Thread-10] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:21:26.055 [Thread-10] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:21:26.056 [Thread-10] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:21:26.057 [Thread-10] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:21:07.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:21:26.062 [Thread-10] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:21:29.285 [Thread-11] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:21:29.285 [Thread-11] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:21:29.286 [Thread-11] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:21:29.286 [Thread-11] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:21:29.287 [Thread-11] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:21:10.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:21:29.288 [Thread-11] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:21:30.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:21:30.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:21:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:21:32.524 [Thread-12] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:21:32.524 [Thread-12] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:21:32.525 [Thread-12] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:21:32.526 [Thread-12] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:21:32.526 [Thread-12] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:21:13.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:21:32.532 [Thread-12] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:21:35.777 [Thread-13] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:21:35.778 [Thread-13] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:21:35.779 [Thread-13] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:21:35.780 [Thread-13] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:21:35.780 [Thread-13] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:21:17.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:21:35.786 [Thread-13] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:21:37.972 [Thread-14] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:21:37.973 [Thread-14] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:21:37.973 [Thread-14] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:21:37.974 [Thread-14] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:21:37.975 [Thread-14] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:21:19.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:21:37.980 [Thread-14] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:21:40.406 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:21:40.407 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:21:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:21:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:21:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:21:45.187 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:21:45.187 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:22:01.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:22:01.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:22:01.734 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:22:10.414 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:22:10.415 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:22:14.460 [Thread-15] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:14.460 [Thread-15] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:14.468 [Thread-15] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:14.470 [Thread-15] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:14.471 [Thread-15] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:21:55.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:14.477 [Thread-15] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:22:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:22:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:22:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:22:15.194 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:22:15.194 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:22:17.166 [Thread-16] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:17.167 [Thread-16] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:17.168 [Thread-16] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:17.169 [Thread-16] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:17.169 [Thread-16] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:21:58.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:17.175 [Thread-16] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:22:21.462 [Thread-17] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:21.462 [Thread-17] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:21.463 [Thread-17] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:21.463 [Thread-17] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:21.464 [Thread-17] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:03.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:21.469 [Thread-17] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:22:23.659 [Thread-18] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:23.659 [Thread-18] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:23.659 [Thread-18] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:23.660 [Thread-18] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:23.661 [Thread-18] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:04.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:23.666 [Thread-18] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:22:25.848 [Thread-19] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:25.848 [Thread-19] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:25.849 [Thread-19] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:25.850 [Thread-19] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:25.850 [Thread-19] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:07.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:25.856 [Thread-19] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:22:28.038 [Thread-20] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:28.038 [Thread-20] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:28.039 [Thread-20] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:28.040 [Thread-20] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:28.041 [Thread-20] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:09.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:28.042 [Thread-20] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:22:30.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:22:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:22:30.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:22:30.198 [Thread-21] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:30.199 [Thread-21] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:30.200 [Thread-21] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:30.201 [Thread-21] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:30.201 [Thread-21] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:11.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:30.207 [Thread-21] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:22:32.379 [Thread-22] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:32.379 [Thread-22] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:32.380 [Thread-22] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:32.380 [Thread-22] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:32.381 [Thread-22] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:13.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:32.386 [Thread-22] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:22:36.682 [Thread-23] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:36.682 [Thread-23] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:36.683 [Thread-23] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:36.684 [Thread-23] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:36.684 [Thread-23] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:18.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:36.690 [Thread-23] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:22:40.428 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:22:40.429 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:22:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:22:45.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:22:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:22:45.201 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:22:45.201 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:22:50.443 [Thread-24] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:50.443 [Thread-24] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:50.444 [Thread-24] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:50.445 [Thread-24] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:50.445 [Thread-24] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:31.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:50.451 [Thread-24] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:22:54.722 [Thread-25] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:54.722 [Thread-25] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:54.723 [Thread-25] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:54.724 [Thread-25] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:54.724 [Thread-25] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:36.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:54.731 [Thread-25] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:22:56.921 [Thread-26] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:22:56.924 [Thread-26] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:22:56.925 [Thread-26] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:22:56.926 [Thread-26] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:22:56.926 [Thread-26] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:38.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:22:56.932 [Thread-26] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:01.219 [Thread-27] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:01.220 [Thread-27] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:01.227 [Thread-27] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:01.228 [Thread-27] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:01.228 [Thread-27] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:42.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:01.234 [Thread-27] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:23:01.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:23:01.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:23:04.473 [Thread-28] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:04.475 [Thread-28] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:04.476 [Thread-28] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:04.477 [Thread-28] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:04.477 [Thread-28] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:45.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:04.483 [Thread-28] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:07.210 [Thread-29] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:07.210 [Thread-29] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:07.211 [Thread-29] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:07.211 [Thread-29] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:07.212 [Thread-29] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:48.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:07.217 [Thread-29] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:09.376 [Thread-30] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:09.377 [Thread-30] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:09.378 [Thread-30] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:09.378 [Thread-30] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:09.379 [Thread-30] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:50.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:09.384 [Thread-30] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:10.444 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:23:10.445 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:23:12.079 [Thread-31] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:12.079 [Thread-31] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:12.080 [Thread-31] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:12.081 [Thread-31] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:12.081 [Thread-31] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:53.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:12.087 [Thread-31] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:14.242 [Thread-32] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:14.243 [Thread-32] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:14.244 [Thread-32] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:14.244 [Thread-32] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:14.245 [Thread-32] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:55.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:14.245 [Thread-32] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:23:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:23:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:23:15.210 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:23:15.211 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:23:16.499 [Thread-33] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:16.499 [Thread-33] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:16.500 [Thread-33] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:16.500 [Thread-33] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:16.501 [Thread-33] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:22:57.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:16.506 [Thread-33] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:19.213 [Thread-34] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:19.215 [Thread-34] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:19.215 [Thread-34] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:19.216 [Thread-34] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:19.216 [Thread-34] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:23:00.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:19.222 [Thread-34] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:23.504 [Thread-35] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:23.505 [Thread-35] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:23.505 [Thread-35] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:23.506 [Thread-35] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:23.506 [Thread-35] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:23:04.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:23.512 [Thread-35] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:27.749 [Thread-36] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:27.749 [Thread-36] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:27.750 [Thread-36] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:27.751 [Thread-36] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:27.751 [Thread-36] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:23:08.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:27.757 [Thread-36] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:23:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:23:30.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:23:40.452 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:23:40.452 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:23:44.564 [Thread-37] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:44.565 [Thread-37] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:44.566 [Thread-37] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:44.566 [Thread-37] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:44.567 [Thread-37] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:23:25.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:44.572 [Thread-37] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:23:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:23:45.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:23:45.231 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:23:45.231 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:23:47.320 [Thread-38] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:47.320 [Thread-38] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:47.321 [Thread-38] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:47.322 [Thread-38] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:47.322 [Thread-38] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:23:28.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:47.328 [Thread-38] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:50.017 [Thread-39] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:50.017 [Thread-39] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:50.018 [Thread-39] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:50.018 [Thread-39] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:50.019 [Thread-39] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:23:31.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:50.024 [Thread-39] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:23:53.819 [Thread-40] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:23:53.820 [Thread-40] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:23:53.820 [Thread-40] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:23:53.821 [Thread-40] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:23:53.821 [Thread-40] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:23:35.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:23:53.822 [Thread-40] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:24:01.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:24:01.733 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:24:01.734 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:24:03.797 [Thread-41] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:24:03.799 [Thread-41] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:24:03.800 [Thread-41] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:24:03.801 [Thread-41] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:24:03.801 [Thread-41] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:23:45.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:24:03.807 [Thread-41] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:24:10.458 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:24:10.458 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:24:11.170 [Thread-42] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:24:11.170 [Thread-42] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:24:11.178 [Thread-42] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:24:11.179 [Thread-42] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:24:11.179 [Thread-42] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:23:52.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:24:11.185 [Thread-42] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:24:12.894 [Thread-43] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:24:12.897 [Thread-43] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:24:12.898 [Thread-43] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:24:12.899 [Thread-43] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:24:12.899 [Thread-43] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:23:54.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:24:12.900 [Thread-43] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:24:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:24:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:24:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:24:15.250 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:24:15.250 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:24:16.671 [Thread-44] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:24:16.671 [Thread-44] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:24:16.672 [Thread-44] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:24:16.673 [Thread-44] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:24:16.673 [Thread-44] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:23:57.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:24:16.678 [Thread-44] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:24:20.441 [Thread-45] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:24:20.444 [Thread-45] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:24:20.445 [Thread-45] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:24:20.446 [Thread-45] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:24:20.446 [Thread-45] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:24:01.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:24:20.452 [Thread-45] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:24:28.436 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:24:28.436 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:24:28.437 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:24:28.438 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:24:28.438 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:24:09.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:24:28.444 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:24:33.788 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:24:33.788 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:24:33.789 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:24:33.790 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:24:33.790 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:24:14.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:24:33.796 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:24:35.430 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:24:35.431 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:24:35.432 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:24:35.432 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:24:35.433 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:24:16.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:24:35.439 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:24:37.192 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:24:37.193 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:24:37.194 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:24:37.195 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:24:37.195 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:24:18.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:24:37.201 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:24:40.481 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:24:40.481 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:24:41.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:24:41.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:24:41.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:24:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:24:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:24:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:24:45.253 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:24:45.253 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:24:47.256 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:24:47.257 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:24:47.258 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:24:47.259 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:24:47.259 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:24:28.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:24:47.266 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:25:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:25:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:25:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:25:10.500 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:25:10.500 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:25:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:25:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:25:15.023 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:25:15.275 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:25:15.276 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:25:19.150 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:25:19.150 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:25:19.157 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:25:19.159 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:25:19.163 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:25:00.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:25:19.170 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:25:22.911 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:25:22.912 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:25:22.913 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:25:22.914 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:25:22.914 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:25:04.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:25:22.921 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:25:28.280 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:25:28.280 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:25:28.281 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:25:28.281 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:25:28.282 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:25:09.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:25:28.287 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:25:30.986 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:25:30.986 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:25:30.987 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:25:30.988 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:25:30.988 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:25:12.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:25:30.995 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:25:40.518 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:25:40.518 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:25:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:25:41.731 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:25:41.732 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:25:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:25:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:25:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:25:45.288 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:25:45.288 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:25:46.629 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:25:46.629 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 15:25:46.630 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:25:46.631 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:25:46.631 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@63d4aef7(byte[]), 2022-01-07 15:25:28.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 79(Integer)
2022-01-07 15:25:46.638 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:26:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:26:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:26:01.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:26:10.533 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:26:10.533 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:26:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:26:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:26:15.022 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:26:15.307 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:26:15.307 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:26:40.538 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:26:40.538 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:26:41.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:26:41.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:26:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:26:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:26:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:26:45.019 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:26:45.323 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:26:45.323 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:27:01.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:27:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:27:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:27:08.305 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:27:08.306 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:27:08.314 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:27:08.314 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:27:08.315 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:26:49.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:27:08.320 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:27:10.546 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:27:10.546 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:27:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:27:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:27:15.021 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:27:15.339 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:27:15.339 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:27:20.844 [Thread-61] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:27:20.845 [Thread-61] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 15:27:20.846 [Thread-61] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:27:20.847 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:27:20.847 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@18758bfa(byte[]), 2022-01-07 15:27:01.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 79(Integer)
2022-01-07 15:27:20.854 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:27:40.554 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:27:40.554 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:27:40.983 [Thread-65] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:27:40.984 [Thread-65] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 15:27:40.991 [Thread-65] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:27:40.992 [Thread-65] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:27:40.993 [Thread-65] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@54ca2644(byte[]), 2022-01-07 15:27:22.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 83(Integer)
2022-01-07 15:27:40.999 [Thread-65] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:27:41.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:27:41.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:27:41.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:27:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:27:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:27:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:27:45.359 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:27:45.360 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:28:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:28:01.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:28:01.731 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:28:08.789 [Thread-69] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:28:08.790 [Thread-69] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:28:08.790 [Thread-69] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:28:08.791 [Thread-69] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:28:08.791 [Thread-69] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:27:50.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:28:08.798 [Thread-69] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:28:10.559 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:28:10.559 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:28:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:28:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:28:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:28:15.374 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:28:15.374 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:28:40.580 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:28:40.580 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:28:41.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:28:41.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:28:41.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:28:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:28:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:28:45.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:28:45.381 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:28:45.381 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:28:57.165 [main] DEBUG com.face.server.ServerApplicationTests - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 15:28:57.632 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 15:28:58.497 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader sun.misc.Launcher$AppClassLoader@42a57993
2022-01-07 15:28:58.765 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader sun.misc.Launcher$AppClassLoader@42a57993
2022-01-07 15:28:59.439 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{ [/]}: getEquipment()
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{GET [/equipment]}: equipment(Model)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{ [/staffOperation]}: staffOperation()
	{ [/history]}: history(Model)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
2022-01-07 15:28:59.447 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2022-01-07 15:28:59.526 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 15:28:59.579 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 15:29:00.413 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 15:29:00.417 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:29:00.417 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:29:00.418 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:29:00.418 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:29:00.418 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:29:00.418 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:29:00.419 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:29:00.419 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:29:00.419 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:29:00.419 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:29:00.420 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:29:00.420 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:29:00.420 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:29:00.420 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:29:00.421 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:29:00.421 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:29:00.421 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:29:00.421 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 15:29:00.421 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:29:00.422 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:29:00.422 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:29:00.422 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:29:00.422 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:29:00.422 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:29:00.422 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:29:00.423 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:29:00.423 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 15:29:00.424 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:29:00.424 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:29:00.424 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:29:00.425 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:29:00.425 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:29:00.425 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:29:00.425 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:29:00.426 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:29:01.084 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 80479e9f-f194-4f09-8e59-7266ede4935a
2022-01-07 15:29:01.089 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:29:01.104 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:29:01.119 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:29:01.126 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:29:01.126 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:29:01.127 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:29:01.196 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:29:01.213 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 668d6b94-cf7d-4887-a901-efb20b22d719
2022-01-07 15:29:01.226 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: c0eb3cab-63fe-4e2e-a441-c6a3f2d3de56
2022-01-07 15:29:01.239 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 60c5cadf-488a-487b-9724-fdf19992fd29
2022-01-07 15:29:01.252 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: e63111e7-e4f4-46b4-a762-2af7dfa5e192
2022-01-07 15:29:01.263 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: a282d850-c818-4541-a59c-9a376537fb1d
2022-01-07 15:29:01.275 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 349994ed-fc4e-4836-a187-a811486392ef
2022-01-07 15:29:01.286 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: f0d5614f-f445-4eb2-96f6-a0512b7f1537
2022-01-07 15:29:01.298 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 1a079db2-5ceb-452c-867e-d2f416095565
2022-01-07 15:29:01.310 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 7913af47-bed4-4a38-896f-066712c1bdc1
2022-01-07 15:29:01.310 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:29:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 15:29:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:29:15.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:29:15.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:29:15.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:29:15.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:29:15.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:29:15.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:29:15.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:29:15.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:29:15.026 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 99c0ace4-ee63-42ae-8b12-9bd6734acf2d
2022-01-07 15:29:15.026 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:29:15.026 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:29:15.027 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:29:15.132 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:29:15.146 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 72e19842-454b-4087-a847-2d6d6c768092
2022-01-07 15:29:15.156 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: a89da9ad-b782-444d-b6cc-73cdef0d82e5
2022-01-07 15:29:15.165 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 358ff73f-d328-4fe1-ba6c-55d08ac8cd3d
2022-01-07 15:29:15.175 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 5634631f-8410-49e2-96f4-44547e919921
2022-01-07 15:29:15.184 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: b5a27409-738e-4653-afd1-cb45e75b783e
2022-01-07 15:29:15.194 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: bca1cefc-679b-4ef2-8f12-359603b42171
2022-01-07 15:29:15.203 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: 21035f40-51e2-4f20-8099-2ee012bf2536
2022-01-07 15:29:15.214 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 373e6193-aea9-4158-ae30-2d8ca173cfba
2022-01-07 15:29:15.232 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 9e4102d1-a3bc-45e3-a603-cf3d8269a74b
2022-01-07 15:29:15.232 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:29:17.213 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:29:17.213 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 80479e9f-f194-4f09-8e59-7266ede4935a: (connection evicted)
2022-01-07 15:29:17.214 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: 668d6b94-cf7d-4887-a901-efb20b22d719: (connection evicted)
2022-01-07 15:29:17.214 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: c0eb3cab-63fe-4e2e-a441-c6a3f2d3de56: (connection evicted)
2022-01-07 15:29:17.214 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 60c5cadf-488a-487b-9724-fdf19992fd29: (connection evicted)
2022-01-07 15:29:17.214 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: e63111e7-e4f4-46b4-a762-2af7dfa5e192: (connection evicted)
2022-01-07 15:29:17.214 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: a282d850-c818-4541-a59c-9a376537fb1d: (connection evicted)
2022-01-07 15:29:17.214 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: 349994ed-fc4e-4836-a187-a811486392ef: (connection evicted)
2022-01-07 15:29:17.214 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: f0d5614f-f445-4eb2-96f6-a0512b7f1537: (connection evicted)
2022-01-07 15:29:17.215 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: 1a079db2-5ceb-452c-867e-d2f416095565: (connection evicted)
2022-01-07 15:29:17.215 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: 7913af47-bed4-4a38-896f-066712c1bdc1: (connection evicted)
2022-01-07 15:29:17.215 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 15:29:17.215 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:29:17.215 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: 99c0ace4-ee63-42ae-8b12-9bd6734acf2d: (connection evicted)
2022-01-07 15:29:17.216 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 72e19842-454b-4087-a847-2d6d6c768092: (connection evicted)
2022-01-07 15:29:17.216 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: a89da9ad-b782-444d-b6cc-73cdef0d82e5: (connection evicted)
2022-01-07 15:29:17.216 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: 358ff73f-d328-4fe1-ba6c-55d08ac8cd3d: (connection evicted)
2022-01-07 15:29:17.216 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: 5634631f-8410-49e2-96f4-44547e919921: (connection evicted)
2022-01-07 15:29:17.217 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: b5a27409-738e-4653-afd1-cb45e75b783e: (connection evicted)
2022-01-07 15:29:17.217 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: bca1cefc-679b-4ef2-8f12-359603b42171: (connection evicted)
2022-01-07 15:29:17.217 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: 21035f40-51e2-4f20-8099-2ee012bf2536: (connection evicted)
2022-01-07 15:29:17.217 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: 373e6193-aea9-4158-ae30-2d8ca173cfba: (connection evicted)
2022-01-07 15:29:17.217 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: 9e4102d1-a3bc-45e3-a603-cf3d8269a74b: (connection evicted)
2022-01-07 15:29:17.218 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 15:29:49.742 [main] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 15:29:50.165 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 15:29:50.721 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 15:29:50.863 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 15:29:51.117 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{ [/]}: getEquipment()
	{ [/staffOperation]}: staffOperation()
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{GET [/equipment]}: equipment(Model)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{ [/history]}: history(Model)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
2022-01-07 15:29:51.123 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2022-01-07 15:29:51.150 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 15:29:51.239 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 15:29:51.476 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 15:29:51.478 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:29:51.478 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:29:51.478 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:29:51.479 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:29:51.479 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:29:51.479 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:29:51.480 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:29:51.480 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:29:51.480 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:29:51.481 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:29:51.481 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:29:51.482 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:29:51.482 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:29:51.482 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:29:51.483 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:29:51.483 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:29:51.483 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:29:51.484 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 15:29:51.484 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:29:51.484 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:29:51.485 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:29:51.485 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:29:51.485 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:29:51.486 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:29:51.486 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:29:51.486 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:29:51.487 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 15:29:51.487 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:29:51.491 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:29:51.491 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:29:51.491 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:29:51.492 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:29:51.492 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:29:51.492 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:29:51.493 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:29:51.897 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 8c018858-4b38-447d-beaf-668d367a4a6f
2022-01-07 15:29:51.903 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:29:51.920 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:29:51.933 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:29:51.940 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:29:51.940 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:29:51.942 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:29:52.011 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:29:52.028 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 94c8b728-6691-4305-ab4e-ce50f93b611a
2022-01-07 15:29:52.043 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: a732e9f4-6af3-4064-8f2e-55aea9b12a00
2022-01-07 15:29:52.056 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 7e0e66fb-95de-4b73-a6c9-a87318f7c3c0
2022-01-07 15:29:52.069 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 38459e5f-f403-4b62-8a38-7813513c49f5
2022-01-07 15:29:52.082 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 7bc7153c-003d-4bc1-8ee2-b08178df38aa
2022-01-07 15:29:52.094 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 72c9cc89-2006-449e-a4fa-c5607eccda29
2022-01-07 15:29:52.107 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 8f67ff52-e059-4b83-a3c5-01463c93a4b2
2022-01-07 15:29:52.118 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: a25c1d38-732b-4848-8d15-e01ed4ac8bb8
2022-01-07 15:29:52.129 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 87924dd6-392e-403b-9f7a-7d4f7242b31c
2022-01-07 15:29:52.130 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:29:53.127 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 15:29:53.232 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@c109954
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@10750ef0
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@26dd732d
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 15:29:53.255 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 15:30:00.000 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 15:30:00.001 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:30:00.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:30:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:30:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:30:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:30:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:30:00.005 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:30:00.005 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:30:00.006 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:30:00.006 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:30:00.006 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:30:00.007 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:30:00.007 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:30:00.007 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:30:00.008 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:30:00.008 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:30:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:30:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 15:30:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:30:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:30:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:30:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:30:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:30:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:30:00.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:30:00.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:30:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 15:30:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:30:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:30:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:30:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:30:00.015 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:30:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:30:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:30:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:30:00.039 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 89c5564c-58f2-400d-b480-062261359274
2022-01-07 15:30:00.040 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:30:00.041 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:30:00.043 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:30:00.152 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:30:00.174 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: d42bf930-8b57-483f-bb47-fdbfd9437b96
2022-01-07 15:30:00.193 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: eb609b56-772a-4e39-970e-0c591f3df97f
2022-01-07 15:30:00.210 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 8f4aa5f8-e18f-4b7b-8157-5b62d6dd91c1
2022-01-07 15:30:00.229 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 05f651bb-e22e-43cd-b4ac-a9f120d3d389
2022-01-07 15:30:00.258 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 5f6cedcc-cbc0-49fe-b891-9b7224d27cf2
2022-01-07 15:30:00.269 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 21162187-b0a4-48ff-b5c3-2778cfd6b6dd
2022-01-07 15:30:00.280 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: dd18ec91-f187-41ca-b8fc-661f941befff
2022-01-07 15:30:00.290 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 5a59d36d-31aa-4892-8d1e-358ff9ab4f49
2022-01-07 15:30:00.302 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 3ae873f5-46e8-47ce-bf51-6261ef9a3a32
2022-01-07 15:30:00.302 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:30:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:30:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:30:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:30:22.021 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:30:22.021 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:30:26.782 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:30:26.785 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:30:26.794 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:30:26.796 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:30:26.796 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:30:08.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:30:26.806 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:30:30.155 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:30:30.156 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:30:41.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:30:41.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:30:41.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:30:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:30:45.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:30:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:30:52.037 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:30:52.038 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:31:00.160 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:31:00.161 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:31:01.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:31:01.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:31:01.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:31:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:31:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:31:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:31:22.049 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:31:22.050 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:31:30.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:31:30.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:31:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:31:30.171 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:31:30.172 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:31:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:31:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:31:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:31:52.064 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:31:52.064 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:32:00.179 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:32:00.179 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:32:01.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:32:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:32:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:32:02.017 [http-nio-8080-exec-8] DEBUG c.f.s.mapper.faceRecognition.PassMapper.getData - ==>  Preparing: select * from PassTable where passTime > ? and passTime < ? ORDER BY passTime;
2022-01-07 15:32:02.018 [http-nio-8080-exec-8] DEBUG c.f.s.mapper.faceRecognition.PassMapper.getData - ==> Parameters: 2022-01-06 00:00:00.0(Timestamp), 2022-01-08 00:00:00.0(Timestamp)
2022-01-07 15:32:02.036 [http-nio-8080-exec-8] DEBUG c.f.s.mapper.faceRecognition.PassMapper.getData - <==      Total: 154
2022-01-07 15:32:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:32:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:32:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:32:18.737 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:32:18.738 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:32:18.746 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:32:18.747 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:32:18.747 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:32:00.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:32:18.755 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:32:22.073 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:32:22.074 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:32:22.433 [Thread-7] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:32:22.433 [Thread-7] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:32:22.434 [Thread-7] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:32:22.435 [Thread-7] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:32:22.436 [Thread-7] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:32:04.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:32:22.438 [Thread-7] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:32:30.187 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:32:30.187 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:32:35.475 [Thread-8] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:32:35.475 [Thread-8] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:32:35.476 [Thread-8] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:32:35.476 [Thread-8] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:32:35.477 [Thread-8] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:32:17.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:32:35.482 [Thread-8] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:32:38.150 [Thread-9] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:32:38.151 [Thread-9] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:32:38.151 [Thread-9] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:32:38.152 [Thread-9] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:32:38.152 [Thread-9] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:32:19.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:32:38.158 [Thread-9] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:32:41.380 [Thread-10] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:32:41.380 [Thread-10] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:32:41.381 [Thread-10] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:32:41.382 [Thread-10] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:32:41.382 [Thread-10] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:32:23.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:32:41.388 [Thread-10] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:32:41.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:32:41.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:32:41.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:32:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:32:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:32:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:32:46.622 [Thread-11] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:32:46.622 [Thread-11] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:32:46.623 [Thread-11] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:32:46.623 [Thread-11] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:32:46.624 [Thread-11] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:32:28.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:32:46.630 [Thread-11] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:32:52.086 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:32:52.087 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:32:54.018 [Thread-12] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:32:54.018 [Thread-12] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:32:54.025 [Thread-12] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:32:54.026 [Thread-12] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:32:54.027 [Thread-12] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:32:35.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:32:54.032 [Thread-12] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:32:57.204 [Thread-13] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:32:57.204 [Thread-13] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:32:57.205 [Thread-13] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:32:57.206 [Thread-13] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:32:57.206 [Thread-13] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:32:39.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:32:57.213 [Thread-13] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:33:00.196 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:33:00.196 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:33:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:33:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:33:01.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:33:06.271 [Thread-14] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:33:06.272 [Thread-14] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 15:33:06.273 [Thread-14] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:33:06.274 [Thread-14] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:33:06.274 [Thread-14] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@59197c80(byte[]), 2022-01-07 15:32:47.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 83(Integer)
2022-01-07 15:33:06.282 [Thread-14] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:33:12.392 [Thread-18] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:33:12.392 [Thread-18] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:33:12.394 [Thread-18] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:33:12.395 [Thread-18] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:33:12.395 [Thread-18] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:32:54.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:33:12.401 [Thread-18] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:33:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:33:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:33:15.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:33:17.102 [Thread-19] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:33:17.102 [Thread-19] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:33:17.103 [Thread-19] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:33:17.103 [Thread-19] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:33:17.104 [Thread-19] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:32:58.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:33:17.109 [Thread-19] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:33:22.092 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:33:22.093 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:33:27.443 [Thread-20] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:33:27.443 [Thread-20] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:33:27.444 [Thread-20] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:33:27.445 [Thread-20] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:33:27.445 [Thread-20] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:33:09.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:33:27.451 [Thread-20] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:33:30.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:33:30.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:33:30.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:33:30.201 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:33:30.202 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:33:31.687 [Thread-21] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:33:31.688 [Thread-21] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:33:31.689 [Thread-21] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:33:31.689 [Thread-21] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:33:31.690 [Thread-21] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:33:13.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:33:31.695 [Thread-21] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:33:36.958 [Thread-22] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:33:36.959 [Thread-22] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:33:36.959 [Thread-22] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:33:36.960 [Thread-22] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:33:36.960 [Thread-22] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:33:19.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:33:36.966 [Thread-22] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:33:41.154 [Thread-23] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:33:41.154 [Thread-23] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:33:41.155 [Thread-23] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:33:41.156 [Thread-23] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:33:41.157 [Thread-23] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:33:23.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:33:41.163 [Thread-23] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:33:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:33:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:33:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:33:49.559 [Thread-24] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:33:49.559 [Thread-24] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:33:49.560 [Thread-24] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:33:49.560 [Thread-24] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:33:49.561 [Thread-24] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:33:31.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:33:49.561 [Thread-24] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:33:52.106 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:33:52.107 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:33:52.239 [Thread-25] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:33:52.239 [Thread-25] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:33:52.240 [Thread-25] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:33:52.241 [Thread-25] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:33:52.241 [Thread-25] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:33:34.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:33:52.247 [Thread-25] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:33:57.020 [Thread-26] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:33:57.020 [Thread-26] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:33:57.022 [Thread-26] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:33:57.022 [Thread-26] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:33:57.023 [Thread-26] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:33:38.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:33:57.023 [Thread-26] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:00.212 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:34:00.212 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:34:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:34:01.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:34:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:34:04.341 [Thread-27] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:34:04.341 [Thread-27] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:34:04.349 [Thread-27] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:34:04.349 [Thread-27] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:04.350 [Thread-27] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:33:46.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:34:04.351 [Thread-27] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:10.604 [Thread-28] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:34:10.605 [Thread-28] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:34:10.606 [Thread-28] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:34:10.607 [Thread-28] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:10.607 [Thread-28] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:33:52.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:34:10.614 [Thread-28] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:34:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:34:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:34:18.900 [Thread-29] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:34:18.900 [Thread-29] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:34:18.901 [Thread-29] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:34:18.901 [Thread-29] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:18.902 [Thread-29] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:00.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:34:18.907 [Thread-29] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:21.549 [Thread-30] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:34:21.549 [Thread-30] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:34:21.550 [Thread-30] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:34:21.551 [Thread-30] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:21.551 [Thread-30] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:03.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:34:21.557 [Thread-30] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:22.110 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:34:22.110 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:34:24.199 [Thread-31] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:34:24.200 [Thread-31] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:34:24.201 [Thread-31] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:34:24.201 [Thread-31] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:24.201 [Thread-31] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:06.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:34:24.207 [Thread-31] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:27.877 [Thread-32] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:34:27.878 [Thread-32] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:34:27.878 [Thread-32] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:34:27.879 [Thread-32] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:27.879 [Thread-32] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:10.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:34:27.880 [Thread-32] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:30.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:34:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:34:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:34:30.226 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:34:30.227 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:34:30.563 [Thread-33] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:34:30.563 [Thread-33] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:34:30.564 [Thread-33] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:34:30.565 [Thread-33] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:30.565 [Thread-33] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:12.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:34:30.567 [Thread-33] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:33.235 [Thread-34] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:34:33.235 [Thread-34] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:34:33.236 [Thread-34] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:34:33.237 [Thread-34] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:33.237 [Thread-34] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:15.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:34:33.238 [Thread-34] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:38.522 [Thread-35] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:34:38.522 [Thread-35] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:34:38.524 [Thread-35] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:34:38.524 [Thread-35] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:38.525 [Thread-35] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:20.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:34:38.530 [Thread-35] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:41.727 [Thread-36] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:34:41.727 [Thread-36] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:34:41.728 [Thread-36] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:34:41.729 [Thread-36] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:41.729 [Thread-36] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:23.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:34:41.734 [Thread-36] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:34:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:34:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:34:49.557 [Thread-37] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:49.557 [Thread-37] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:31.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:34:49.558 [Thread-37] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:51.198 [Thread-38] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:51.198 [Thread-38] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:33.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:34:51.203 [Thread-38] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:34:52.124 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:34:52.125 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:34:52.827 [Thread-39] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:34:52.828 [Thread-39] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:34.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:34:52.834 [Thread-39] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:35:00.234 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:35:00.234 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:35:00.657 [Thread-40] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:35:00.657 [Thread-40] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:42.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:35:00.663 [Thread-40] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:35:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:35:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:35:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:35:04.333 [Thread-41] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:35:04.333 [Thread-41] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:35:04.341 [Thread-41] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:35:04.342 [Thread-41] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:35:04.343 [Thread-41] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:46.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:35:04.349 [Thread-41] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:35:07.499 [Thread-42] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:35:07.500 [Thread-42] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:35:07.500 [Thread-42] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:35:07.501 [Thread-42] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:35:07.501 [Thread-42] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:34:49.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:35:07.507 [Thread-42] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:35:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:35:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:35:15.020 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:35:19.354 [Thread-43] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:35:19.355 [Thread-43] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:35:19.356 [Thread-43] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:35:19.356 [Thread-43] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:35:19.357 [Thread-43] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:35:01.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:35:19.362 [Thread-43] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:35:21.025 [Thread-44] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:35:21.025 [Thread-44] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:35:21.026 [Thread-44] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:35:21.027 [Thread-44] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:35:21.027 [Thread-44] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:35:03.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:35:21.029 [Thread-44] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:35:22.137 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:35:22.138 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:35:24.765 [Thread-45] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:35:24.765 [Thread-45] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:35:24.766 [Thread-45] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:35:24.767 [Thread-45] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:35:24.767 [Thread-45] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:35:06.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:35:24.773 [Thread-45] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:35:28.517 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:35:28.518 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:35:28.519 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:35:28.520 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:35:28.520 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:35:10.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:35:28.526 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:35:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:35:30.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:35:30.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:35:30.250 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:35:30.250 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:35:30.739 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:35:30.740 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:35:30.740 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:35:30.741 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:35:30.741 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:35:12.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:35:30.748 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:35:41.315 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:35:41.315 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 15:35:41.316 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:35:41.317 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:35:41.317 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@693b8bd2(byte[]), 2022-01-07 15:35:23.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 87(Integer)
2022-01-07 15:35:41.319 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:35:45.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:35:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:35:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:35:52.142 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:35:52.143 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:35:55.147 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:35:55.147 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:35:55.148 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:35:55.149 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:35:55.149 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:35:37.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:35:55.152 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:35:58.907 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:35:58.907 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:35:40.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:35:58.913 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:36:00.257 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:36:00.258 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:36:01.664 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:36:01.664 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:35:43.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:36:01.670 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:36:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:36:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:36:01.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:36:04.897 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:36:04.897 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:35:46.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:36:04.904 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:36:07.078 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:36:07.078 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:35:48.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:36:07.084 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:36:13.438 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:36:13.439 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:35:55.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:36:13.446 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:36:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:36:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:36:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:36:15.591 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:36:15.591 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:35:57.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 15:36:15.597 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:36:22.150 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:36:22.150 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:36:29.756 [Thread-59] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:36:29.757 [Thread-59] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:36:29.764 [Thread-59] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:36:29.765 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:36:29.766 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:36:11.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:36:29.772 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:36:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:36:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:36:30.019 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:36:30.262 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:36:30.262 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:36:35.065 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:36:35.066 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:36:35.067 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:36:35.068 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:36:35.068 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:36:17.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:36:35.074 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:36:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:36:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:36:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:36:51.956 [Thread-61] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:36:51.957 [Thread-61] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:36:51.958 [Thread-61] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:36:51.958 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:36:51.959 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:36:33.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:36:51.964 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:36:52.160 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:36:52.160 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:37:00.279 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:37:00.279 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:37:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:37:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:37:01.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:37:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:37:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:37:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:37:22.164 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:37:22.164 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:37:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:37:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:37:30.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:37:30.291 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:37:30.291 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:37:37.375 [Thread-62] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:37:37.375 [Thread-62] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:37:37.382 [Thread-62] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:37:37.383 [Thread-62] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:37:37.383 [Thread-62] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:37:19.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:37:37.390 [Thread-62] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:37:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:37:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:37:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:37:48.408 [Thread-63] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:37:48.408 [Thread-63] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:37:48.409 [Thread-63] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:37:48.410 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:37:48.410 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:37:30.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:37:48.417 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:37:52.171 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:37:52.171 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:38:00.306 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:38:00.306 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:38:01.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:38:01.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:38:01.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:38:02.561 [Thread-64] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:38:02.561 [Thread-64] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 15:38:02.562 [Thread-64] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:38:02.563 [Thread-64] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:38:02.563 [Thread-64] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@2214102(byte[]), 2022-01-07 15:37:44.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 85(Integer)
2022-01-07 15:38:02.570 [Thread-64] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:38:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:38:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:38:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:38:22.186 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:38:22.186 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:38:30.323 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:38:30.323 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:38:41.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:38:41.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:38:41.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:38:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:38:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:38:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:38:45.149 [Thread-68] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:38:45.149 [Thread-68] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:38:45.158 [Thread-68] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:38:45.158 [Thread-68] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:38:45.158 [Thread-68] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:38:27.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:38:45.164 [Thread-68] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:38:52.194 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:38:52.194 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:39:00.326 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:39:00.326 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:39:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:39:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:39:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:39:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:39:15.784 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:39:15.786 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:39:22.206 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:39:22.206 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:39:30.332 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:39:30.332 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:39:41.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:39:41.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:39:41.731 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:39:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:39:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:39:45.019 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:39:45.337 [Thread-70] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:39:45.338 [Thread-70] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:39:45.346 [Thread-70] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:39:45.347 [Thread-70] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:39:45.347 [Thread-70] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:39:27.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:39:45.349 [Thread-70] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:39:52.211 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:39:52.212 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:40:00.342 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:40:00.342 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:40:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:40:01.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:40:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:40:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:40:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:40:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:40:20.936 [Thread-71] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:40:20.936 [Thread-71] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 15:40:20.939 [Thread-71] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 15:40:20.939 [Thread-71] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:40:20.940 [Thread-71] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 15:40:02.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:40:20.943 [Thread-71] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:40:22.219 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:40:22.219 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:40:30.347 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:40:30.347 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:40:41.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:40:41.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:40:41.732 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:40:44.538 [Thread-72] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:40:44.538 [Thread-72] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:40:44.545 [Thread-72] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:40:44.546 [Thread-72] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:40:44.547 [Thread-72] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 15:40:26.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:40:44.553 [Thread-72] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:40:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:40:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:40:45.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:40:52.236 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:40:52.237 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:41:00.368 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:41:00.368 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:41:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:41:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:41:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:41:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:41:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:41:15.023 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:41:22.244 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:41:22.244 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:41:30.373 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:41:30.373 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:41:41.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:41:41.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:41:41.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:41:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:41:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:41:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:41:52.258 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:41:52.258 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:51:35.803 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 15:51:36.209 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 15:51:36.564 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@33b967bd
2022-01-07 15:51:36.657 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@33b967bd
2022-01-07 15:51:36.795 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{ [/staffOperation]}: staffOperation()
	{GET [/equipment]}: equipment(Model)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{ [/history]}: history(Model)
	{ [/]}: getEquipment()
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{ [/monitor]}: monitor()
2022-01-07 15:51:36.798 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2022-01-07 15:51:36.809 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 15:51:36.842 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 15:51:37.063 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 15:51:37.064 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:51:37.064 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:51:37.064 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:51:37.064 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:51:37.064 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:51:37.064 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:51:37.064 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:51:37.065 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:51:37.065 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:51:37.065 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:51:37.065 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:51:37.065 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:51:37.065 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:51:37.065 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:51:37.065 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:51:37.065 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:51:37.065 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:51:37.065 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:51:37.066 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:51:37.331 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 7fb40d38-2c54-4bad-b0bc-965fa087d2ed
2022-01-07 15:51:37.336 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:51:37.348 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:51:37.360 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:51:37.364 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:51:37.364 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:51:37.366 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:51:37.446 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:51:37.463 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 0f1c941d-f753-404d-bb91-6ba96e145762
2022-01-07 15:51:37.474 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: 2413d775-3a68-44e0-be2d-dae5dad57b87
2022-01-07 15:51:37.485 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 8dcacf09-9da7-4a4f-a4cf-c3dd9304dbeb
2022-01-07 15:51:37.495 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 75bc3994-1f7e-4a05-ad84-8f2e96105a27
2022-01-07 15:51:37.506 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: df8d427e-815b-43d8-a734-1857af2a7f7f
2022-01-07 15:51:37.517 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 3eee2789-5dd8-47ef-b0bd-1c3c4dc47820
2022-01-07 15:51:37.528 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 9e0ccb1c-f764-4b78-9626-27d0c1ee8f5f
2022-01-07 15:51:37.539 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 09a47376-98af-4028-a1d3-379d6efd0585
2022-01-07 15:51:37.549 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 08143b3d-9bb2-4962-b835-3af7fd9ae7d2
2022-01-07 15:51:37.550 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:51:51.720 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 15:51:51.720 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:51:51.720 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:51:51.720 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:51:51.720 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:51:51.720 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:51:51.720 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:51:51.720 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:51:51.720 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:51:51.720 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:51:51.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:51:51.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:51:51.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:51:51.733 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 42657b76-d939-430b-9fce-d41fe00b9cdc
2022-01-07 15:51:51.734 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:51:51.734 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:51:51.735 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:51:51.845 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:51:51.859 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 4545bbec-c1dd-4542-bb8d-93a015ace3b6
2022-01-07 15:51:51.870 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: 8f40fe2a-a6d1-4323-92b5-33bd3b01c088
2022-01-07 15:51:51.880 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 251401d1-f1f8-4d6e-8581-b83472c88b08
2022-01-07 15:51:51.890 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 5a695749-04e3-4e43-94bc-f44cbd468910
2022-01-07 15:51:51.900 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 6025f439-696c-45a0-8354-2b1052a94dc0
2022-01-07 15:51:51.911 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: e738a0a5-7827-48ab-b062-d3cc51470670
2022-01-07 15:51:51.921 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: 28c9b883-2efb-4930-80cd-f57bf9162b16
2022-01-07 15:51:51.938 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 3767b175-56a0-4a7e-ab8a-cd0eb4345fd8
2022-01-07 15:51:51.948 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: e66bb2f0-7050-4075-8ef1-53d45e58dd76
2022-01-07 15:51:51.948 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:52:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:52:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:52:00.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:52:07.449 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:52:07.449 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:52:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:52:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:52:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:52:21.846 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:52:21.846 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:52:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:52:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:52:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:52:37.452 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:52:37.452 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:52:45.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:52:45.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:52:45.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:52:46.504 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 15:52:46.562 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@48e4744f
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4227ab03
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@174fef40
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 15:52:46.563 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 15:52:51.853 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:52:51.853 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:52:54.703 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:52:54.705 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:52:54.713 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:52:54.714 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:52:54.714 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 15:52:36.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:52:54.718 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:52:57.931 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:52:57.932 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:52:57.932 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:52:57.933 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:52:57.933 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 15:52:39.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:52:57.938 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:53:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:53:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:53:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:53:07.458 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:53:07.458 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:53:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:53:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:53:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:53:21.863 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:53:21.863 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:53:28.969 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:53:28.970 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:53:28.970 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:53:28.971 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:53:28.972 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 15:53:10.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:53:28.977 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:53:30.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:53:30.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:53:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:53:37.472 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:53:37.472 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:53:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:53:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:53:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:53:51.875 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:53:51.875 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:54:01.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:54:01.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:54:01.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:54:07.476 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:54:07.476 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:54:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:54:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:54:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:54:21.886 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:54:21.886 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:54:37.490 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:54:37.490 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:54:41.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:54:41.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:54:41.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:54:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:54:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:54:45.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:54:51.896 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:54:51.896 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:55:01.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:55:01.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:55:01.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:55:07.504 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:55:07.504 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:55:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:55:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:55:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:55:21.909 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:55:21.909 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:55:37.507 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:55:37.507 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:55:41.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:55:41.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:55:41.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:55:45.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:55:45.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:55:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:55:51.917 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:55:51.917 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:56:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:56:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:56:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:56:07.509 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:56:07.509 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:56:10.212 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:56:10.212 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:56:10.219 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:56:10.220 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:56:10.220 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 15:55:51.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:56:10.227 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:56:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:56:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:56:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:56:21.924 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:56:21.924 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:56:25.547 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:56:25.547 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:56:25.548 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:56:25.548 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:56:25.549 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 15:56:07.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:56:25.554 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:56:28.765 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:56:28.765 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:56:28.766 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:56:28.766 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:56:28.766 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 15:56:10.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:56:28.772 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:56:32.479 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 15:56:32.479 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 15:56:32.479 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 15:56:32.480 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 15:56:32.480 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 15:56:14.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 15:56:32.486 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 15:56:37.521 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:56:37.521 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:56:41.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:56:41.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:56:41.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:56:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:56:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:56:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:56:51.931 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:56:51.931 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:57:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:57:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:57:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:57:07.525 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:57:07.525 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:57:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:57:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:57:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:57:21.932 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:57:21.932 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:57:37.540 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:57:37.540 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:57:41.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:57:41.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:57:41.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:57:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:57:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:57:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:57:51.946 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:57:51.946 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:58:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:58:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:58:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:58:07.552 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:58:07.552 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:58:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:58:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:58:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:58:21.954 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:58:21.954 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:58:30.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:58:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:58:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:58:37.565 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:58:37.565 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:58:45.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:58:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:58:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:58:51.956 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:58:51.956 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:58:57.135 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:58:57.135 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 7fb40d38-2c54-4bad-b0bc-965fa087d2ed: (connection evicted)
2022-01-07 15:58:57.135 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: 0f1c941d-f753-404d-bb91-6ba96e145762: (connection evicted)
2022-01-07 15:58:57.136 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: 2413d775-3a68-44e0-be2d-dae5dad57b87: (connection evicted)
2022-01-07 15:58:57.136 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 8dcacf09-9da7-4a4f-a4cf-c3dd9304dbeb: (connection evicted)
2022-01-07 15:58:57.136 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 75bc3994-1f7e-4a05-ad84-8f2e96105a27: (connection evicted)
2022-01-07 15:58:57.136 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: df8d427e-815b-43d8-a734-1857af2a7f7f: (connection evicted)
2022-01-07 15:58:57.136 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: 3eee2789-5dd8-47ef-b0bd-1c3c4dc47820: (connection evicted)
2022-01-07 15:58:57.136 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: 9e0ccb1c-f764-4b78-9626-27d0c1ee8f5f: (connection evicted)
2022-01-07 15:58:57.136 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: 09a47376-98af-4028-a1d3-379d6efd0585: (connection evicted)
2022-01-07 15:58:57.136 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: 08143b3d-9bb2-4962-b835-3af7fd9ae7d2: (connection evicted)
2022-01-07 15:58:57.136 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 15:58:57.136 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:58:57.136 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: 42657b76-d939-430b-9fce-d41fe00b9cdc: (connection evicted)
2022-01-07 15:58:57.137 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 4545bbec-c1dd-4542-bb8d-93a015ace3b6: (connection evicted)
2022-01-07 15:58:57.137 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: 8f40fe2a-a6d1-4323-92b5-33bd3b01c088: (connection evicted)
2022-01-07 15:58:57.137 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: 251401d1-f1f8-4d6e-8581-b83472c88b08: (connection evicted)
2022-01-07 15:58:57.137 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: 5a695749-04e3-4e43-94bc-f44cbd468910: (connection evicted)
2022-01-07 15:58:57.137 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: 6025f439-696c-45a0-8354-2b1052a94dc0: (connection evicted)
2022-01-07 15:58:57.137 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: e738a0a5-7827-48ab-b062-d3cc51470670: (connection evicted)
2022-01-07 15:58:57.137 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: 28c9b883-2efb-4930-80cd-f57bf9162b16: (connection evicted)
2022-01-07 15:58:57.137 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: 3767b175-56a0-4a7e-ab8a-cd0eb4345fd8: (connection evicted)
2022-01-07 15:58:57.137 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: e66bb2f0-7050-4075-8ef1-53d45e58dd76: (connection evicted)
2022-01-07 15:58:57.137 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 15:58:59.389 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 15:58:59.825 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 15:59:00.180 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@910245d
2022-01-07 15:59:00.275 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@910245d
2022-01-07 15:59:00.409 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{ [/]}: getEquipment()
	{ [/staffOperation]}: staffOperation()
	{GET [/equipment]}: equipment(Model)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{ [/equipment/getData]}: getEquipmentData()
	{ [/history]}: history(Model)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
2022-01-07 15:59:00.412 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2022-01-07 15:59:00.422 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 15:59:00.455 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 15:59:00.680 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 15:59:00.681 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:59:00.682 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:59:00.682 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:59:00.682 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:59:00.682 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:59:00.682 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:59:00.682 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:59:00.682 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:59:00.682 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:59:00.682 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:59:00.682 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:59:00.682 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:59:00.683 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 15:59:00.684 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:59:00.684 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:59:00.684 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:59:00.684 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:59:00.684 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:59:00.684 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:59:00.684 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:59:00.684 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:59:00.959 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 924b146a-f8bd-481c-b477-25dbc8d520a3
2022-01-07 15:59:00.964 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:59:00.976 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:59:00.987 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:59:00.991 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 15:59:00.991 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 15:59:00.993 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 15:59:01.066 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:59:01.082 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 221bd19e-d5ca-48bb-bf86-e284ae4c13a0
2022-01-07 15:59:01.093 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: bb5321ec-01f8-4651-894e-dd4be7558072
2022-01-07 15:59:01.104 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 34eb5711-d9ce-4e6e-b4bc-faf2be36993d
2022-01-07 15:59:01.114 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 3d850dfd-0bea-4e51-a5ea-7acf5d81fcf5
2022-01-07 15:59:01.125 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: c87c5d56-a989-4a0c-be07-5e2f8d04654e
2022-01-07 15:59:01.135 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 78b411c5-b7cb-4a89-96ba-b96c2e0c5272
2022-01-07 15:59:01.146 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 65d2daba-025d-4145-a6f6-7af0de07d672
2022-01-07 15:59:01.156 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: b5039b73-79fe-465f-a2a3-fec21579b68e
2022-01-07 15:59:01.166 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: aa0779bc-80e3-4500-8586-c3476a3fdf58
2022-01-07 15:59:01.166 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:59:15.008 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 15:59:15.008 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 15:59:15.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 15:59:15.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 15:59:15.022 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 35f25cba-ad39-49ba-bf96-013179d8895c
2022-01-07 15:59:15.022 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:59:15.022 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:59:15.023 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:59:15.132 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 15:59:15.147 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 05c6e4c6-c148-41b5-81c1-482b51201679
2022-01-07 15:59:15.158 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: c167a2e9-2c5f-4e6b-a32d-c27deab0aec1
2022-01-07 15:59:15.169 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: d5f7c364-7c3d-4ec1-8421-a951b2ecee5a
2022-01-07 15:59:15.179 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: b87020d7-5be7-4caf-b5b1-b2708df54c59
2022-01-07 15:59:15.190 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: e7b708cd-03b7-42da-b9c1-53c084538ee1
2022-01-07 15:59:15.199 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 84624842-bf42-4ebf-8f7b-9bf593b65e30
2022-01-07 15:59:15.216 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: 2d8af040-d7d8-4497-ba7f-f22b7b3891da
2022-01-07 15:59:15.227 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: b07d061f-0f67-466c-b3c9-57519573b477
2022-01-07 15:59:15.237 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: d45b5876-7772-4a8e-8049-655a373937dc
2022-01-07 15:59:15.237 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:59:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:59:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:59:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:59:31.081 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:59:31.081 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 15:59:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 15:59:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 15:59:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 15:59:45.140 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 15:59:45.140 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:00:01.086 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:00:01.086 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:00:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:00:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:00:01.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:00:05.184 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 16:00:05.245 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@540ea4e9
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@24be832b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2eddeebf
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 16:00:05.246 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 16:00:11.329 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:00:11.331 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:00:11.341 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:00:11.342 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:00:11.343 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 15:59:53.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:00:11.352 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:00:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:00:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:00:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:00:15.142 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:00:15.142 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:00:15.650 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:00:15.650 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:00:15.658 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:00:15.658 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:00:15.659 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 15:59:57.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:00:15.665 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:00:25.086 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:00:25.086 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:00:25.087 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:00:25.087 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:00:25.088 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:00:06.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:00:25.093 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:00:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:00:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:00:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:00:31.093 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:00:31.093 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:00:43.785 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:00:43.785 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:00:43.786 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:00:43.786 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:00:43.787 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:00:25.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:00:43.792 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:00:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:00:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:00:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:00:45.150 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:00:45.150 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:00:47.557 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:00:47.557 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:00:47.558 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:00:47.558 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:00:47.559 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:00:29.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:00:47.564 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:00:50.291 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:00:50.291 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:00:50.292 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:00:50.292 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:00:50.293 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:00:32.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:00:50.298 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:01:00.846 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:01:00.846 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:01:00.847 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:01:00.848 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:01:00.848 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:00:42.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:01:00.853 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:01:01.103 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:01:01.103 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:01:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:01:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:01:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:01:03.015 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:01:03.015 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:01:03.016 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:01:03.017 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:01:03.017 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:00:44.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:01:03.023 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:01:05.696 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:01:05.696 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:01:05.696 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:01:05.697 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:01:05.697 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:00:47.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:01:05.702 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:01:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:01:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:01:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:01:15.157 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:01:15.157 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:01:31.106 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:01:31.106 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:01:32.895 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:01:32.896 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:01:32.903 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:01:32.904 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:01:32.904 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:01:14.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:01:32.906 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:01:37.247 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:01:37.248 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:01:37.248 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:01:37.249 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:01:37.249 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:01:19.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:01:37.255 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:01:41.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:01:41.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:01:41.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:01:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:01:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:01:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:01:45.166 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:01:45.166 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:02:01.114 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:02:01.114 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:02:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:02:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:02:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:02:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:02:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:02:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:02:15.170 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:02:15.170 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:02:31.119 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:02:31.119 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:02:41.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:02:41.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:02:41.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:02:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:02:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:02:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:02:45.181 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:02:45.181 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:03:01.127 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:03:01.127 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:03:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:03:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:03:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:03:07.054 [Thread-58] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:03:07.054 [Thread-58] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:03:07.062 [Thread-58] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:03:07.063 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:03:07.063 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:02:48.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:03:07.070 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:03:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:03:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:03:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:03:15.183 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:03:15.183 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:03:31.136 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:03:31.136 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:03:40.496 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:03:40.496 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:03:40.503 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:03:40.504 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:03:40.504 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:03:22.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:03:40.511 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:03:41.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:03:41.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:03:41.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:03:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:03:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:03:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:03:45.194 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:03:45.194 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:04:01.151 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:04:01.151 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:04:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:04:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:04:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:04:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:04:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:04:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:04:15.205 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:04:15.205 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:04:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:04:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:04:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:04:31.152 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:04:31.152 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:04:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:04:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:04:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:04:45.214 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:04:45.214 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:05:01.160 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:05:01.160 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:05:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:05:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:05:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:05:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:05:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:05:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:05:15.229 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:05:15.229 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:05:31.166 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:05:31.166 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:05:41.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:05:41.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:05:41.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:05:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:05:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:05:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:05:45.232 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:05:45.232 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:06:01.173 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:06:01.173 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:06:01.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:06:01.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:06:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:06:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:06:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:06:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:06:15.238 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:06:15.238 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:06:31.182 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:06:31.182 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:06:41.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:06:41.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:06:41.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:06:45.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:06:45.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:06:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:06:45.249 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:06:45.249 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:07:01.184 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:07:01.184 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:07:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:07:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:07:01.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:07:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:07:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:07:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:07:15.260 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:07:15.260 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:07:31.191 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:07:31.191 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:07:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:07:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:07:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:07:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:07:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:07:45.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:07:45.265 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:07:45.265 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:07:53.233 [Thread-62] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:07:53.233 [Thread-62] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:07:53.240 [Thread-62] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:07:53.241 [Thread-62] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:07:53.242 [Thread-62] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:07:34.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:07:53.248 [Thread-62] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:08:01.205 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:08:01.205 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:08:01.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:08:01.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:08:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:08:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:08:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:08:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:08:15.273 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:08:15.273 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:08:30.641 [Thread-63] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:08:30.641 [Thread-63] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:08:30.642 [Thread-63] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:08:30.642 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:08:30.642 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:08:12.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:08:30.648 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:08:31.211 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:08:31.211 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:08:41.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:08:41.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:08:41.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:08:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:08:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:08:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:08:45.287 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:08:45.287 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:09:01.218 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:09:01.218 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:09:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:09:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:09:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:09:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:09:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:09:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:09:15.302 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:09:15.302 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:09:30.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:09:30.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:09:30.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:09:31.223 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:09:31.223 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:09:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:09:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:09:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:09:45.317 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:09:45.317 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:10:01.230 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:10:01.230 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:10:01.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:10:01.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:10:01.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:10:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:10:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:10:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:10:15.324 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:10:15.324 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:10:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:10:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:10:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:10:31.238 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:10:31.238 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:10:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:10:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:10:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:10:45.335 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:10:45.335 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:11:01.246 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:11:01.246 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:11:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:11:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:11:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:11:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:11:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:11:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:11:15.337 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:11:15.337 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:11:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:11:30.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:11:30.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:11:31.252 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:11:31.252 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:11:36.301 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:11:36.302 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 924b146a-f8bd-481c-b477-25dbc8d520a3: (connection evicted)
2022-01-07 16:11:36.302 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: 221bd19e-d5ca-48bb-bf86-e284ae4c13a0: (connection evicted)
2022-01-07 16:11:36.302 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: bb5321ec-01f8-4651-894e-dd4be7558072: (connection evicted)
2022-01-07 16:11:36.302 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 34eb5711-d9ce-4e6e-b4bc-faf2be36993d: (connection evicted)
2022-01-07 16:11:36.302 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 3d850dfd-0bea-4e51-a5ea-7acf5d81fcf5: (connection evicted)
2022-01-07 16:11:36.302 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: c87c5d56-a989-4a0c-be07-5e2f8d04654e: (connection evicted)
2022-01-07 16:11:36.302 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: 78b411c5-b7cb-4a89-96ba-b96c2e0c5272: (connection evicted)
2022-01-07 16:11:36.302 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: 65d2daba-025d-4145-a6f6-7af0de07d672: (connection evicted)
2022-01-07 16:11:36.302 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: b5039b73-79fe-465f-a2a3-fec21579b68e: (connection evicted)
2022-01-07 16:11:36.302 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: aa0779bc-80e3-4500-8586-c3476a3fdf58: (connection evicted)
2022-01-07 16:11:36.303 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:11:36.303 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:11:36.303 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: 35f25cba-ad39-49ba-bf96-013179d8895c: (connection evicted)
2022-01-07 16:11:36.303 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 05c6e4c6-c148-41b5-81c1-482b51201679: (connection evicted)
2022-01-07 16:11:36.303 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: c167a2e9-2c5f-4e6b-a32d-c27deab0aec1: (connection evicted)
2022-01-07 16:11:36.303 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: d5f7c364-7c3d-4ec1-8421-a951b2ecee5a: (connection evicted)
2022-01-07 16:11:36.304 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: b87020d7-5be7-4caf-b5b1-b2708df54c59: (connection evicted)
2022-01-07 16:11:36.304 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: e7b708cd-03b7-42da-b9c1-53c084538ee1: (connection evicted)
2022-01-07 16:11:36.304 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: 84624842-bf42-4ebf-8f7b-9bf593b65e30: (connection evicted)
2022-01-07 16:11:36.304 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: 2d8af040-d7d8-4497-ba7f-f22b7b3891da: (connection evicted)
2022-01-07 16:11:36.304 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: b07d061f-0f67-466c-b3c9-57519573b477: (connection evicted)
2022-01-07 16:11:36.304 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: d45b5876-7772-4a8e-8049-655a373937dc: (connection evicted)
2022-01-07 16:11:36.304 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:11:38.790 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 16:11:39.209 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 16:11:39.605 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1ae4e221
2022-01-07 16:11:39.716 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1ae4e221
2022-01-07 16:11:39.855 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{ [/monitor]}: monitor()
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{ [/history]}: history(Model)
	{ [/staffOperation]}: staffOperation()
	{GET [/equipment]}: equipment(Model)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{ [/]}: getEquipment()
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
2022-01-07 16:11:39.858 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2022-01-07 16:11:39.868 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 16:11:39.902 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 16:11:40.136 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 16:11:40.137 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:11:40.137 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:11:40.137 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:11:40.137 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:11:40.138 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:11:40.138 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:11:40.138 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:11:40.138 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:11:40.138 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:11:40.138 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:11:40.138 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:11:40.138 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:11:40.138 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 16:11:40.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:11:40.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:11:40.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:11:40.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:11:40.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:11:40.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:11:40.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:11:40.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:11:40.411 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: a357ef90-5aed-41e5-8469-d565bb7ae8fe
2022-01-07 16:11:40.416 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:11:40.428 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:11:40.440 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:11:40.444 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:11:40.444 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:11:40.445 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:11:40.515 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:11:40.531 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: fd0ae60d-9833-41ff-8925-6828dec0725b
2022-01-07 16:11:40.542 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: e0128139-57ee-4ad9-a654-b207107703bb
2022-01-07 16:11:40.553 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 139d0f54-19f1-4a8c-80b8-8e9ebe2c9cfb
2022-01-07 16:11:40.563 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 72e222b3-374e-48cd-9489-cafcad348ed5
2022-01-07 16:11:40.573 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 476530fd-2d10-4c6e-a90a-4f4b16bd0a6f
2022-01-07 16:11:40.584 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 27554966-d2cc-4866-b16d-609039353d1b
2022-01-07 16:11:40.594 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 1e9d5569-3e80-462b-b5f8-bdbc11e19497
2022-01-07 16:11:40.604 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: a7cd48c9-f79b-4a4b-bc28-6432a8cc9872
2022-01-07 16:11:40.614 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 407beebf-cab5-4337-b0d4-dfe283462385
2022-01-07 16:11:40.614 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:11:45.001 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:11:45.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:11:45.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:11:45.016 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 7a25ac63-7bd4-4b43-84c5-2ce167e9ae3a
2022-01-07 16:11:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:11:45.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:11:45.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:11:45.129 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:11:45.142 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 380e7403-0fc7-449b-82b8-57e85703b60b
2022-01-07 16:11:45.154 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: b16174a7-2e11-4880-918e-3a52548f302c
2022-01-07 16:11:45.166 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: c53ea9d6-64b8-44c4-965a-12273761a605
2022-01-07 16:11:45.178 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 30841511-ff2a-4503-9c46-fac15581feaa
2022-01-07 16:11:45.190 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 6be170a1-bc4b-4ade-ac6f-4314679f4478
2022-01-07 16:11:45.201 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 98f11cab-093f-4396-b741-2617dfecd072
2022-01-07 16:11:45.213 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: e5cbb95f-d985-4b49-8560-08b938b6a93f
2022-01-07 16:11:45.225 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: aa923af9-4b0c-418a-9075-3a7c6f9a7d17
2022-01-07 16:11:45.236 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 0d60513a-16a1-4e7e-a188-eac48d1f6f82
2022-01-07 16:11:45.237 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:11:54.634 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 16:11:54.690 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3e0254b0
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2b54afa6
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2e44947a
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 16:11:54.691 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 16:12:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:12:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:12:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:12:02.854 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:12:02.856 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:12:02.865 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:12:02.866 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:12:02.867 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:11:44.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:12:02.875 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:12:10.519 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:12:10.519 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:12:11.374 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:12:11.374 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:12:11.375 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:12:11.376 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:12:11.376 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:11:53.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:12:11.382 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:12:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:12:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:12:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:12:15.089 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:12:15.089 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:12:15.090 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:12:15.090 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:12:15.091 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:11:56.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:12:15.096 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:12:15.138 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:12:15.138 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:12:18.318 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:12:18.319 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:12:18.326 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:12:18.327 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:12:18.328 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:12:00.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:12:18.334 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:12:24.153 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:12:24.153 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:12:24.154 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:12:24.154 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:12:24.155 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:12:06.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:12:24.156 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:12:28.936 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:12:28.936 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 16:12:28.939 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 16:12:28.940 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:12:28.940 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 16:12:10.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:12:28.946 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:12:34.800 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:12:34.801 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:12:34.801 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:12:34.802 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:12:34.802 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:12:16.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:12:34.807 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:12:40.531 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:12:40.531 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:12:41.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:12:41.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:12:41.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:12:42.175 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:12:42.175 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:12:42.176 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:12:42.176 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:12:42.177 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:12:24.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:12:42.183 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:12:44.904 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:12:44.904 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:12:44.905 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:12:44.905 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:12:44.906 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:12:26.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:12:44.911 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:12:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:12:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:12:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:12:45.151 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:12:45.151 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:12:47.104 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:12:47.104 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:12:47.105 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:12:47.106 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:12:47.106 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:12:29.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:12:47.111 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:13:01.272 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:13:01.273 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:13:01.274 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:13:01.274 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:13:01.275 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:12:43.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:13:01.280 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:13:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:13:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:13:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:13:10.539 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:13:10.539 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:13:13.396 [Thread-58] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:13:13.396 [Thread-58] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:13:13.397 [Thread-58] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:13:13.397 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:13:13.398 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:12:55.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:13:13.398 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:13:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:13:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:13:15.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:13:15.156 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:13:15.156 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:13:16.667 [Thread-59] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:13:16.668 [Thread-59] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:13:16.668 [Thread-59] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:13:16.669 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:13:16.669 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:12:58.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:13:16.674 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:13:22.478 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:13:22.478 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:13:22.487 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:13:22.487 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:13:22.488 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:13:04.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:13:22.494 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:13:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:13:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:13:30.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:13:40.546 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:13:40.546 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:13:45.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:13:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:13:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:13:45.159 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:13:45.159 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:13:55.303 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:13:55.304 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: a357ef90-5aed-41e5-8469-d565bb7ae8fe: (connection evicted)
2022-01-07 16:13:55.304 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: fd0ae60d-9833-41ff-8925-6828dec0725b: (connection evicted)
2022-01-07 16:13:55.304 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: e0128139-57ee-4ad9-a654-b207107703bb: (connection evicted)
2022-01-07 16:13:55.304 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 139d0f54-19f1-4a8c-80b8-8e9ebe2c9cfb: (connection evicted)
2022-01-07 16:13:55.304 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 72e222b3-374e-48cd-9489-cafcad348ed5: (connection evicted)
2022-01-07 16:13:55.304 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: 476530fd-2d10-4c6e-a90a-4f4b16bd0a6f: (connection evicted)
2022-01-07 16:13:55.304 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: 27554966-d2cc-4866-b16d-609039353d1b: (connection evicted)
2022-01-07 16:13:55.304 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: 1e9d5569-3e80-462b-b5f8-bdbc11e19497: (connection evicted)
2022-01-07 16:13:55.304 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: a7cd48c9-f79b-4a4b-bc28-6432a8cc9872: (connection evicted)
2022-01-07 16:13:55.304 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: 407beebf-cab5-4337-b0d4-dfe283462385: (connection evicted)
2022-01-07 16:13:55.305 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:13:55.305 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:13:55.305 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: 7a25ac63-7bd4-4b43-84c5-2ce167e9ae3a: (connection evicted)
2022-01-07 16:13:55.305 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 380e7403-0fc7-449b-82b8-57e85703b60b: (connection evicted)
2022-01-07 16:13:55.305 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: b16174a7-2e11-4880-918e-3a52548f302c: (connection evicted)
2022-01-07 16:13:55.305 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: c53ea9d6-64b8-44c4-965a-12273761a605: (connection evicted)
2022-01-07 16:13:55.306 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: 30841511-ff2a-4503-9c46-fac15581feaa: (connection evicted)
2022-01-07 16:13:55.306 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: 6be170a1-bc4b-4ade-ac6f-4314679f4478: (connection evicted)
2022-01-07 16:13:55.306 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: 98f11cab-093f-4396-b741-2617dfecd072: (connection evicted)
2022-01-07 16:13:55.306 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: e5cbb95f-d985-4b49-8560-08b938b6a93f: (connection evicted)
2022-01-07 16:13:55.306 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: aa923af9-4b0c-418a-9075-3a7c6f9a7d17: (connection evicted)
2022-01-07 16:13:55.306 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: 0d60513a-16a1-4e7e-a188-eac48d1f6f82: (connection evicted)
2022-01-07 16:13:55.306 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:13:57.583 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 16:13:58.001 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 16:13:58.354 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@33b967bd
2022-01-07 16:13:58.446 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@33b967bd
2022-01-07 16:13:58.583 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{ [/staffOperation]}: staffOperation()
	{GET [/equipment]}: equipment(Model)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{ [/history]}: history(Model)
	{ [/]}: getEquipment()
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{ [/equipment/getData]}: getEquipmentData()
2022-01-07 16:13:58.585 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2022-01-07 16:13:58.596 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 16:13:58.629 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 16:13:58.853 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 16:13:58.854 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:13:58.854 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:13:58.854 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:13:58.854 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:13:58.854 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:13:58.855 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:13:58.855 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:13:58.855 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:13:58.855 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:13:58.855 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:13:58.855 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:13:58.855 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:13:58.855 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:13:58.855 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:13:58.855 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:13:58.856 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:13:58.857 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:13:58.857 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:13:58.857 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:13:58.857 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:13:58.857 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:13:59.122 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 0d8d0e7f-43e7-48d0-8053-3d51bd7b3c73
2022-01-07 16:13:59.127 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:13:59.138 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:13:59.149 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:13:59.153 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:13:59.154 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:13:59.155 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:13:59.227 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:13:59.243 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: fadc3f7a-f435-4c45-a46e-ec3137967670
2022-01-07 16:13:59.254 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: b4221fed-199e-404f-a774-6488d9ed4efc
2022-01-07 16:13:59.265 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: ccda13bd-a64f-40c7-b242-dfcb23f54708
2022-01-07 16:13:59.277 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 2e1c1004-148b-4c15-9f5f-4b2f41cba3ba
2022-01-07 16:13:59.287 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 70c73068-1198-443e-a49f-6bb59fc78b07
2022-01-07 16:13:59.298 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 0bc8f803-d911-4da9-85ee-b1bf6e35d447
2022-01-07 16:13:59.309 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: bf4258be-bdb8-4027-add6-3058ef59a1c5
2022-01-07 16:13:59.319 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 0d923c69-9550-42df-83df-6765b2dd084f
2022-01-07 16:13:59.329 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: d71a4a98-c075-45ab-8d62-d74ec3fa37a0
2022-01-07 16:13:59.329 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:14:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 16:14:00.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:14:00.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:14:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:14:00.028 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: d0eb23ae-b93d-4c26-8dd9-0ed4934f963a
2022-01-07 16:14:00.029 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:14:00.029 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:14:00.029 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:14:00.133 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:14:00.147 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: bf74c161-1219-4367-9a5c-9f3e643631f4
2022-01-07 16:14:00.159 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: 7dbb08bc-8451-4b7d-a2f8-8de1ef7bfd72
2022-01-07 16:14:00.169 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 0e257aa6-35a4-4e52-bfae-e5462371d08e
2022-01-07 16:14:00.180 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 071ca0b3-7b3a-4bd8-90d4-e3543058f803
2022-01-07 16:14:00.190 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 6d1a5c0f-9c16-4a87-b3e3-72ba3adf37f1
2022-01-07 16:14:00.201 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 5b53e381-e478-4f8a-8fc8-da3a9a157e27
2022-01-07 16:14:00.211 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: b281d0c2-3c70-42a5-9c30-1550ca26fc59
2022-01-07 16:14:00.221 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 52790871-6cb8-4e3c-a2a3-47d275b07932
2022-01-07 16:14:00.232 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: fba2cf45-e1cd-4691-b340-c4f859fe9090
2022-01-07 16:14:00.232 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:14:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:14:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:14:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:14:23.030 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 16:14:23.089 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@7abe0ea7
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2de6c46c
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@59cf7548
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 16:14:23.090 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 16:14:29.241 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:14:29.241 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:14:30.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:14:30.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:14:30.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:14:30.138 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:14:30.138 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:14:42.135 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:14:42.137 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:14:42.146 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:14:42.148 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:14:42.148 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:14:24.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:14:42.152 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:14:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:14:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:14:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:14:50.653 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:14:50.653 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:14:50.655 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:14:50.655 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:14:50.655 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:14:32.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:14:50.660 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:14:55.466 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:14:55.467 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:14:55.467 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:14:55.468 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:14:55.468 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:14:37.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:14:55.473 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:14:59.250 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:14:59.250 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:15:00.148 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:15:00.148 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:15:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:15:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:15:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:15:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:15:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:15:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:15:15.922 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:15:15.922 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:15:15.923 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:15:15.924 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:15:15.924 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:14:57.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:15:15.930 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:15:19.146 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:15:19.146 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:15:19.147 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:15:19.147 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:15:19.148 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:15:01.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:15:19.151 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:15:26.011 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:15:26.011 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 16:15:26.013 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 16:15:26.014 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:15:26.014 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 16:15:07.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:15:26.020 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:15:29.255 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:15:29.255 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:15:30.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:15:30.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:15:30.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:15:30.158 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:15:30.158 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:15:37.041 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:15:37.041 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:15:37.049 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:15:37.051 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:15:37.051 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:15:18.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:15:37.058 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:15:43.479 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:15:43.479 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 16:15:43.480 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 16:15:43.481 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:15:43.482 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 16:15:25.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:15:43.488 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:15:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:15:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:15:45.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:15:59.267 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:15:59.267 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:16:00.169 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:16:00.169 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:16:00.801 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:00.801 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 16:15:42.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 16:16:00.808 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:01.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:16:01.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:16:01.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:16:02.471 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:02.472 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 16:15:44.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 16:16:02.473 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:05.716 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:05.717 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 16:15:47.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 16:16:05.722 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:06.873 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:06.873 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 16:15:49.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 16:16:06.878 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:11.114 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:11.115 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 16:15:52.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 16:16:11.120 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:12.755 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:12.755 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 16:15:54.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 16:16:12.761 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:16:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:16:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:16:15.960 [Thread-62] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:15.960 [Thread-62] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 16:15:57.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 16:16:15.966 [Thread-62] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:19.201 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:19.203 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 16:16:01.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 16:16:19.208 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:23.438 [Thread-64] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:23.438 [Thread-64] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 16:16:05.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 16:16:23.443 [Thread-64] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:29.281 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:16:29.281 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:16:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:16:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:16:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:16:30.180 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:16:30.180 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:16:36.593 [Thread-65] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:16:36.593 [Thread-65] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 16:16:36.593 [Thread-65] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 16:16:36.594 [Thread-65] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:36.594 [Thread-65] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 16:16:18.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:16:36.595 [Thread-65] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:43.432 [Thread-66] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:16:43.432 [Thread-66] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 16:16:43.439 [Thread-66] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 16:16:43.439 [Thread-66] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:43.440 [Thread-66] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 16:16:25.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:16:43.441 [Thread-66] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:16:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:16:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:16:58.082 [Thread-67] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:16:58.082 [Thread-67] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 16:16:58.083 [Thread-67] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 16:16:58.084 [Thread-67] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:16:58.084 [Thread-67] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@4a214dc8(byte[]), 2022-01-07 16:16:39.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 82(Integer)
2022-01-07 16:16:58.090 [Thread-67] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:16:59.283 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:16:59.283 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:17:00.184 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:17:00.184 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:17:01.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:17:01.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:17:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:17:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:17:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:17:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:17:29.285 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:17:29.285 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:17:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:17:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:17:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:17:30.187 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:17:30.187 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:17:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:17:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:17:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:17:59.295 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:17:59.295 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:18:00.193 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:18:00.193 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:18:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:18:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:18:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:18:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:18:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:18:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:18:29.299 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:18:29.299 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:18:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:18:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:18:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:18:30.199 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:18:30.199 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:18:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:18:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:18:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:18:59.306 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:18:59.306 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:19:00.202 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:19:00.202 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:19:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:19:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:19:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:19:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:19:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:19:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:19:19.800 [Thread-71] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:19:19.800 [Thread-71] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:19:19.800 [Thread-71] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:19:19.800 [Thread-71] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:19:19.800 [Thread-71] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:19:01.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:19:19.818 [Thread-71] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:19:29.317 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:19:29.317 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:19:30.205 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:19:30.205 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:19:41.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:19:41.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:19:41.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:19:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:19:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:19:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:19:50.722 [Thread-72] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:19:50.722 [Thread-72] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:19:50.722 [Thread-72] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:19:50.722 [Thread-72] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:19:50.722 [Thread-72] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:19:32.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:19:50.727 [Thread-72] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:19:59.123 [Thread-73] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:19:59.123 [Thread-73] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:19:59.123 [Thread-73] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:19:59.139 [Thread-73] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:19:59.139 [Thread-73] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:19:41.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:19:59.139 [Thread-73] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:19:59.330 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:19:59.330 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:20:00.207 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:20:00.207 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:20:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:20:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:20:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:20:07.059 [Thread-74] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:20:07.059 [Thread-74] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 16:20:07.059 [Thread-74] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 16:20:07.059 [Thread-74] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:20:07.059 [Thread-74] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 16:19:49.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:20:07.071 [Thread-74] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:20:11.301 [Thread-75] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:20:11.301 [Thread-75] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:20:11.301 [Thread-75] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:20:11.301 [Thread-75] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:20:11.301 [Thread-75] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:19:52.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:20:11.310 [Thread-75] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:20:15.002 [Thread-76] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:20:15.002 [Thread-76] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:20:15.002 [Thread-76] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:20:15.002 [Thread-76] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:20:15.002 [Thread-76] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:19:56.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:20:15.012 [Thread-76] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:20:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:20:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:20:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:20:20.273 [Thread-77] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:20:20.273 [Thread-77] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:20:20.273 [Thread-77] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:20:20.273 [Thread-77] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:20:20.273 [Thread-77] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:20:01.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:20:20.290 [Thread-77] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:20:26.066 [Thread-78] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:20:26.066 [Thread-78] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:20:26.066 [Thread-78] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:20:26.066 [Thread-78] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:20:26.066 [Thread-78] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:20:07.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:20:26.075 [Thread-78] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:20:29.334 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:20:29.334 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:20:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:20:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:20:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:20:30.208 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:20:30.208 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:20:38.479 [Thread-79] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:20:38.479 [Thread-79] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 16:20:38.479 [Thread-79] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 16:20:38.479 [Thread-79] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:20:38.479 [Thread-79] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@15222b8b(byte[]), 2022-01-07 16:20:20.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 85(Integer)
2022-01-07 16:20:38.488 [Thread-79] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:20:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:20:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:20:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:20:59.336 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:20:59.336 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:21:00.208 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:21:00.208 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:21:01.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:21:01.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:21:01.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:21:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:21:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:21:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:21:29.342 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:21:29.342 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:21:30.223 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:21:30.223 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:21:41.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:21:41.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:21:41.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:21:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:21:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:21:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:21:59.343 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:21:59.343 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:22:00.237 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:22:00.237 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:22:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:22:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:22:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:22:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:22:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:22:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:22:29.353 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:22:29.353 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:22:30.249 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:22:30.249 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:22:31.841 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:22:31.841 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 0d8d0e7f-43e7-48d0-8053-3d51bd7b3c73: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: fadc3f7a-f435-4c45-a46e-ec3137967670: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: b4221fed-199e-404f-a774-6488d9ed4efc: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: ccda13bd-a64f-40c7-b242-dfcb23f54708: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 2e1c1004-148b-4c15-9f5f-4b2f41cba3ba: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: 70c73068-1198-443e-a49f-6bb59fc78b07: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: 0bc8f803-d911-4da9-85ee-b1bf6e35d447: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: bf4258be-bdb8-4027-add6-3058ef59a1c5: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: 0d923c69-9550-42df-83df-6765b2dd084f: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: d71a4a98-c075-45ab-8d62-d74ec3fa37a0: (connection evicted)
2022-01-07 16:22:31.841 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:22:31.841 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:22:31.841 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: d0eb23ae-b93d-4c26-8dd9-0ed4934f963a: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: bf74c161-1219-4367-9a5c-9f3e643631f4: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: 7dbb08bc-8451-4b7d-a2f8-8de1ef7bfd72: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: 0e257aa6-35a4-4e52-bfae-e5462371d08e: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: 071ca0b3-7b3a-4bd8-90d4-e3543058f803: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: 6d1a5c0f-9c16-4a87-b3e3-72ba3adf37f1: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: 5b53e381-e478-4f8a-8fc8-da3a9a157e27: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: b281d0c2-3c70-42a5-9c30-1550ca26fc59: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: 52790871-6cb8-4e3c-a2a3-47d275b07932: (connection evicted)
2022-01-07 16:22:31.841 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: fba2cf45-e1cd-4691-b340-c4f859fe9090: (connection evicted)
2022-01-07 16:22:31.841 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:23:15.191 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 16:23:15.598 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 16:23:15.959 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@366cf6e
2022-01-07 16:23:16.053 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@366cf6e
2022-01-07 16:23:16.194 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{ [/]}: getEquipment()
	{ [/history]}: history(Model)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{GET [/equipment]}: equipment(Model)
	{ [/equipment/getData]}: getEquipmentData()
	{ [/staffOperation]}: staffOperation()
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
2022-01-07 16:23:16.194 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 16:23:16.210 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 16:23:16.241 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:23:16.461 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:23:16.744 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: ba541fc8-7d42-4b0b-b875-b114868bc065
2022-01-07 16:23:16.744 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:23:16.760 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:23:16.775 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:23:16.775 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:23:16.775 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:23:16.775 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:23:16.853 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:23:16.869 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 5c742ec8-3b39-4e8d-8df3-20e2d6d20d53
2022-01-07 16:23:16.869 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: ec6e1e8e-5245-47cb-aee3-c7a933c3273e
2022-01-07 16:23:16.890 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 1f830954-eee6-4236-abf7-212a5f59add9
2022-01-07 16:23:16.901 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 2bd67674-9053-43f8-b591-ef9852ab482c
2022-01-07 16:23:16.901 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: b90806e2-765d-4405-8ba0-82e12968aba2
2022-01-07 16:23:16.916 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: d5bd88fd-b457-4439-bbee-a880235993f6
2022-01-07 16:23:16.932 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: a6d12236-9a9b-4cf6-af73-547fee59ec23
2022-01-07 16:23:16.948 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 84e105e0-e49a-4ea2-a6d2-b66c0d9293d2
2022-01-07 16:23:16.954 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: ad605b26-1a28-4e54-961f-e9f5cf2daa7c
2022-01-07 16:23:16.954 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:23:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: a35e0df2-3c1f-42d6-b051-02d27f57a886
2022-01-07 16:23:41.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:23:41.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:23:41.735 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:23:41.844 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:23:41.844 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 10f79ffa-f14d-45da-9db0-0b630faddfaf
2022-01-07 16:23:41.860 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: a128da60-0633-481b-97c3-c4b41f64da1f
2022-01-07 16:23:41.876 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 696cc526-35e9-4c33-adf1-e882364dcd4d
2022-01-07 16:23:41.876 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: a31553a4-d4f1-4f6e-a32d-09ec3d564b06
2022-01-07 16:23:41.897 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: fea7d7ad-3379-439a-99be-f76fa7e2fd45
2022-01-07 16:23:41.908 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 13df9b21-35ca-47e4-8ad9-cc0747362b75
2022-01-07 16:23:41.908 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: 3b66bbee-824c-4ef9-939d-cbeee084d951
2022-01-07 16:23:41.924 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: b2068db3-f4d9-4c06-9194-8e5df44e4d90
2022-01-07 16:23:41.939 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: fbb29a86-4435-4c2d-8f5a-12980d7c5ff1
2022-01-07 16:23:41.939 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:23:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:23:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:23:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:23:46.858 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:23:46.858 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:24:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:24:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:24:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:24:08.250 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 16:24:08.310 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@702e0610
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@255e7ad
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7e3bec00
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 16:24:08.311 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 16:24:11.872 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:24:11.872 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:24:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:24:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:24:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:24:16.860 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:24:16.860 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:24:30.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:24:30.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:24:30.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:24:41.889 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:24:41.889 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:24:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:24:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:24:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:24:45.428 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:24:45.428 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: ba541fc8-7d42-4b0b-b875-b114868bc065: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: 5c742ec8-3b39-4e8d-8df3-20e2d6d20d53: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: ec6e1e8e-5245-47cb-aee3-c7a933c3273e: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 1f830954-eee6-4236-abf7-212a5f59add9: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 2bd67674-9053-43f8-b591-ef9852ab482c: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: b90806e2-765d-4405-8ba0-82e12968aba2: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: d5bd88fd-b457-4439-bbee-a880235993f6: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: a6d12236-9a9b-4cf6-af73-547fee59ec23: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: 84e105e0-e49a-4ea2-a6d2-b66c0d9293d2: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: ad605b26-1a28-4e54-961f-e9f5cf2daa7c: (connection evicted)
2022-01-07 16:24:45.428 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:24:45.428 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:24:45.428 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: a35e0df2-3c1f-42d6-b051-02d27f57a886: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 10f79ffa-f14d-45da-9db0-0b630faddfaf: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: a128da60-0633-481b-97c3-c4b41f64da1f: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: 696cc526-35e9-4c33-adf1-e882364dcd4d: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: a31553a4-d4f1-4f6e-a32d-09ec3d564b06: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: fea7d7ad-3379-439a-99be-f76fa7e2fd45: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: 13df9b21-35ca-47e4-8ad9-cc0747362b75: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: 3b66bbee-824c-4ef9-939d-cbeee084d951: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: b2068db3-f4d9-4c06-9194-8e5df44e4d90: (connection evicted)
2022-01-07 16:24:45.428 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: fbb29a86-4435-4c2d-8f5a-12980d7c5ff1: (connection evicted)
2022-01-07 16:24:45.428 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:33:56.685 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 16:33:57.124 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 16:33:57.478 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@444ca64a
2022-01-07 16:33:57.563 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@444ca64a
2022-01-07 16:33:57.704 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{ [/monitor]}: monitor()
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{ [/]}: getEquipment()
	{ [/staffOperation]}: staffOperation()
	{ [/history]}: history(Model)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{GET [/equipment]}: equipment(Model)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{ [/equipment/getData]}: getEquipmentData()
2022-01-07 16:33:57.704 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 16:33:57.720 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 16:33:57.751 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:33:57.979 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:33:57.987 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:33:58.254 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 146e8e28-36ef-4833-9307-6b4c25152b9c
2022-01-07 16:33:58.254 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:33:58.270 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:33:58.280 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:33:58.286 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:33:58.286 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:33:58.286 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:33:58.364 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:33:58.381 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 8e6c87b6-d00f-4c7e-99e9-ccb437faaeb7
2022-01-07 16:33:58.381 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: c8498830-4e70-4c9d-be17-8b1ac40710bc
2022-01-07 16:33:58.396 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 1d462a78-eb40-4893-9ab4-0a416b528a66
2022-01-07 16:33:58.411 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 83a97cc5-7f3c-4759-b8f7-97e7d5b77d1e
2022-01-07 16:33:58.427 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: d4e81476-b9d9-4b75-b4cc-f53b13bdb432
2022-01-07 16:33:58.427 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 674dabb9-b932-41fa-970f-750538e7e671
2022-01-07 16:33:58.443 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: a80f24e7-4c92-4a19-953e-cedcb1997298
2022-01-07 16:33:58.458 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: d180112e-eb43-4e34-9ffa-8f6ff801ed25
2022-01-07 16:33:58.458 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: de9cbdcd-e101-4a8f-aeb1-716d4ddafeaa
2022-01-07 16:33:58.458 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:34:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:34:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 16:34:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:34:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:34:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:34:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:34:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:34:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:34:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:34:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:34:00.030 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 71580ab8-3aa6-4a70-beb4-05e61495047f
2022-01-07 16:34:00.030 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:34:00.030 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:34:00.030 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:34:00.140 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:34:00.140 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 3a69a33c-e843-4b10-b2b0-27e57bebb620
2022-01-07 16:34:00.155 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: a6aa132e-bf27-477a-8ff9-2f78d9075a4f
2022-01-07 16:34:00.171 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 06a65366-8535-4a78-b22a-6e493896da5d
2022-01-07 16:34:00.183 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 3de4fb9c-c805-4be0-beaa-cbc8ac00f303
2022-01-07 16:34:00.187 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 8f4087b9-3d1a-4199-b3c1-3156505309d4
2022-01-07 16:34:00.203 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 8896b7b2-00bc-4e94-afe1-a8fd615b3abd
2022-01-07 16:34:00.203 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: c337978d-9b3d-4ad0-b881-fcd73e481871
2022-01-07 16:34:00.218 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: f2a672af-dae6-4bb5-851c-1e45b73877a2
2022-01-07 16:34:00.234 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: cf1e4e4e-3cb1-4328-94f1-4214d3481155
2022-01-07 16:34:00.234 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:34:12.472 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 16:34:12.519 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@85d3575
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@20c9b12a
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@4b77104a
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 16:34:12.519 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 16:34:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:34:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:34:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:34:28.369 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:34:28.369 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:34:30.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:34:30.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:34:30.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:34:30.155 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:34:30.155 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:34:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:34:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:34:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:34:58.387 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:34:58.387 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:35:00.162 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:35:00.162 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:35:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:35:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:35:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:35:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:35:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:35:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:35:28.401 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:35:28.401 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:35:30.171 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:35:30.171 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:35:41.713 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:35:41.713 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:35:41.713 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:35:45.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:35:45.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:35:45.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:35:58.403 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:35:58.403 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:36:00.180 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:36:00.180 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:36:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:36:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:36:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:36:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:36:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:36:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:36:28.407 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:36:28.407 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:36:30.180 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:36:30.180 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:36:41.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:36:41.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:36:41.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:36:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:36:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:36:45.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:36:47.734 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:36:47.734 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 146e8e28-36ef-4833-9307-6b4c25152b9c: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: 8e6c87b6-d00f-4c7e-99e9-ccb437faaeb7: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: c8498830-4e70-4c9d-be17-8b1ac40710bc: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 1d462a78-eb40-4893-9ab4-0a416b528a66: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 83a97cc5-7f3c-4759-b8f7-97e7d5b77d1e: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: d4e81476-b9d9-4b75-b4cc-f53b13bdb432: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: 674dabb9-b932-41fa-970f-750538e7e671: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: a80f24e7-4c92-4a19-953e-cedcb1997298: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: d180112e-eb43-4e34-9ffa-8f6ff801ed25: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: de9cbdcd-e101-4a8f-aeb1-716d4ddafeaa: (connection evicted)
2022-01-07 16:36:47.734 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:36:47.734 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:36:47.734 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: 71580ab8-3aa6-4a70-beb4-05e61495047f: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 3a69a33c-e843-4b10-b2b0-27e57bebb620: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: a6aa132e-bf27-477a-8ff9-2f78d9075a4f: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: 06a65366-8535-4a78-b22a-6e493896da5d: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: 3de4fb9c-c805-4be0-beaa-cbc8ac00f303: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: 8f4087b9-3d1a-4199-b3c1-3156505309d4: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: 8896b7b2-00bc-4e94-afe1-a8fd615b3abd: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: c337978d-9b3d-4ad0-b881-fcd73e481871: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: f2a672af-dae6-4bb5-851c-1e45b73877a2: (connection evicted)
2022-01-07 16:36:47.734 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: cf1e4e4e-3cb1-4328-94f1-4214d3481155: (connection evicted)
2022-01-07 16:36:47.734 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:36:50.110 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 16:36:50.518 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 16:36:50.863 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@366cf6e
2022-01-07 16:36:50.973 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@366cf6e
2022-01-07 16:36:51.148 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{GET [/equipment]}: equipment(Model)
	{ [/]}: getEquipment()
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{ [/staffOperation]}: staffOperation()
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{ [/history]}: history(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{ [/monitor]}: monitor()
2022-01-07 16:36:51.148 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 16:36:51.162 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 16:36:51.193 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 16:36:51.429 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 16:36:51.429 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:36:51.429 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:36:51.429 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:36:51.444 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:36:51.711 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 88382dcd-8cde-4597-8563-febb35dae86f
2022-01-07 16:36:51.711 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:36:51.727 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:36:51.743 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:36:51.750 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:36:51.750 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:36:51.750 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:36:51.821 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:36:51.837 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 7a81f64f-87b1-4092-aa57-a86c2bec070d
2022-01-07 16:36:51.850 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: 64ee2d85-e30b-42e7-8e10-dc0d4b72b1bd
2022-01-07 16:36:51.853 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 333810a9-9b2e-4528-b59e-cbddd4a0fe11
2022-01-07 16:36:51.868 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 3bb6e682-9322-4ea5-9504-65d1722d7a46
2022-01-07 16:36:51.868 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 7addfa4d-9e41-472d-8973-0d40c32eb45b
2022-01-07 16:36:51.889 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: a2123a3c-9e6d-434b-8c89-fcea5e2a7dea
2022-01-07 16:36:51.900 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 3969df8b-35c5-40e4-95aa-3f51bab870a6
2022-01-07 16:36:51.915 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 93e7b36c-b891-448c-8318-e089bb3a4b9d
2022-01-07 16:36:51.915 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 3fe8b797-6c57-45c9-ac1b-4607870120b7
2022-01-07 16:36:51.915 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:37:00.023 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:37:00.024 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:37:00.025 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:37:00.037 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: f03b7024-07b4-4a8f-8b88-7383c60bc126
2022-01-07 16:37:00.038 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:37:00.038 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:37:00.038 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:37:00.148 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:37:00.162 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 463c0996-9df3-4b24-9603-772fcd30c4dd
2022-01-07 16:37:00.174 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: f9fd6ba7-1036-425c-bc5c-e6ba4bdaaad0
2022-01-07 16:37:00.185 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 9dfcc98e-67d7-46d9-b3c2-89d9d4eb78cb
2022-01-07 16:37:00.197 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 669a9181-48a8-4dac-a6df-367cd8ce299c
2022-01-07 16:37:00.210 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 324fdc61-1d82-484c-8b41-4b5d6c114042
2022-01-07 16:37:00.221 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: ac2726dd-f7e7-42bf-8943-89efc83f8e96
2022-01-07 16:37:00.232 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: 4ccce0d8-ffb5-4d32-8183-855f2d22e413
2022-01-07 16:37:00.243 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 470d7bf1-f663-4d48-9910-e31247555264
2022-01-07 16:37:00.255 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 62fda69a-db28-4283-9694-d1ea2f4df17b
2022-01-07 16:37:00.255 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:37:09.909 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 16:37:09.966 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@24d7ce31
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@22e00627
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5c3048a5
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 16:37:09.967 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 16:37:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:37:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:37:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:37:21.832 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:37:21.832 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:37:30.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:37:30.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:37:30.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:37:30.160 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:37:30.160 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:37:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:37:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:37:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:37:51.846 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:37:51.846 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:38:00.163 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:38:00.163 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:38:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:38:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:38:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:38:03.219 [http-nio-8080-exec-3] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByName - ==>  Preparing: select * from V_UserInfo where staffName = ? and staffImage is not null;
2022-01-07 16:38:03.221 [http-nio-8080-exec-3] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByName - ==> Parameters: 张健(String)
2022-01-07 16:38:03.233 [http-nio-8080-exec-3] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByName - <==      Total: 3
2022-01-07 16:38:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:38:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:38:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:38:21.861 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:38:21.861 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:38:24.759 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:38:24.759 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:38:24.777 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:38:24.777 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:38:24.778 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:38:06.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:38:24.779 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:38:30.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:38:30.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:38:30.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:38:30.167 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:38:30.167 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:38:30.167 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:38:30.167 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 16:38:12.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 16:38:30.184 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:38:42.244 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:38:42.244 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 16:38:42.260 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 16:38:42.260 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:38:42.260 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 16:38:24.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:38:42.273 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:38:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:38:45.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:38:45.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:38:51.868 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:38:51.868 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:38:52.455 [http-nio-8080-exec-1] DEBUG c.f.s.mapper.faceRecognition.PassMapper.getData - ==>  Preparing: select * from PassTable where passTime > ? and passTime < ? ORDER BY passTime;
2022-01-07 16:38:52.456 [http-nio-8080-exec-1] DEBUG c.f.s.mapper.faceRecognition.PassMapper.getData - ==> Parameters: 2022-01-05 00:00:00.0(Timestamp), 2022-01-08 00:00:00.0(Timestamp)
2022-01-07 16:38:52.476 [http-nio-8080-exec-1] DEBUG c.f.s.mapper.faceRecognition.PassMapper.getData - <==      Total: 322
2022-01-07 16:39:00.174 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:39:00.174 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:39:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:39:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:39:01.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:39:10.997 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:39:10.997 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:39:10.998 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:39:10.999 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:39:10.999 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:38:52.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:39:11.005 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:39:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:39:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:39:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:39:21.877 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:39:21.877 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:39:30.186 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:39:30.186 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:39:41.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:39:41.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:39:41.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:39:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:39:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:39:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:39:51.885 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:39:51.885 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:40:00.187 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:40:00.187 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:40:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:40:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:40:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:40:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:40:15.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:40:15.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:40:20.459 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:40:20.459 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:40:20.467 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:40:20.467 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:40:20.468 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:40:02.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:40:20.475 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:40:21.892 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:40:21.892 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:40:24.213 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:40:24.213 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:40:24.213 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:40:24.213 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:40:24.213 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:40:06.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:40:24.226 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:40:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:40:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:40:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:40:30.188 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:40:30.188 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:40:45.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:40:45.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:40:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:40:51.906 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:40:51.906 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:40:51.922 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:40:51.922 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:40:51.938 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:40:51.938 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:40:51.938 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:40:33.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:40:51.948 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:41:00.204 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:41:00.204 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:41:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:41:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:41:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:41:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:41:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:41:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:41:21.916 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:41:21.916 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:41:30.217 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:41:30.217 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:41:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:41:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:41:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:41:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:41:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:41:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:41:51.926 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:41:51.926 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:42:00.218 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:42:00.218 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:42:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:42:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:42:01.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:42:09.767 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:42:09.767 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 88382dcd-8cde-4597-8563-febb35dae86f: (connection evicted)
2022-01-07 16:42:09.768 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: 7a81f64f-87b1-4092-aa57-a86c2bec070d: (connection evicted)
2022-01-07 16:42:09.768 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: 64ee2d85-e30b-42e7-8e10-dc0d4b72b1bd: (connection evicted)
2022-01-07 16:42:09.768 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 333810a9-9b2e-4528-b59e-cbddd4a0fe11: (connection evicted)
2022-01-07 16:42:09.768 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 3bb6e682-9322-4ea5-9504-65d1722d7a46: (connection evicted)
2022-01-07 16:42:09.768 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: 7addfa4d-9e41-472d-8973-0d40c32eb45b: (connection evicted)
2022-01-07 16:42:09.768 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: a2123a3c-9e6d-434b-8c89-fcea5e2a7dea: (connection evicted)
2022-01-07 16:42:09.768 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: 3969df8b-35c5-40e4-95aa-3f51bab870a6: (connection evicted)
2022-01-07 16:42:09.768 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: 93e7b36c-b891-448c-8318-e089bb3a4b9d: (connection evicted)
2022-01-07 16:42:09.768 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: 3fe8b797-6c57-45c9-ac1b-4607870120b7: (connection evicted)
2022-01-07 16:42:09.768 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:42:09.769 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:42:09.769 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: f03b7024-07b4-4a8f-8b88-7383c60bc126: (connection evicted)
2022-01-07 16:42:09.769 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 463c0996-9df3-4b24-9603-772fcd30c4dd: (connection evicted)
2022-01-07 16:42:09.769 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: f9fd6ba7-1036-425c-bc5c-e6ba4bdaaad0: (connection evicted)
2022-01-07 16:42:09.769 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: 9dfcc98e-67d7-46d9-b3c2-89d9d4eb78cb: (connection evicted)
2022-01-07 16:42:09.769 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: 669a9181-48a8-4dac-a6df-367cd8ce299c: (connection evicted)
2022-01-07 16:42:09.769 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: 324fdc61-1d82-484c-8b41-4b5d6c114042: (connection evicted)
2022-01-07 16:42:09.769 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: ac2726dd-f7e7-42bf-8943-89efc83f8e96: (connection evicted)
2022-01-07 16:42:09.770 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: 4ccce0d8-ffb5-4d32-8183-855f2d22e413: (connection evicted)
2022-01-07 16:42:09.770 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: 470d7bf1-f663-4d48-9910-e31247555264: (connection evicted)
2022-01-07 16:42:09.770 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: 62fda69a-db28-4283-9694-d1ea2f4df17b: (connection evicted)
2022-01-07 16:42:09.770 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:42:52.340 [main] DEBUG com.face.server.ServerApplicationTests - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 16:42:52.809 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 16:42:53.575 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader sun.misc.Launcher$AppClassLoader@42a57993
2022-01-07 16:42:53.800 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader sun.misc.Launcher$AppClassLoader@42a57993
2022-01-07 16:42:54.131 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{ [/history]}: history(Model)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{ [/staffOperation]}: staffOperation()
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{ [/]}: getEquipment()
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{ [/equipment/getData]}: getEquipmentData()
	{GET [/equipment]}: equipment(Model)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
2022-01-07 16:42:54.136 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 16:42:54.179 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 16:42:54.211 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 16:42:54.679 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 16:42:54.682 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:42:54.683 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:42:54.683 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:42:54.683 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:42:54.683 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:42:54.683 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:42:54.684 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:42:54.684 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:42:54.684 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:42:54.685 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:42:54.686 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:42:54.686 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:42:54.686 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:42:54.686 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:42:54.686 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:42:54.686 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:42:54.687 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:42:54.687 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 16:42:54.687 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:42:54.687 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:42:54.687 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:42:54.687 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:42:54.687 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:42:54.687 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:42:54.688 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:42:54.688 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:42:54.688 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 16:42:54.688 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:42:54.688 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:42:54.688 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:42:54.688 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:42:54.688 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:42:54.688 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:42:54.689 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:42:54.689 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:42:55.153 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 76c0a0aa-43fa-440d-80f8-070d13f90804
2022-01-07 16:42:55.159 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:42:55.179 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:42:55.196 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:42:55.205 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:42:55.206 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:42:55.207 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:42:55.257 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:42:55.271 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 87f17bc5-a637-41ad-a769-b5e54ce05641
2022-01-07 16:42:55.285 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: 8c526bca-f354-4786-aa3b-4e7d6f560548
2022-01-07 16:42:55.300 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: c4afde32-662c-456c-ae77-5367e391a544
2022-01-07 16:42:55.312 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 25ae5aa4-6724-4b54-aee4-a9637eab941f
2022-01-07 16:42:55.325 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: e41790c5-4931-43ba-a73a-caf87f92c4be
2022-01-07 16:42:55.337 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 02043f5e-becb-4482-ab93-6b3d08f6bf6e
2022-01-07 16:42:55.349 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: a177bfa1-71e0-456c-a7b8-6c1521814433
2022-01-07 16:42:55.359 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 38d1e1fe-3e6a-46ab-8a0a-ef1bad287d44
2022-01-07 16:42:55.370 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 2c129b04-89dc-44d3-92f3-60bbcae7e47a
2022-01-07 16:42:55.370 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:43:00.001 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 16:43:00.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:43:00.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:43:00.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:43:00.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:43:00.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:43:00.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:43:00.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:43:00.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:43:00.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:43:00.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:43:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:43:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:43:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 16:43:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:43:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:43:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:43:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:43:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:43:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:43:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:43:00.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:43:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 5423131c-0fd3-4d15-b860-c805fb1270cf
2022-01-07 16:43:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:43:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:43:00.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:43:00.126 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:43:00.138 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 0a9e769e-3582-44b2-99d6-60c6f7009fae
2022-01-07 16:43:00.149 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: f565cd45-9856-4a90-9e1b-75bb752d2dc2
2022-01-07 16:43:00.158 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 9259e184-4c68-4045-831b-6162dff71d29
2022-01-07 16:43:00.169 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 9cd04e58-8efc-4162-8ba6-26f543c9bc27
2022-01-07 16:43:00.179 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 7d75ebc3-ce98-4d4d-80dc-be8ad0fcdaa6
2022-01-07 16:43:00.189 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 57ca8d68-8f44-4c09-91fb-14be4e3aaa33
2022-01-07 16:43:00.198 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: 210d544e-69db-425c-8f85-d3b4e17976e9
2022-01-07 16:43:00.215 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 7f854fcd-96be-4d88-ab22-d285b9197770
2022-01-07 16:43:00.224 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 9215cba7-4dd3-4873-ba20-4262327ad22f
2022-01-07 16:43:00.225 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:43:10.876 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:43:10.877 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 76c0a0aa-43fa-440d-80f8-070d13f90804: (connection evicted)
2022-01-07 16:43:10.877 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: 87f17bc5-a637-41ad-a769-b5e54ce05641: (connection evicted)
2022-01-07 16:43:10.877 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: 8c526bca-f354-4786-aa3b-4e7d6f560548: (connection evicted)
2022-01-07 16:43:10.877 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: c4afde32-662c-456c-ae77-5367e391a544: (connection evicted)
2022-01-07 16:43:10.878 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 25ae5aa4-6724-4b54-aee4-a9637eab941f: (connection evicted)
2022-01-07 16:43:10.878 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: e41790c5-4931-43ba-a73a-caf87f92c4be: (connection evicted)
2022-01-07 16:43:10.878 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: 02043f5e-becb-4482-ab93-6b3d08f6bf6e: (connection evicted)
2022-01-07 16:43:10.878 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: a177bfa1-71e0-456c-a7b8-6c1521814433: (connection evicted)
2022-01-07 16:43:10.878 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: 38d1e1fe-3e6a-46ab-8a0a-ef1bad287d44: (connection evicted)
2022-01-07 16:43:10.878 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: 2c129b04-89dc-44d3-92f3-60bbcae7e47a: (connection evicted)
2022-01-07 16:43:10.878 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:43:10.879 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:43:10.879 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: 5423131c-0fd3-4d15-b860-c805fb1270cf: (connection evicted)
2022-01-07 16:43:10.879 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 0a9e769e-3582-44b2-99d6-60c6f7009fae: (connection evicted)
2022-01-07 16:43:10.879 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: f565cd45-9856-4a90-9e1b-75bb752d2dc2: (connection evicted)
2022-01-07 16:43:10.880 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: 9259e184-4c68-4045-831b-6162dff71d29: (connection evicted)
2022-01-07 16:43:10.880 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: 9cd04e58-8efc-4162-8ba6-26f543c9bc27: (connection evicted)
2022-01-07 16:43:10.880 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: 7d75ebc3-ce98-4d4d-80dc-be8ad0fcdaa6: (connection evicted)
2022-01-07 16:43:10.880 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: 57ca8d68-8f44-4c09-91fb-14be4e3aaa33: (connection evicted)
2022-01-07 16:43:10.880 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: 210d544e-69db-425c-8f85-d3b4e17976e9: (connection evicted)
2022-01-07 16:43:10.880 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: 7f854fcd-96be-4d88-ab22-d285b9197770: (connection evicted)
2022-01-07 16:43:10.880 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: 9215cba7-4dd3-4873-ba20-4262327ad22f: (connection evicted)
2022-01-07 16:43:10.880 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 16:44:12.959 [main] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 16:44:13.399 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 16:44:13.983 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 16:44:14.140 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 16:44:14.381 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{ [/staffOperation]}: staffOperation()
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{ [/]}: getEquipment()
	{ [/history]}: history(Model)
	{GET [/equipment]}: equipment(Model)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
2022-01-07 16:44:14.385 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 16:44:14.407 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 16:44:14.491 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 16:44:14.700 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 16:44:14.700 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:44:14.700 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:44:14.700 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:44:14.700 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:44:14.700 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:44:14.700 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:44:14.715 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:44:15.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:44:15.099 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 4df4b16a-0b3d-400a-bb77-19f2a6c1960d
2022-01-07 16:44:15.099 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:2 ClientConnectionId: 874061c2-4223-4dc8-940e-539ee59338fd
2022-01-07 16:44:15.115 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:44:15.115 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:44:15.130 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:44:15.130 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:44:15.130 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:44:15.146 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:44:15.146 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:44:15.146 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:44:15.150 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:44:15.224 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:44:15.224 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:44:15.240 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:4 ClientConnectionId: 1668e8ce-242c-481d-894b-11c1a05ca86e
2022-01-07 16:44:15.240 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: b6873dbd-cc8c-45a2-bd6d-1a59fb306cf8
2022-01-07 16:44:15.256 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: a4cfa38b-c4b0-4522-8437-f51c7e67df58
2022-01-07 16:44:15.256 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:5 ClientConnectionId: 5390695d-1abf-4107-a440-a09deda7c17d
2022-01-07 16:44:15.272 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:8 ClientConnectionId: b3d7b7ef-fdd6-4936-8c85-dc334c2172ca
2022-01-07 16:44:15.272 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: ba6ac989-10d9-4eaa-a255-6f5ce9c86df4
2022-01-07 16:44:15.303 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:9 ClientConnectionId: 6dd8515d-04d2-46ac-b2e5-beb81defa960
2022-01-07 16:44:15.303 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 6f932f52-67ca-4ba1-903a-56cf6e6d7baa
2022-01-07 16:44:15.303 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 59cec4b7-531c-4301-a171-2f5dc7a46d97
2022-01-07 16:44:15.303 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:12 ClientConnectionId: 7f51dc27-f8e3-415d-8f31-4396009b0ca1
2022-01-07 16:44:15.319 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: bf068b8a-b764-4ba4-81d7-b0a0a924e5ab
2022-01-07 16:44:15.319 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:14 ClientConnectionId: b0b1e83d-bc33-4fce-a773-3d83070b5308
2022-01-07 16:44:15.334 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 53ea1214-32c2-491b-847c-cfaca5706a4f
2022-01-07 16:44:15.334 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:16 ClientConnectionId: 1209ef4e-b54a-42f1-b23f-ec089cd81585
2022-01-07 16:44:15.350 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 7d70dbf2-3a8c-4cbb-8ace-2c27f8fc7000
2022-01-07 16:44:15.350 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:18 ClientConnectionId: 5208544c-8869-461d-a1a7-9fd4d63cb068
2022-01-07 16:44:15.366 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 96aa4f7a-4be0-4409-9d9c-3fed3220f67d
2022-01-07 16:44:15.366 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:20 ClientConnectionId: 24b07427-1a05-4831-a5ba-20a512c5899b
2022-01-07 16:44:15.366 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:44:15.366 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:44:19.695 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 16:44:19.794 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@520135e4
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@325a33e8
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1fd122b3
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 16:44:19.818 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 16:44:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:44:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:44:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:44:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:44:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:44:45.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:44:45.240 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:44:45.240 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:44:45.240 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:44:45.240 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:45:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:45:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:45:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:45:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:45:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:45:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:45:15.065 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:45:15.065 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:45:15.073 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:45:15.073 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:45:15.073 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:44:57.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:45:15.092 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:45:15.246 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:45:15.246 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:45:15.246 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:45:15.246 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:45:36.054 [http-nio-8080-exec-6] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==>  Preparing: select * from V_UserInfo where staffImage is not null;
2022-01-07 16:45:36.054 [http-nio-8080-exec-6] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==> Parameters: 
2022-01-07 16:45:37.384 [http-nio-8080-exec-6] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - <==      Total: 5058
2022-01-07 16:45:37.395 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==>  Preparing: select * from V_UserInfo where staffCardNumber in (212605,212548,211866,212798,212697,212698,5010,5011,210273,212606,212590,212549,212775,212134,5021,212744,5025,212799,213046,212754,213412,998877,213331,213332,210060,212648,212755,213334,212649,213336,213414,212691,213351,210990,213437,212800,213438,213439,213352,213440,210429,211615,213354,213443,213444,212144,212762,752359,213355,213356,213446,213447,213449,213357,210272,212877,213450,212677,210428,213359,210810,210805,213452,213453,212678,213454,213049,212954,212834,212801,213122,213121,212745,212802,212534,212535,210356,919949,211736,212878,213174,212623,212867,213345,212675,210153,213347,222048,212760,213433,213434,213435,212955,213436,212622,210978,213350,212670,213415,210330,213417,210982,210374,213418,212620,212621,213047,212692,210155,213420,212299,213421,213422,210114,212672,213423,210346,210393,213425,210044,213342,212674,213426,210403,210977,210285,211835,213429,213430,210975,237319,224345,213249,212805,212607,212625,213175,212806,212592,210353,213176,212933,212298,210989,212956,210188,213177,213362,212807,210382,212879,213455,212558,213180,213364,213456,212934,212958,210243,213366,212627,212664,212837,212808,212838,212959,212763,213119,212589,212693,210307,232197,237868,236411,243886,230616,237820,233213,233209,233219,221663,330506,323654,236787,237802,237158,244838,331366,236151,237560,234105,12345,666666666,7777777,11223344,224359,234797,231493,232779,222550,221645,235776,231704,231703,237994,236579,237767,236598,237398,220048,236254,230462,234482,234492,234512,243853,233374,237030,221629,237955,236965,236461,236477,232862,222592,752027,211505,230427,331635,331706,200712,233437,233735,237073,237835,230979,834361,333810,220547,237704,233138,233133,237563,237768,236466,221759,237412,330428,200574,236208,236210,234699,233108,236137,237105,236260,237131,323601,222093,233713,237343,232441,211729,212741,210220,212536,212537,212628,213093,212747,212936,212629,212135,212748,213117,211590,210398,213457,213369,213370,213458,213371,210137,213373,213459,213460,243809,212839,210399,212743,212809,213094,210210,210811,212871,212961,213182,212560,213252,213253,213254,233632,213183,212810,213184,211611,212632,212938,212742,213391,213490,212964,213392,210384,213491,210283,212883,212846,213493,210387,221876,212634,212585,213187,213394,210328,213494,212941,212779,212683,213495,212684,213190,212945,213108,212868,210245,210299,213400,210056,211992,211700,211993,211994,213477,211995,211996,211997,213482,211998,211999,213191,212576,212886,212000,212966,212001,213153,212021,213173,213263,210433,211901,212023,212024,212025,211902,211903,210397,210410,211906,212026,210127,212027,211856,210321,211908,212030,210133,210215,211911,212610,212811,212967,212669,212814,212578,210324,213203,213204,210236,211858,212969,212636,213207,210204,213262,210960,212638,212970,212703,212704,211750,213208,212764,210386,212948,212890,212596,212580,212581,212891,213267,213268,213269,213270,213112,210296,213114,210103,210370,211913,212033,212034,210230,213303,212572,213209,211560,213210,212949,212950,210011,212706,212707,212972,212973,212974,212892,213124,213304,213305,213271,212709,213306,212597,212975,212582,213307,213133,210381,220540,212864,213273,213308,212750,213212,212586,210213,212849,212751,212611,212786,212612,213274,211875,212787,212817,212766,212977,212710,212893,213051,212599,213309,213042,213310,213043,212711,210131,212712,213129,213130,210331,213137,211828,213312,210146,213313,212894,212980,212981,213314,213052,212713,213276,213315,213278,212588,212506,213316,213053,212714,210993,213138,213330,213139,212896,213055,210183,210974,213056,210226,213319,210214,210426,213214,213142,210277,213321,213141,212820,210812,213143,211918,212615,213144,211919,213058,212901,213322,211920,211921,210292,213059,210261,220113,212716,212850,212768,212982,213061,212036,213062,213215,210435,211555,210194,212902,210202,210239,212983,213280,211593,210303,213065,210415,213149,213066,213067,212898,210983,212509,212985,212851,213281,212986,210308,212616,210995,212790,212906,212514,213328,210988,212989,212617,212907,210343,213329,213218,213286,213287,213288,210287,212695,212618,212515,213290,213291,213073,210042,212603,212532,212604,213040,212660,211572,212646,212773,235378,222566,237477,236640,221739,222428,221730,222546,221627,221704,222207,848980,220482,222210,237501,221649,222434,211738,236707,221618,221650,222204,220079,221622,235899,236741,221607,222446,222163,221620,236328,236197,220089,236762,237511,237883,236067,221628,220541,236608,221606,221742,222441,221732,222413,221796,222556,237758,237461,236537,205556,234075,234011,224316,220534,221985,224315,236547,234010,236794,234036,234037,220528,224337,224363,224351,224304,236332,224368,220169,224335,224333,220567,220431,222354,221811,222352,224364,224365,224367,221897,212613,224377,220589,221623,222234,222407,236747,222240,221784,220098,222435,220096,244889,220458,222312,221617,206841,222439,221782,230569,200637,220594,222557,222342,221729,222202,220433,222214,222363,221619,220593,220440,222590,222332,235391,221639,237268,222007,222589,222176,231370,230796,234018,237784,235140,236764,345963,220411,224256,236381,234602,235135,230917,235066,234746,234743,236842,205338,234748,234394,231410,200573,236238,237414,235666,234606,831159,235136,236853,231293,237769,220609,235239,235138,232356,234635,235075,220526,222460,224758,206022,230623,234483,230467,230816,234395,234414,234411,234417,234515,234516,234508,234514,234510,234396,234540,234541,237072,224915,220595,221699,224535,206366,224423,220559,224495,210125,210409,224893,224982,220112,233994,222009,210207,210250,220032,213185,212842,212881,210065,212939,212681,212633,212844,210173,210031,213474,213475,834550,210414,212882,213388,213389,210217,213255,213256,213257,213132,213390,205178,234888,235938,243845,230046,221790,221972,233362,224467,222008,323760,332240,231707,236545,210171,233273,237458,334361,828035,815383,330650,220591,330422,751994,828167,818825,235342,234724,233590,235653,849216,232400,237364,234147,234048,236624,234578,237786,236484,236593,237382,220181,236246,230033,237750,231686,235925,234031,232967,230220,244905,345421,232557,232342,236926,828153,333943,329645,237950,242776,334018,236925,233957,231297,233223,349077,236933,236586,234081,234053,236318,235737,237163,237165,236212,847809,236317,243866,236798,237167,234403,232663,235307,807855,850249,237419,236932,237170,829704,235730,237164,807465,243875,232789,237569,807428,243878,231783,234116,232932,235662,349091,243868,243865,237471,807499,237166,807477,243867,243978,807547,237570,237459,807469,236532,230788,230783,243971,236922,243863,236879,236406,230697,237169,234113,235833,236852,236837,230282,230666,231502,230215,230493,332225,230107,331069,320534,237646,222136,244841,753657,761685,329366,332358,329564,833865,332373,244942,231778,222480,329779,221689,236463,331154,334141,336169,331348,237770,834205,331679,751926,752267,814519,233220,220511,237171,221668,345475,212546,237508,235772,237431,345509,329920,329714,234371,237937,330026,235704,329353,237135,336173,235102,333697,213083,210123,213082,761689,329682,236172,236121,236123,236155,236150,237655,236027,237633,861909,236265,237794,236348,236252,848942,236384,862855,210176,220459,236436,850610,220164,236427,236168,236506,220465,220466,236555,210281,235855,832355,235558,221904,235981,237358,237632,235503,237755,232350,232289,333508,232351,232883,232884,848957,232861,233112,220510,220512,221771,323517,221756,221838,235550,828970,236405,236215,233389,807420,237340,221638,234029,220546,233545,237615,339081,236099,234159,237228,236549,233390,340310,236069,243881,234581,232599,243864,237172,243977,220442,236344,236863,847766,233166,329529,236928,243862,848818,237934,243880,243976,237842,231669,236465,244939,237731,200700,235002,237017,237395,230557,850469,221789,232777,231697,330386,207671,235567,237692,211569,236467,222377,221644,236877,234136,850051,814841,237685,236937,234094,236934,237341,233979,237176,206098,830970,220401,224835,236628,243924,243931,220092,861072,753203,753199,243940,243941,222185,237790,220554,236599,203621,237864,213164,213165,212733,237463,329215,232907,322264,210987,237870,231515,220085,232348,220056,220074,232302,230729,237202,234832,330515,237049,235717,236298,236326,236474,850476,237771,329887,236596,220171,234857,330586,222541,233363,242669,237435,236380,242730,753202,237989,224888,752480,237833,243936,231362,752482,243995,212538,237302,237299,237300,237292,237297,237305,237640,237309,220525,330127,237336,330205,220560,220557,861056,237415,237406,237669,200667,200447,236203,222063,237678,348694,331181,242813,242899,236507,333905,834360,320547,237052,237764,237648,242815,331086,320548,753090,332154,235367,333925,827794,829457,236130,834234,236230,206268,233794,233987,235296,230020,220571,200408,222056,224626,224906,222494,224745,212848,211680,329399,236323,235038,330448,233797,332206,834340,222458,211583,242995,333706,237783,242746,322864,230603,230795,233864,237157,230573,237583,220621,237773,230624,333941,323863,753081,232337,232962,323639,834035,333510,206343,237278,230720,230723,230717,331076,220486,230335,230341,230238,237196,230263,230244,234556,231327,333981,237837,332207,333428,220615,236689,237935,236433,329238,222548,237162,211740,237832,236648,236327,333500,237204,237197,237206,237208,237368,237498,220531,237116,237216,237213,237117,237118,804786,828886,237174,752044,761693,220551,220550,220552,237322,220553,220569,237314,237757,237413,220402,235516,230848,234058,234061,234063,235753,233848,237512,233936,237460,236378,236921,234182,237878,205442,237388,234090,234091,237241,329424,230034,210119,224397,345419,211575,234382,234378,234381,220613,235838,203445,237452,220584,237481,237505,237506,237828,237667,237668,237852,222474,222469,222481,222454,222455,220590,222468,211582,222470,220404,222473,220627,233050,233231,237845,233875,224318,224308,234034,224430,230787,330645,211751,213000,211730,752983,331081,220586,333900,828233,332437,320509,329655,237602,232730,235430,235210,232753,222065,237931,231303,232765,232764,232763,237601,237327,236664,329262,764092,339432,220530,323606,348072,332356,237183,237184,237185,220565,237474,237291,237290,851516,236969,235781,235782,235816,235784,236884,237699,236097,213098,213193,212813,213260,212946,212782,212701,213099,210288,212968,211735,213109,213194,211731,213196,213197,213198,213199,236061,230744,230664,235508,237232,237556,237280,236397,235872,329196,232276,230740,235716,235175,850477,236779,236874,237436,234752,237597,234751,232665,232285,220607,237660,237831,211900,237386,332134,336853,236724,237200,752170,237286,237288,237316,237296,237315,237817,237962,237630,237674,237180,204221,847842,813969,829768,807699,813966,828815,203508,814610,807690,807682,813964,849041,847852,205540,848958,828962,237877,220523,763703,26462,814809,340418,850555,850342,349155,322551,230018,345440,244901,244906,230093,237325,753180,236828,211854,230094,230106,834194,230128,831149,220585,230941,233943,222140,230109,237649,232288,231311,752107,230105,220080,236612,244984,234782,210003,331715,331345,752010,221966,752061,236241,234812,235213,237785,212734,212735,210979,235111,211595,212927,212925,213087,211598,221646,222451,234161,221812,222576,322199,221680,237792,222073,221915,334144,213169,323608,211886,232002,237781,232291,206640,237588,230701,224958,237605,334263,236717,331174,330008,236472,236236,235709,244839,828489,235245,234491,234474,231843,230460,230497,231428,230370,230376,234535,230394,235370,230396,233927,237591,230382,230398,230295,237656,231495,230272,230273,231349,231497,233312,230333,230324,230292,230241,230306,333988,236739,231513,230887,231838,235740,237585,234423,231363,231562,220490,242795,243999,211821,236024,237582,233919,230165,242860,237616,230088,231490,230287,230548,230529,230126,753114,211737,236505,242947,211744,211842,242953,222084,330503,210420,230886,230915,242788,242956,210803,221780,212865,222417,220601,234539,236968,237787,212835,237951,236890,232780,237145,807546,237706,236435,236247,336722,237407,237580,237279,237355,220497,237576,850248,237666,220519,829137,237320,237281,807507,220561,237598,237663,237600,237453,330369,752564,233941,231890,330648,237636,237635,237111,237112,237113,237155,237245,237503,237504,220504,237795,237496,237078,237081,237480,237080,237082,345848,220605,237240,237728,237087,237088,237095,237574,237092,237680,237086,752415,345986,237500,236986,237269,237270,237839,237265,237257,237276,237264,237103,237104,235428,233938,236847,204361,237426,235932,235903,236036,827649,210126,237849,236836,236032,236649,237371,832764,236018,833822,235929,861135,236249,237972,237995,233484,233984,233814,237848,235860,237432,220020,237308,236284,212643,212855,212856,212769,212530,213247,212297,211556,212952,212739,213409,213091,213092,212128,212129,212830,212531,323732,237856,237865,237662,237499,237670,237409,237695,234472,236026,237399,230582,236166,235450,235864,237562,235780,237904,235722,236098,752046,751966,234140,236240,236592,236564,236305,829015,828812,237651,834236,349262,235018,828999,233292,234796,236789,231588,231460,230239,230718,235334,236558,234076,230047,222560,236456,235657,244895,221713,231738,234813,242810,232182,220587,222586,234590,231739,237586,220515,205044,236366,233355,234496,231345,234559,234457,236892,236347,234385,235298,234375,236581,828986,233304,230013,235109,220410,230197,236225,323575,329740,237992,236376,237584,222569,212136,220548,231378,222467,212659,212657,212658,235819,231709,200305,222464,237821,233089,334295,220088,212109,752335,235902,210081,210082,210083,210084,210085,210087,210310,210090,210091,210098,235880,235877,236580,236620,237321,234146,210113,236574,220616,236075,237846,235910,236010,236584,210110,814472,237429,224341,224373,329626,231381,230605,235826,237696,236976,329667,224624,235901,232790,237625,235096,237016,231986,234778,236953,234042,235304,323759,333786,236733,329526,331150,236950,210984,213151,212718,212040,211869,210274,213227,210332,212991,212997,212041,211898,210237,213294,212908,212042,213221,212644,211931,333766,220624,222364,242723,236948,242711,220072,220545,323752,234131,237967,231377,237102,222568,232589,234052,234151,236626,234725,231305,231713,237226,237851,236322,242959,237813,237360,242960,242961,242962,761694,349204,329281,236688,244913,242641,242644,242617,753187,237575,233812,243808,242783,244863,244865,204683,761606,333931,232859,830327,236991,236803,752969,331678,237961,833771,230490,329841,234739,232980,237715,236196,237954,237953,237956,237957,753096,237965,237966,237964,235518,235656,234770,242728,231477,230533,230347,230227,332489,332416,211855,244967,230070,230682,333520,333518,333427,333600,333509,211823,244917,237609,333525,235425,220444,237377,236848,236708,230043,230022,210419,231561,236217,230857,322313,221682,232534,347961,330798,235806,235931,235985,237274,236858,236605,235788,235787,235789,235794,235983,235802,235803,235805,237741,235811,235813,235815,236087,849619,236998,231945,234386,236330,211698,236700,211559,232930,752285,828482,233442,233443,232141,233473,211549,221847,230505,237791,345379,235537,233853,210181,211526,211525,211522,211521,210178,233485,210009,211695,211513,233905,230703,211512,236500,231299,211619,211510,236910,210385,210014,234494,234521,234488,234526,234430,234431,234465,234429,234413,232131,234548,234447,234527,234418,237462,230413,237478,236893,234791,221798,243804,213150,210148,210379,213324,212903,211925,211926,211927,213326,212038,213072,210262,211929,213285,210352,212510,212513,210039,213479,212002,213480,210053,212003,211608,213484,210373,212006,213485,210268,210279,210302,212010,213487,213488,210030,210801,211759,212013,212014,211662,212015,212016,212017,210358,212019,212020,232260,9988776,213461,213374,210416,213462,210301,210430,211599,210258,213464,834220,213378,213466,210326,213379,213468,213380,213469,213381,210162,211587,213470,213385,213386,213471,213472,212960,213387,224454,234595,236468,210247,210192,213230,212601,212105,213231,213237,212047,212520,213076,211935,212910,210402,212050,213077,213232,212720,212051,212052,210417,213300,213233,211936,212994,212721,212130,210344,210244,210980,212054,212996,212687,212655,212055,210122,210338,212912,232294,233222,237433,236221,236306,200765,235019,237659,815381,234863,234834,236394,243897,224266,220625,211622,329297,234843,236533,236535,224322,234538,237730,237190,234762,242752,206865,851182,237036,828180,221684,222404,235770,237776,237766,234787,235597,235588,237422,237420,236194,211933,211932,212048,213295,212688,210232,212043,212653,210362,211603,213224,213226,213266,213223,211934,212103,213228,210059,212519,212045,213222,212823,212909,213171,211879,212516,213296,236243,222035,235410,222133,234858,233614,329394,230127,233889,231285,753660,237401,234372,237441,236534,833762,233371,231329,331346,814533,220533,221635,234519,234520,234446,234493,234547,234432,234524,234466,234437,244849,234438,234522,235941,234489,234523,234544,235850,234440,234543,234419,234525,243830,237143,237487,849949,236136,236931,243891,236543,234400,234407,203778,237137,233624,331350,200701,242714,222197,233783,237774,234786,814725,235083,237843,235844,751956,234033,751960,233380,220481,334131,323645,211756,210305,213044,220102,234074,233800,221681,861850,332440,220532,212793,233676,221654,212106,212857,236556,233056,221676,331676,329810,237038,212861,213003,236276,234014,234015,330682,323744,242639,213154,212913,236510,236886,237743,212860,212858,212859,828098,243921,222178,234099,210350,233272,849315,232357,833959,235439,230756,222000,221675,237762,236802,234511,235142,234103,230747,243838,237091,232387,234845,234844,220426,222371,233015,235839,233633,222226,204473,833898,237658,224370,234019,234138,237233,224398,236470,233375,221693,234567,233061,221683,224928,221685,231975,221643,224267,213116,222190,213005,221783,236734,236355,329498,234727,234768,331607,234397,234398,237392,237608,329781,233090,212645,232052,236773,233287,236473,222476,237464,753091,200699,233218,204288,222327,231642,234773,234892,237698,234110,235758,234108,234112,318478,334198,220418,210276,213497,213498,212584,213396,213259,212942,212573,213499,210034,211989,213188,212574,212885,212943,212944,212666,212667,213096,210248,212668,230373,231831,231835,230368,230424,329707,332246,221763,221696,230506,230472,233901,205526,236512,237963,232642,236625,236594,233955,220073,243872,236475,814584,224330,850765,235729,231402,230725,230453,237175,230299,230297,237115,230454,232822,231833,230402,232247,230271,230274,231572,230385,230276,230277,230450,230431,230625,244908,234451,230432,234533,234530,232484,230425,235800,222583,834317,320525,320599,237065,233467,230564,231418,230489,236845,230491,231403,237592,235320,230381,236106,237195,233119,231917,222047,333790,330013,236403,829003,237253,224319,222175,237138,233091,237416,242880,232626,233712,220450,221695,221717,323731,232352,235092,235962,236636,235947,235950,235952,235601,237623,235604,237396,235606,235610,235608,235609,235611,235612,235616,235618,235663,235622,235623,235624,235625,235626,235633,235634,235828,235636,235637,235638,235639,235890,235640,235641,235966,332496,206575,333436,332328,211899,244937,243813,237671,860470,231436,753661,235866,236158,235960,232071,236444,236479,235553,231529,237342,231700,224325,224328,235719,234021,222386,336829,236429,237993,211764,237689,235106,236462,220577,221712,237726,235821,236207,323578,220484,224932,236450,212078,212077,210157,212073,212076,212082,210229,210269,212112,210147,212110,211578,213246,213017,213019,210322,213021,213022,213023,210991,211827,212602,235156,232482,212529,233096,236483,234779,235014,231796,236641,213411,235728,210317,210115,221706,237379,234833,237788,221710,329229,323479,221873,323817,211541,211542,211528,210335,210197,210436,211885,210149,210345,211539,232081,200427,329325,231818,231814,210208,752570,752722,333636,334325,236520,230636,333512,230782,220006,230638,230639,230735,220097,230633,230073,220034,751964,220445,236546,231678,237929,231698,222221,222162,235667,236248,236952,235797,236216,237948,236244,236792,220518,220626,833960,242989,220583,237294,232877,203382,231809,234889,203766,233333,237042,221661,236336,233111,237801,234481,237039,206716,336315,235176,753031,232560,232556,232554,237179,232828,232487,231343,235997,236982,336384,235706,224255,235875,235769,230647,221648,212523,833828,221757,234794,237777,221761,233063,233918,213008,210422,210010,213009,210339,233068,213244,242917,212656,224741,232349,220472,206185,232423,329679,205170,230132,224331,761670,233160,222068,234380,235189,236277,231731,237617,212547,752846,231342,233310,221947,234408,234529,236459,236903,213157,210112,212915,212916,212917,210175,210159,212919,212918,210369,334062,213406,213404,213407,213403,231417,234495,235843,231553,234449,234517,234502,234450,236753,230365,235374,230380,232818,230372,236984,230378,230374,230375,230423,230388,235714,235372,236870,234528,233978,233926,230296,230327,237906,230325,230323,230328,231836,230307,230234,234455,237467,231468,230531,231889,234712,336879,345945,329475,235301,236282,236297,220028,235756,833718,329702,210016,233162,231735,234057,235164,234553,230521,235948,234558,231467,234549,234557,230528,830458,235048,323848,235145,233094,207102,235147,235146,231380,334226,237958,232325,237402,237356,232328,232304,232298,236977,232362,232329,232314,237357,232306,232363,232308,232310,232312,231558,231566,231567,231574,231585,231590,232202,237186,232206,232212,232213,231594,231598,231599,232201,232221,232223,237642,753194,220053,220057,220055,232369,237107,232934,237797,232262,220617,331104,232869,237425,232871,237697,232372,232382,235724,232380,232381,236940,235774,237564,751095,235143,244803,210136,236503,235845,233973,330450,752232,212794,829060,235521,220574,323583,323798,237796,334014,333523,333604,230919,210002,834203,222549,330919,834228,237709,230815,230814,850876,752256,232341,237333,237754,232257,235744,237442,235748,232694,232675,237903,236960,752584,346142,204324,200787,236514,828756,242760,222158,333882,211606,232682,345394,242840,237819,242839,820676,244813,242888,242648,236302,236315,236325,236476,230736,204768,220407,331598,237682,334342,231857,237818,236365,221980,232880,231733,232978,847853,211965,211966,235158,210391,236280,211617,210140,210225,211956,211676,211967,211971,211976,211962,211959,211961,210116,210013,211954,210363,210196,220470,211892,236732,235891,220581,220471,220420,220469,834276,234566,230250,237947,234470,230466,236659,232566,231988,232093,244943,221885,233849,236895,244869,221753,232136,220025,320370,828174,833747,232898,232133,815086,237720,237374,236482,237146,231977,232129,329261,244974,231952,236829,234460,231563,234442,234931,231832,234428,230443,231480,230243,230445,237404,234453,231334,236065,233101,234552,220415,220052,236469,236234,236303,230826,237026,236300,236455,236209,237015,234912,320518,234789,323611,329542,211745,231611,330461,828491,332315,232041,205568,235727,206158,236882,233372,236096,235069,203922,237686,212816,232417,230805,237191,233093,231647,235037,234730,234733,231501,230298,230291,237124,231547,231540,230252,230248,237621,235487,230399,244907,237199,230435,230444,236678,224931,231475,230315,230313,230308,230549,231462,231457,231829,234554,231456,230486,230482,230280,213041,233100,235837,330593,233519,231680,231450,235323,230565,231401,230802,230337,235371,230561,230511,230496,236552,237840,753088,232340,231360,237428,236630,236647,242789,235995,235863,236972,237809,232927,237765,236062,230981,231364,232399,236288,828176,232875,207657,220051,237753,235068,236174,221929,243810,332360,333447,232837,348450,211864,331062,235522,333519,236613,230965,232292,230532,210186,332294,333777,320520,323493,236979,231536,336171,849540,235100,235104,329335,221954,203641,329751,345447,236222,329189,329286,320619,233635,211558,211501,235793,231451,333751,331033,231521,230330,235316,230350,242842,230415,230416,232225,230305,230310,230321,230383,230219,237912,237468,230224,230536,752581,232983,829004,236214,236220,236228,236226,242932,236551,232888,230209,236304,221813,242951,213239,230050,221660,220485,221658,329510,334237,230716,200502,236519,233087,233639,236410,237857,235842,237385,237763,236567,234774,236281,235742,211829,329857,213156,212920,211830,213243,213245,213241,213242,237936,237235,234132,230679,236088,220114,236413,211570,242685,200549,233983,206645,234806,212732,211592,210389,211725,220488,751991,752441,210312,212862,212727,212724,212731,212725,212061,210227,211943,211940,212071,212062,211755,211942,212060,210334,212059,210253,210118,212066,212067,210209,211941,210396,212058,212072,211844,213014,211616,210004,210265,210392,213013,213162,213155,237875,210309,212064,210376,221686,210166,212525,212526,210368,207038,329466,323792,323617,224268,212738,234776,242662,330585,334282,330678,235090,237988,230958,233768,232699,834327,235973,236818,236308,231681,237800,237742,233097,850470,332432,320527,330016,237676,235408,233928,237923,237888,236971,236973,236975,236974,334168,834192,237108,237069,237339,753192,237273,237271,237862,237217,236989,237011,236990,237317,207115,237013,237068,220489,210927,210928,210929,210930,210931,210932,210297,210934,210935,210936,210937,210940,210941,210942,210943,210945,210954,210955,210956,210958,236993,237021,237064,237066,220517,237067,237867,243826,243827,237973,220566,236460,237150,230813,237863,242718,236114,236793,236268,235984,828191,331112,329254,244882,230201,231489,242868,220611,751943,751944,221785,329258,323857,236255,323620,236918,237444,237485,233811,233461,236321,220050,242812,237869,237109,232377,236964,851743,827751,231358,231357,230818,220618,220010,236319,236292,236224,231388,237421,847709,235178,220580,230925,232847,230948,230943,329413,237330,231314,231320,753111,232343,221711,212722,222131,233397,224309,320623,320510,344949,329288,320511,333789,329193,203374,236377,237446,237349,236320,323542,849585,829002,235865,235647,236438,230115,334231,236550,205386,220539,232919,233942,236704,236310,236293,233274,230005,204500,237227,230060,235061,751923,220422,236485,220568,237311,237793,232653,236681,236682,236680,236683,236896,827673,236963,220575,236572,236573,236576,220478,236699,236751,236712,236713,236701,237063,236750,236748,236857,850457,237614,232231,232868,206548,236657,220477,333539,332426,333613,236888,236692,236799,236796,236809,236703,237023,236800,220506,236916,236832,237677,237025,237376,237054,235118,231842,231421,234471,237482,235614,236725,237807,235086,221634,234977,236206,235715,204910,224360,237987,237400,236205,237077,233366,233370,220090,200379,235739,236999,237000,237654,237611,237009,237004,237293,237260,237259,237272,237295,236795,236830,220564,220514,237053,207661,237486,236951,237057,236949,237149,237058,332281,237759,236945,237263,230689,753108,242806,333926,242830,233906,761611,233832,232941,333483,235904,233818,233817,233819,232989,333994,233802,333456,237657,335898,236905,333530,832044,851517,235996,235924,233803,332422,236651,235527,220189,237417,242772,242774,203767,242775,232801,233280,233281,234631,221691,237644,235335,234518,230483,222341,230459,220623,752490,235062,237132,234742,234719,231849,230978,211930,331294,233949,237641,235457,333517,233965,220435,235771,332330,220436,237027,236784,236785,236721,200101,235027,236431,220419,234389,236309,206006,237085,204581,244843,235851,220047,230122,232138,222155,833635,323705,233877,237732,236894,832849,831694,828150,210600,210876,236615,236913,237337,232905,850830,236585,235926,232947,236084,236695,832850,237684,236074,210395,210238,210340,210836,210838,210355,210840,828173,210842,210138,210844,210378,210251,210847,210816,210817,210818,210819,210848,210849,210850,210827,210851,210828,210877,210878,210347,210879,210946,210431,210947,210948,210882,210825,210357,210884,210885,210371,210888,210182,210890,210891,210427,210095,210894,210895,210897,210898,210908,210914,210912,210924,210813,210364,210815,232952,329804,237798,232391,232392,233807,232917,235835,232816,232819,236631,237652,210961,210963,210964,210965,210821,210822,210823,210824,210826,210966,210969,210970,210971,210852,210206,210854,210855,210856,210311,210858,210375,210404,210861,210412,210367,210421,210865,210314,210869,210151,210871,210203,210333,210284,210900,210973,210104,210904,210905,210906,210909,210910,210911,210913,210915,210916,210212,210919,210920,210380,210922,210926,220060,752159,333573,237218,232959,334169,236927,236839,236652,331088,340010,221945,232570,221913,236311,236312,236313,236314,230452,230434,230290,230390,230389,230414,231487,230392,230391,237147,230417,237841,232432,232431,210047,232464,232463,232425,237971,236499,237384,237876,231406,230504,237650,230468,230475,231445,237366,230320,232659,231504,232486,236008,203069,243966,231454,231471,230534,230525,232454,237896,237959,242879,330875,232243,230319,236509,336820,236115,850921,222542,236716,236432,236480,236481,235368,235361,235363,236566,230456,230500,230455,230476,230281,230404,230255,235566,235580,235571,236147,220161,330854,237613,235874,235873,235870,236041,236040,761610,832852,236570,236851,236843,237410,336302,236900,320550,220111,236416,236486,210260,237952,220409,236273,236274,237047,236538,236685,827650,236340,200713,236362,236343,752000,236352,220599,236335,236364,236184,236185,236578,318924,232117,236907,236745,235765,237701,237879,230133,230653,230791,237424,237799,230746,230742,230743,230799,230102,333423,333526,230150,236738,235762,230202,230205,230206,230207,230217,230225,230266,230267,230268,230269,230278,230286,230288,230300,233850,230352,230355,230356,230357,230403,230406,236805,235725,230410,230411,230420,230421,230433,230442,230775,230465,230477,237423,230487,237141,329211,237250,230502,230503,230539,230540,230544,233876,235055,243806,236513,236515,237451,220455,236709,236727,236746,220521,236361,236774,332455,333979,236826,220439,236777,236710,236711,236673,236674,236675,236676,236677,236694,849325,236561,220454,211597,850417,222594,235945,236449,232848,234069,220061,236786,200316,200708,231688,235119,235049,221647,330393,323706,213166,222165,222575,213090,213089,211734,212085,211727,212090,212088,212089,212093,212086,210294,210432,212095,212097,210037,210286,212118,234575,336329,211980,210383,211982,210315,211983,211973,210394,211988,211984,210360,211972,211985,212138,234583,212125,212127,210413,210293,210134,230301,231455,212829,236091,235285,752188,232569,200462,204185,237567,235825,235823,232678,235202,237847,235288,237653,761699,236838,200557,200565,237873,237872,237871,237880,237882,237881,807685,751038,847841,849539,830813,832357,850872,804789,827675,340184,237902,861362,850065,333620,828816,813967,815357,807701,847851,807686,807689,237938,237939,237940,237941,203936,237942,237907,237943,237910,237944,237911,237945,237915,237914,237908,237909,237926,237928,237927,200247,237946,237975,237976,319789,233052,236068,236291,236023,237129,210156,236080,236078,210165,236671,236607,237721,232248,230258,230256,230259,206233,236033,828497,236744,236875,237751,237727,235919,235920,237683,210169,220453,236834,236154,237827,235965,237930,236898,235418,236066,235906,237378,235474,237051,235514,235512,236619,236618,236602,237489,236883,235759,235411,336193,336192,237507,345398,237231,236864,236865,236866,236867,237101,231766,231770,233378,210029,213037,213035,210167,213033,213032,212929,210316,212928,210341,213028,210049,210423,212737,233009,233066,752934,332476,220457,834314,236324,236242,236464,210144,222392,211503,236034,242866,237860,236396,230672,234412,210390,210327,236111,211665,211714,210211,211673,211674,211675,211672,210185,210400,211635,211670,211634,210349,211628,211629,211630,211631,211632,211633,211644,211643,211642,211641,211640,211639,211638,211637,211636,236152,211667,211668,210313,211671,220468,237700,236388,333932,210233,211683,211684,211685,211687,211688,211689,211690,329565,828534,753175,211724,752316,220610,236846,205581,753237,243847,232836,752548,205743,242614,242889,211715,211717,211718,211860,236346,237969,237672,237708,220619,237181,220101,210092,210377,210094,210097,815388,210069,210079,234459,236025,234435,230180,242738,242745,242799,222193,220016,752456,828457,333965,200757,237203,236917,336189,236862,237334,237335,236889,236807,236808,236810,236813,236812,237075,237324,323845,329426,330088,320555,236878,236769,207109,236923,236765,236941,236860,236861,237024,236082,236635,236667,236634,320238,323610,329684,222078,834416,237789,332451,235578,320526,242884,222079,232811,242882,237243,235375,235376,235377,211711,211709,211645,211646,211647,211648,210319,211651,211652,211677,211663,211653,210336,210205,210372,230790,237874,230812,222141,230671,230101,230599,232397,211834,333511,230650,232856,236939,230079,329591,236980,236981,237514,834046,230955,230131,220622,203699,230032,200754,848981,336207,236086,236891,231312,330018,211839,211841,333923,329206,232436,232437,235859,232089,200625,232114,232060,211793,211816,211770,211769,211768,211767,210058,211782,210425,210255,211774,211772,210189,753186,244886,244885,231347,205186,211783,211784,210323,210132,210405,211790,211792,210342,210424,211797,211798,210304,211800,211801,211802,210242,211804,210804,211806,210271,243980,243942,211893,211894,210252,237411,237772,222130,211809,211810,211811,211812,211813,211814,211815,222169,752605,244897,333424,211840,828585,220620,851742,237861,236816,237289,243807,242952,220434,220423,237932,236970,211890,230963,222137,237326,220177,237307,230014,220602,333522,231341,210012,211838,210407,230143,237242,237761,237681,345400,237472,807480,232051,235431,237159,329232,236392,232142,237687,329336,761708,331116,761683,236299,236294,237717,807448,233824,832551,232939,233820,233813,233833,237887,237725,235982,237239,237465,232954,814779,237780,220447,237901,237661,236105,236101,236093,237710,237645,237775,237778,237859,236060,236559,236138,236073,236148,236283,236501,210172,235928,236496,237454,237018,850233,235936,235533,235498,210040,235565,210102,237593,235564,235572,235944,235444,332325,235423,235482,235481,236049,235510,235551,235511,237694,237693,236173,236428,220582,329304,329307,837713,237479,237509,210348,345943,237664,237824,861086,237502,237533,237534,237537,237538,237539,237540,237541,237543,237521,237522,237523,237550,237551,237552,237553,237554,237524,237517,237525,237557,237527,237528,237516,237529,237530,237518,237520,237515,237548,237549,237558,237559,807417,348264,849946,849942,832084,311203,830968,232987,233804,827659,827660,827661,827662,827760,220475,232973,827694,827693,827692,827658,220180,236665,236650,235486,220573,235455,210007,235927,237034,235406,332355,332331,334054,334051,332329,334043,237719,235908,236736,205928,210028,220086,237573,237594,237510,237823,237595,220579,220578,237578,237606,237561,323851,237590,237724,237638,204161,237822,237712,237921,237977,237637,237733,237749,237970,220606,237850,237916,237917,237688,237804,237803,237812,237805,237806,237745,232398,235746,235964,237445,236849,237974,336730,237702,237703,237748,332337,334052,332335,827712,237836,237858,237891,329643,332288,345424,332016,237747,237746,237892,237739,237740,237738,237736,237737,237734,237735,220608,237918,818827,237886,237889,237890,237814,237834,237815,204735,237811,237894,237895,237897,237898,237899,237893,237825,237826,752837,780442,780451,811088,811058,333861,829246,237866,203920,752250,220596,237919,237675,237925,237924,752021,237808,237810,237884,237885,237838,237949,220612,237855,237853,332396,334324,828140,237960,237905,210520,329197,828661,829766,332385,329680) and staffImage is not null;
2022-01-07 16:45:37.410 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==> Parameters: 
2022-01-07 16:45:38.149 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - <==      Total: 5056
2022-01-07 16:45:41.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:45:41.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:45:41.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:45:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:45:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:45:45.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:45:45.256 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:45:45.256 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:45:45.256 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:45:45.257 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:46:01.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:46:01.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:46:01.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:46:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:46:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:46:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:46:15.260 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:46:15.260 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:46:15.260 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:46:15.260 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:46:41.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:46:41.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:46:41.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:46:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:46:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:46:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:46:45.266 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:46:45.266 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:46:45.266 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:46:45.266 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:47:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:47:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:47:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:47:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:47:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:47:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:47:15.282 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:47:15.282 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:47:15.282 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:47:15.282 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:49:42.758 [main] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 16:49:43.201 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 16:49:43.782 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 16:49:43.923 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 16:49:44.167 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{ [/history]}: history(Model)
	{GET [/equipment]}: equipment(Model)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{ [/]}: getEquipment()
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{ [/staffOperation]}: staffOperation()
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
2022-01-07 16:49:44.167 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 16:49:44.198 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 16:49:44.292 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 16:49:44.570 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 16:49:44.572 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:49:44.572 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:49:44.573 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:49:44.573 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:49:44.573 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:49:44.574 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:49:44.574 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:49:44.574 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:49:44.575 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:49:44.577 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:49:44.578 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:49:44.578 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:49:44.578 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:49:44.579 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:49:44.579 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:49:44.579 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:49:44.580 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:49:44.580 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 16:49:44.580 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:49:44.581 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:49:44.957 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: f426eeba-b8fa-4b41-b8ff-465290eca4a0
2022-01-07 16:49:44.973 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:49:44.989 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:49:45.005 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:49:45.005 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:49:45.005 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:49:45.005 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:49:45.020 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:49:45.036 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:2 ClientConnectionId: f14487b8-9fed-4054-bbd7-bc0289975d5b
2022-01-07 16:49:45.036 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:49:45.036 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:49:45.036 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:49:45.082 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:49:45.088 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: 7c80d5d0-7fcb-45e5-8be7-1f80f9789a9d
2022-01-07 16:49:45.105 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 1c3587bc-9aba-459f-a968-d806c4884119
2022-01-07 16:49:45.120 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 272892bd-81ff-4826-b590-caace4e0901f
2022-01-07 16:49:45.120 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 2edd527a-8549-47c2-8056-8151035878b4
2022-01-07 16:49:45.136 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: df497e7d-afdb-44b8-80ec-b339f056cde0
2022-01-07 16:49:45.151 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:49:45.151 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: c66bc8cd-5fb3-4b98-ab4c-910cda377f0d
2022-01-07 16:49:45.151 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:9 ClientConnectionId: e8fd947a-1f4a-4284-89e7-9eb2e15a64b7
2022-01-07 16:49:45.151 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 506567b5-27c1-401e-8ef0-6b93c520f120
2022-01-07 16:49:45.167 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: fd991b54-06df-4d86-8bad-71fadab914fa
2022-01-07 16:49:45.167 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:12 ClientConnectionId: 1b033ac1-95c6-4401-96a5-650ad3bcb5ba
2022-01-07 16:49:45.183 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: b39460c3-8be7-4150-a69b-8f00b76e1d4c
2022-01-07 16:49:45.183 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:14 ClientConnectionId: 3e90fbe6-5b0b-4775-b159-718db17ef888
2022-01-07 16:49:45.183 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:49:45.198 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 35734e74-e328-4b33-a7e7-58e373c0e63b
2022-01-07 16:49:45.205 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: e716a9cc-23fc-464d-887b-011d7b623df9
2022-01-07 16:49:45.214 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: e754e34f-4a7b-4b28-b0ae-f713926723bd
2022-01-07 16:49:45.230 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: 715b35fe-0ac9-4a06-9449-cb48a7979992
2022-01-07 16:49:45.230 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: a5e4c61a-d2fb-4e5b-a939-27e1fa9e7a46
2022-01-07 16:49:45.246 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 6230ea09-e971-4f6e-89d4-b0afbc92ffa2
2022-01-07 16:49:45.246 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:50:00.020 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:50:00.020 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:50:00.022 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:50:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:50:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:50:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:50:15.089 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:50:15.089 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:50:15.168 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:50:15.168 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:50:42.713 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:50:42.713 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:50:42.713 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:50:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:50:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:50:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:50:45.095 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:50:45.095 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:50:45.173 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:50:45.173 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:51:06.676 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 16:51:06.789 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@559a4a96
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@4689ba91
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3afa9463
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 16:51:06.813 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 16:51:15.109 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:51:15.186 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:51:18.218 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:51:18.219 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:51:24.200 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:51:24.203 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:51:24.205 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:51:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:51:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:51:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:51:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:51:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:51:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:51:48.224 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:51:48.224 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:51:48.224 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:51:48.224 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:52:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:52:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:52:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:52:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:52:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:52:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:52:18.236 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:52:18.236 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:52:18.236 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:52:18.236 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:52:25.579 [http-nio-8080-exec-6] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==>  Preparing: select * from V_UserInfo where staffImage is not null;
2022-01-07 16:52:25.579 [http-nio-8080-exec-6] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==> Parameters: 
2022-01-07 16:52:25.976 [http-nio-8080-exec-6] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - <==      Total: 5058
2022-01-07 16:52:26.027 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==>  Preparing: select * from V_UserInfo where staffCardNumber in (237319,224345,232197,237868,236411,243886,230616,237820,233213,233209,233219,221663,330506,323654,236787,237802,237158,244838,331366,236151,237560,234105,12345,666666666,7777777,11223344,224359,234797,231493,232779,222550,221645,235776,231704,231703,237994,236579,237767,236598,237398,220048,236254,230462,234482,234492,234512,243853,233374,237030,221629,236461,236477,222592,752027,230427,331635,331706,200712,233437,233735,237073,237835,230979,834361,333810,220547,237704,233138,233133,237563,237768,236466,221759,237412,330428,200574,236208,236210,237105,236260,237131,323601,233713,237343,232441,243809,212572,235378,222566,237477,236640,221739,222428,221730,222546,221627,221704,222207,848980,220482,222210,237501,221649,222434,211738,236707,221618,221650,222204,220079,221622,235899,236741,221607,222446,222163,221620,236328,236197,220089,236762,237511,237883,236067,221628,220541,236608,221606,221742,222441,221732,222413,221796,222556,237758,237461,236537,205556,234075,234011,224316,220534,221985,224315,236547,234010,236794,234036,234037,220528,224337,224363,224351,224304,236332,224368,220169,224335,224333,220567,220431,222354,221811,222352,224364,224365,224367,221897,212613,224377,220589,221623,222234,222407,236747,222240,221784,220098,222435,220096,244889,220458,222312,221617,206841,222439,221782,230569,200637,220594,222557,222342,221729,222202,220433,222214,222363,221619,220593,220440,222590,222332,235391,221639,237268,222007,222589,222176,231370,230796,234018,237784,235140,236764,345963,220411,224256,236381,234602,235135,230917,235066,234746,234743,236842,205338,234748,234394,231410,200573,236238,237414,235666,234606,831159,235136,236853,231293,237769,220609,235239,235138,232356,234635,235075,220526,222460,224758,206022,230623,234483,230467,230816,234395,234414,234411,234417,234515,234516,234508,234514,234510,234396,234540,234541,237072,224915,220595,221699,224535,206366,224423,220559,224495,210125,210409,224893,224982,220112,233994,222009,210207,210250,220032,205178,234888,235938,243845,230046,221790,221972,233362,224467,222008,323760,332240,231707,236545,210171,233273,237458,334361,828035,815383,330650,220591,330422,751994,828167,818825,235342,234724,235653,849216,232400,237364,234147,234048,236624,234578,237786,236484,236593,237382,220181,236246,230033,237750,231686,235925,234031,232967,230220,244905,345421,232557,232342,236926,828153,333943,329645,237950,242776,334018,236925,233957,231297,233223,349077,236933,236586,234081,234053,236318,235737,237163,237165,236212,847809,236317,243866,236798,237167,234403,232663,235307,807855,850249,237419,236932,237170,829704,235730,237164,807465,243875,232789,237569,807428,243878,231783,234116,232932,235662,349091,243868,243865,237471,807499,237166,807477,243867,243978,807547,237570,237459,807469,236532,230788,230783,243971,236922,243863,236879,236406,230697,237169,234113,235833,236852,236837,230282,230666,231502,230215,230493,230107,331069,320534,237646,222136,244841,753657,761685,329366,332358,329564,833865,332373,244942,231778,222480,329779,221689,236463,331154,334141,336169,331348,237770,834205,331679,751926,752267,814519,233220,220511,237171,221668,345475,212546,237508,235772,237431,345509,329920,329714,234371,237937,330026,235704,329353,237135,336173,235102,333697,213083,210123,213082,761689,329682,236172,236121,236123,236155,236150,237655,236027,237633,861909,236265,237794,236348,236252,848942,236384,862855,210176,220459,236436,850610,220164,236427,236168,236506,220465,220466,236555,210281,235981,237358,237632,235503,237755,232350,232289,333508,232351,232883,232884,848957,221838,235550,828970,236405,236215,233389,807420,237340,221638,234029,220546,233545,237615,339081,236099,234159,237228,236549,233390,340310,236069,243881,234581,232599,243864,237172,243977,220442,236344,236863,847766,233166,329529,236928,243862,848818,237934,243880,243976,237842,231669,236465,244939,237731,200700,235002,237017,237395,230557,850469,221789,232777,231697,330386,207671,235567,237692,211569,236467,222377,221644,236877,234136,850051,814841,237685,236937,234094,236934,237341,233979,237176,206098,830970,220401,224835,236628,243924,243931,220092,861072,753203,753199,243940,243941,222185,237790,220554,236599,203621,237864,212733,237463,329215,232907,322264,210987,237870,231515,220085,232348,220056,220074,232302,230729,237202,234832,330515,237049,235717,236298,236326,236474,850476,237771,329887,236596,220171,234857,330586,222541,233363,236380,242730,753202,237989,224888,752480,237833,243936,231362,752482,243995,237302,237299,237300,237292,237297,237305,237640,237309,220525,330127,237336,330205,220560,220557,861056,237415,237406,237669,200667,200447,236203,222063,237678,348694,331181,242813,242899,236507,333905,834360,320547,237052,237764,237648,242815,331086,320548,753090,332154,235367,333925,827794,829457,236130,834234,236230,206268,233794,230020,220571,224626,224906,222494,224745,212848,211680,329399,236323,235038,330448,233797,332206,834340,222458,211583,242995,333706,237783,242746,322864,230603,230795,233864,237157,230573,237583,220621,237773,230624,333941,323863,753081,232337,232962,323639,834035,333510,206343,237278,230720,230723,230717,331076,220486,230335,230341,230238,237196,230263,230244,234556,231327,333981,237837,332207,333428,220615,237935,236433,222548,237162,211740,237832,236648,236327,333500,237204,237197,237206,237208,237368,237498,220531,237116,237216,237213,237117,237118,804786,828886,237174,752044,761693,220551,220550,220552,237322,220553,220569,237314,237757,237413,220402,230848,234058,234061,234063,235753,233848,237512,233936,237460,236378,236921,234182,237878,205442,237388,234090,234091,237241,210119,224397,220613,235838,203445,237452,220584,237481,237505,237506,237828,237667,237668,237852,222474,222469,222481,222454,222455,220590,222468,211582,222470,220404,222473,220627,233050,233231,237845,233875,224318,224308,234034,224430,230787,330645,211751,213000,211730,752983,220586,333900,828233,332437,320509,329655,237602,232730,235430,235210,232753,222065,237931,231303,232765,232764,232763,237601,329262,339432,220530,323606,348072,332356,237183,237184,237185,220565,237474,237291,237290,851516,236969,235781,235782,235816,235784,236884,237699,236097,236061,230744,230664,235508,237232,237556,237280,236397,235872,329196,232276,230740,235716,235175,850477,236779,236874,237436,234752,237597,234751,232665,232285,220607,237660,237831,211900,336853,236724,237200,752170,237286,237288,237316,237296,237315,237817,237962,237630,237674,237180,204221,847842,813969,829768,807699,813966,828815,203508,814610,807690,807682,813964,849041,847852,205540,848958,828962,237877,220523,763703,26462,814809,340418,850555,850342,349155,322551,230018,345440,244901,244906,230093,237325,753180,236828,211854,230094,230106,834194,230128,831149,220585,230941,233943,222140,230109,237649,232288,231311,230105,220080,236612,244984,234782,210003,331715,331345,752010,221966,752061,236241,234812,235213,237785,212734,212735,210979,211595,212927,212925,213087,211598,221646,322199,221680,237792,334144,213169,323608,211886,232002,237781,206640,236717,331174,330008,236472,236236,235709,244839,828489,235245,234491,234474,231843,230460,230497,231428,230370,230376,234535,230394,235370,230396,233927,237591,230382,230398,230295,237656,231495,230272,230273,231349,231497,233312,230333,230324,230292,230241,230306,333988,236739,231513,230887,231838,235740,237585,234423,231363,231562,220490,242795,243999,211821,236024,237582,233919,230165,242860,237616,230088,231490,230287,230548,230529,230126,753114,211737,236505,242947,211744,211842,242953,222084,330503,210420,230886,230915,242788,242956,210803,221780,212865,222417,220601,234539,236968,237787,212835,237951,236890,232780,237145,807546,237706,236435,236247,237407,237580,237279,237355,220497,237576,850248,237666,220519,829137,237320,237281,807507,220561,237598,237663,237600,237453,330648,237636,237635,237111,237112,237113,237155,237245,237503,237504,220504,237795,237496,237078,237081,237480,237080,237082,345848,220605,237240,237728,237087,237088,237095,237574,237092,237680,237086,752415,345986,237500,236986,237269,237270,237839,237265,237257,237276,237264,237103,237104,237426,235932,235903,236036,827649,210126,237849,236836,236032,236649,237371,832764,236018,833822,235929,861135,236249,237972,237995,233484,233984,233814,237848,235860,237432,323732,237856,237865,237662,237499,237670,237409,237695,234472,236026,237399,230582,236166,235450,235864,237562,235780,237904,235722,236098,752046,751966,234140,236240,236592,236564,236305,829015,828812,237651,834236,349262,235018,828999,233292,234796,236789,231588,231460,230239,230718,235334,236558,234076,236892,236347,235298,234375,236581,230013,235109,220410,230197,236225,323575,329740,237992,236376,237584,222569,212136,220548,231378,222467,231709,200305,222464,233089,220088,212109,752335,235902,210081,210082,210083,210084,210085,210087,210310,210090,210091,210098,235880,235877,236580,236620,237321,234146,210113,236574,220616,236075,237846,235910,236010,236584,210110,814472,237429,224341,224373,329626,231381,230605,235826,237696,224624,235901,234778,236953,234042,235304,323759,236733,329526,331150,236950,210984,213151,212718,212040,211869,210274,213227,210332,212991,212997,212041,211898,210237,213294,212908,212042,213221,212644,211931,333766,220624,222364,242723,236948,242711,220072,220545,323752,234131,237967,231377,237102,222568,232589,234052,234151,234725,231305,231713,237226,237851,236322,242959,237813,237360,242960,242961,242962,761694,349204,329281,236688,244913,242641,242644,242617,753187,237575,233812,243808,242783,244863,244865,204683,761606,333931,232859,830327,236991,236803,752969,331678,237961,833771,230490,329841,234739,232980,237715,236196,237954,237953,237956,237957,753096,237965,237966,237964,235518,235656,234770,242728,231477,230533,230347,230227,332489,332416,211855,244967,230070,230682,333520,333518,333427,333600,333509,211823,244917,237609,333525,235425,220444,237377,236848,236708,230043,230022,210419,231561,322313,221682,232534,347961,330798,235806,235931,235985,237274,236858,236605,235788,235787,235789,235794,235983,235802,235803,235805,237741,235811,235813,235815,236087,849619,236998,234386,236330,236700,211559,828482,233442,233443,233473,211549,230505,237791,345379,235537,233853,233485,233905,230703,236500,231299,234494,234521,234488,234526,234430,234431,234465,234429,234413,232131,234548,234447,234527,234418,237462,230413,237478,236893,234791,221798,243804,232260,9988776,224454,234595,236468,210247,210192,213230,212601,212105,213231,213237,212047,212520,213076,211935,212910,210402,212050,213077,213232,212720,212051,212052,210417,213300,213233,211936,212994,212721,212130,210344,210244,210980,212054,212996,212687,212655,212055,210122,210338,212912,232294,233222,237433,236221,236306,200765,235019,237659,815381,234863,234834,236394,243897,224266,211622,329297,234843,236533,236535,224322,234538,237730,237190,234762,242752,206865,851182,237036,828180,221684,222404,235770,237776,237766,234787,235597,235588,237422,237420,236194,211933,211932,212048,213295,212688,210232,212043,212653,210362,211603,213224,213226,213266,213223,211934,212103,213228,210059,212519,212045,213222,212823,212909,213171,211879,212516,213296,236243,222035,235410,222133,234858,233614,329394,230127,233889,231285,753660,237401,234372,237441,236534,833762,233371,231329,331346,814533,220533,221635,234519,234520,234446,234493,234547,234432,234524,234466,234437,244849,234438,234522,235941,234489,234523,234544,235850,234440,234543,234419,234525,243830,237143,237487,849949,236136,236931,243891,236543,234400,234407,203778,237137,233624,331350,200701,242714,222197,233783,237774,234786,814725,235083,237843,235844,751956,234033,751960,233380,220481,334131,323645,211756,210305,213044,220102,234074,233800,221681,861850,332440,220532,212793,233676,221654,212106,212857,236556,233056,221676,331676,329810,237038,212861,213003,236276,234014,234015,330682,323744,242639,213154,212913,236510,236886,237743,212860,212858,212859,828098,243921,222178,234099,210350,233272,849315,232357,833959,235439,230756,222000,221675,237762,236802,234511,235142,234103,230747,243838,237091,232387,234845,234844,220426,222371,233015,235839,233633,222226,204473,833898,237658,224370,234019,234138,237233,224398,236470,233375,221693,234567,233061,221683,224928,221685,231975,221643,224267,213116,222190,213005,221783,236734,236355,329498,234727,234768,331607,234397,234398,237392,237608,329781,233090,212645,232052,236773,233287,236473,222476,237464,753091,200699,233218,204288,222327,231642,234773,234892,237698,234110,235758,234108,234112,318478,334198,220418,210276,230373,231831,231835,230368,230424,329707,332246,221763,221696,230506,230472,233901,205526,236512,237963,232642,236625,236594,233955,220073,243872,236475,814584,224330,850765,235729,231402,230725,230453,237175,230299,230297,237115,230454,232822,222583,834317,320525,320599,237065,233467,230564,231418,230489,236845,230491,231403,237592,235320,230381,236106,237195,233119,231917,222047,333790,330013,236403,829003,237253,224319,222175,237138,233091,237416,242880,232626,233712,220450,221695,221717,323731,232352,235092,235962,236636,235947,235950,235952,235601,237623,235604,237396,235606,235610,235608,235609,235611,235612,235616,235618,235663,235622,235623,235624,235625,235626,235633,235634,235828,235636,235637,235638,235639,235890,235640,235641,235966,332496,206575,333436,332328,211899,244937,243813,237671,860470,231436,753661,235866,236158,235960,232071,236444,236479,235553,231529,237342,231700,224325,224328,235719,234021,222386,336829,236429,237993,211764,237689,235106,236462,220577,221712,237726,323578,220484,224932,212078,212077,210157,212073,212076,212082,210229,210269,212112,210147,212110,211578,213246,212529,233096,234779,235014,231796,236641,213411,235728,210317,210115,221706,237379,234833,237788,221710,232081,752570,752722,333636,334325,236520,230636,333512,230782,220006,230638,230639,230735,220097,230633,230073,220034,751964,220445,236546,231678,237929,231698,222221,222162,235667,236248,236952,235797,236216,237948,236244,236792,220518,220626,833960,242989,220583,237294,232877,203382,234889,237801,234481,237039,206716,336315,235176,232560,232556,232554,232487,236982,336384,235706,224255,235875,235769,230647,221648,212523,833828,233063,233918,224741,232349,220472,206185,232423,329679,205170,230132,224331,761670,233160,222068,234380,235189,236277,231731,237617,212547,752846,231342,233310,221947,234408,234529,236459,236903,213404,231417,234502,220028,235756,833718,329702,210016,233162,231735,234057,235048,323848,207102,235147,235146,334226,237958,232325,237402,237356,232328,232304,232298,236977,232362,232329,232314,237357,232306,232363,232308,232310,232312,231558,231566,231567,231574,231585,231590,232202,237186,232206,232212,232213,231598,231599,232201,232221,232223,237642,753194,220053,220057,220055,232369,237107,232934,237797,232262,220617,331104,232869,237425,232871,237697,232372,232382,235724,232380,232381,236940,235774,237564,751095,235143,244803,210136,236503,235845,233973,330450,752232,212794,829060,235521,220574,323583,323798,237796,334014,333523,333604,230919,210002,834203,222549,330919,834228,237709,230815,230814,850876,752256,232341,237333,237754,232257,235744,237442,235748,232694,232675,237903,236960,752584,346142,204324,200787,236514,828756,242760,333882,820676,244813,242888,242648,236302,236315,236325,236476,230736,204768,220407,331598,237682,334342,231857,237818,236365,221980,232880,232978,233849,244869,221753,234460,231563,234442,234931,234453,233101,234552,220415,220052,236469,236234,236303,230826,237026,236300,236455,236209,237015,234912,234789,323611,329542,211745,231611,330461,828491,332315,232041,205568,235727,206158,236882,233372,236096,235069,203922,237686,212816,232417,230805,237191,235837,330593,233519,237840,753088,232340,231360,237428,236630,236647,242789,235995,235863,236972,237809,232927,237765,236062,230981,231364,232399,236288,828176,232875,207657,220051,237753,235068,236174,221929,243810,332360,333447,232837,211864,331062,235522,333519,236613,230965,232292,230532,210186,332294,333777,320520,323493,236979,231536,336171,235100,235104,329335,221954,203641,329751,345447,236222,329189,329286,320619,233635,211558,211501,235793,231451,333751,331033,231521,230330,235316,230350,242842,230415,230416,232225,230305,230310,230321,230383,230219,237912,237468,230224,230536,752581,232983,829004,236214,236220,236228,236226,242932,236551,232888,230209,236304,221813,242951,213239,230050,221660,220485,221658,329510,334237,230716,200502,236519,233087,233639,236410,237857,235842,237385,237763,236567,234774,236281,235742,211829,329857,213156,212920,211830,213243,213245,213241,213242,237936,234132,230679,236088,220114,236413,211570,242685,200549,233983,206645,234806,212732,211592,210389,211725,220488,751991,752441,210312,212862,212727,212724,212731,212725,212061,210227,211943,211940,212071,212062,211755,211942,212060,210334,212059,210253,210118,212066,212067,210209,211941,210396,212058,212072,211844,213014,211616,210004,210265,210392,213013,213162,213155,237875,329466,323792,323617,224268,212738,234776,242662,330585,334282,330678,235090,237988,230958,233768,232699,233097,237676,237923,237888,236971,236973,236975,236974,334168,834192,237108,237069,237339,753192,237273,237271,237862,237217,236989,237011,236990,237317,207115,237013,237068,220489,210927,210928,210929,210930,210931,210932,210297,210934,210935,210936,210937,210940,210941,210942,210943,210945,210954,210955,210956,210958,236993,237021,237064,237066,220517,237067,237867,243826,243827,237973,220566,236460,237150,230813,237863,242718,236114,236793,236268,235984,244882,230201,231489,329258,323857,233811,233461,236321,220050,242812,237869,237109,232377,236964,851743,827751,231358,231357,230818,231388,237421,847709,235178,220580,230925,232847,230948,230943,329413,237330,231314,231320,753111,232343,221711,212722,222131,233397,320623,320510,344949,329288,320511,333789,329193,203374,236377,237446,237349,236320,323542,849585,829002,235865,334231,236550,205386,220539,232919,233942,236704,236310,236293,233274,230005,204500,237227,230060,235061,751923,220422,236485,220568,237311,237793,232653,236681,236682,236680,236683,236896,827673,236963,220575,236572,236573,236576,220478,236699,236751,236712,236713,236701,237063,236750,236748,236857,850457,237614,232231,232868,206548,236657,220477,333539,332426,333613,236888,236692,236799,236796,236809,236703,237023,236800,220506,236916,236832,237677,237025,237376,237054,235118,236725,237807,235086,221634,234977,236206,235715,204910,224360,237987,237400,236205,237077,233366,233370,220090,200379,235739,236999,237000,237654,237611,237009,237004,237293,237260,237259,237272,237295,236795,236830,220564,220514,237053,207661,237486,236951,237057,236949,237149,237058,332281,237759,236945,237263,230689,753108,242806,333926,242830,761611,233832,232941,333483,235904,233818,233817,233819,232989,333994,233802,333456,237657,335898,236905,333530,832044,851517,235996,235924,233803,332422,236651,235527,220189,237417,242772,242774,203767,242775,232801,233280,233281,234631,221691,237644,235335,234518,230483,222341,230459,220623,752490,235062,237132,234742,234719,231849,230978,211930,331294,233949,237641,235457,333517,233965,220435,332330,220436,237027,236784,236785,236721,236431,833635,323705,233877,832849,831694,828150,210600,210876,236615,236913,237337,232905,850830,236585,235926,232947,236084,236695,832850,237684,236074,210395,210238,210340,210836,210838,210355,210840,210842,210138,210844,210378,210251,210847,210816,210817,210818,210819,210848,210849,210850,210827,210851,210828,210877,210878,210347,210879,210946,210431,210947,210948,210882,210825,210357,210884,210885,210371,210888,210182,210890,210891,210427,210095,210894,210895,210897,210898,210908,210914,210912,210924,210813,210364,210815,232952,329804,237798,232391,232392,233807,232917,235835,232816,232819,236631,237652,210961,210963,210964,210965,210821,210822,210823,210824,210826,210966,210969,210970,210971,210852,210206,210854,210855,210856,210311,210858,210375,210404,210861,210412,210367,210421,210865,210314,210869,210151,210871,210203,210333,210284,210900,210973,210104,210904,210905,210906,210909,210910,210911,210913,210915,210916,210212,210919,210920,210380,210922,210926,220060,752159,333573,237218,232959,334169,236927,236839,236652,331088,340010,221913,232464,232463,231406,230504,237650,230468,230475,231445,237366,230320,236509,336820,236716,236432,236480,236481,235368,235361,235363,236566,230456,230500,230455,230476,230281,230404,230255,235566,235580,235571,236147,220161,330854,237613,235874,235873,235870,236041,236040,236570,236851,236843,237410,336302,236900,320550,220111,236416,236486,210260,237952,220409,236273,236274,237047,236538,236685,827650,236340,200713,236362,236343,752000,236352,220599,236335,236364,236184,236185,236578,236907,237879,230133,230653,230791,237424,237799,230746,230742,230743,230799,230102,333423,333526,230150,236738,235762,230202,230205,230206,230207,230217,230225,230266,230267,230268,230269,230278,230286,230288,230300,233850,230352,230355,230356,230357,230403,230406,236805,235725,230410,230411,230420,230421,230433,230442,230775,230465,230477,237423,230487,237141,329211,237250,230502,230503,230540,230544,233876,235055,243806,236513,236515,237451,236709,236727,236746,220521,236361,236774,332455,333979,236826,220439,236777,236710,236711,236673,236674,236675,236676,236677,236694,849325,236561,220454,235119,235049,213166,211980,235285,752188,232569,200462,204185,237567,235202,237847,235288,237653,761699,236838,200557,200565,237873,237872,237871,237880,237882,237881,807685,751038,847841,849539,830813,832357,850872,804789,827675,340184,237902,861362,850065,333620,828816,813967,815357,807701,847851,807686,807689,237938,237939,237940,237941,237942,237907,237943,237910,237944,237911,237945,237915,237914,237908,237909,237926,237928,237927,200247,237946,237975,237976,319789,233052,236068,236291,236023,237129,210156,236080,236078,210165,236671,236607,237721,236033,828497,236744,236875,237751,237727,235919,235920,237683,210169,220453,236834,236154,237827,235965,237930,236898,235418,236066,235906,237378,235474,237051,235514,235512,236619,236618,236602,237489,236883,235411,336193,336192,237507,345398,237231,236864,236865,236866,236867,237101,210167,212929,212928,752934,332476,236324,236242,236464,211503,236034,242866,237860,210390,210327,236111,211665,211714,210211,211673,211674,211675,211672,210185,210400,211635,211670,211634,210349,211628,211629,211630,211631,211632,211633,211644,211643,211642,211641,211640,211639,211638,211637,211636,236152,211667,211668,210313,211671,220468,237700,236388,333932,210233,211683,211684,211685,211687,211688,211689,211690,329565,828534,753175,211724,752316,220610,236846,205581,753237,243847,232836,752548,205743,242614,242889,211717,211718,211860,236346,237969,237672,237708,220619,237181,220101,210092,210377,210094,210097,815388,210069,210079,230180,242738,242745,242799,222193,220016,752456,828457,333965,200757,237203,236917,336189,236862,237334,237335,236889,236807,236808,236810,236813,236812,237075,237324,323845,329426,330088,320555,236878,236769,207109,236923,236765,236941,236860,236861,237024,236082,236635,236667,236634,320238,323610,329684,222078,834416,237789,332451,235578,320526,242884,222079,232811,242882,237243,235375,235376,235377,211711,211709,211645,211646,211647,211648,210319,211651,211652,211677,211663,211653,210336,210205,210372,230790,237874,230812,222141,230671,230101,230599,232397,211834,333511,230650,232856,236939,230079,329591,236980,236981,237514,834046,230955,230131,220622,203699,230032,200754,848981,336207,236086,236891,231312,330018,211839,211841,333923,211793,211816,211770,211769,211768,211767,210058,211782,210425,210255,211774,211772,210189,753186,244886,244885,231347,205186,211783,211784,210323,210132,210405,211790,211792,210342,210424,211797,211798,210304,211800,211801,211802,210242,211804,210804,211806,210271,243980,243942,211893,211894,210252,237772,222130,211809,211810,211811,211812,211813,211814,211815,222169,752605,244897,333424,211840,828585,220620,851742,237861,236816,237289,243807,242952,220434,220423,237932,236970,211890,230963,222137,237326,220177,237307,230014,220602,333522,231341,210012,211838,210407,230143,237242,233824,832551,232939,233820,233813,233833,237887,237725,235982,237239,237465,232954,814779,237780,220447,237901,237661,236105,236101,236093,237710,237645,237775,237778,237859,236060,236559,236138,236073,236148,236283,236501,210172,235928,236496,237454,237018,850233,235936,235533,235498,210040,235565,210102,237593,235564,235572,235944,235444,332325,235423,235482,235481,236049,235510,235551,235511,237694,237693,236173,236428,220582,329304,329307,837713,237479,237509,210348,345943,237664,237824,861086,237502,237533,237534,237537,237538,237539,237540,237541,237543,237521,237522,237523,237550,237551,237552,237553,237554,237524,237517,237525,237557,237527,237528,237516,237529,237530,237518,237520,237515,237548,237549,237558,237559,807417,348264,849946,849942,832084,311203,830968,232987,233804,827659,827660,827661,827662,827760,220475,232973,827694,827693,827692,827658,220180,236665,236650,235486,220573,235455,210007,235927,237034,235406,332355,334054,334051,332329,334043,237719,235908,236736,205928,210028,220086,237573,237594,237510,237823,237595,220579,220578,237578,237606,237561,323851,237590,237724,237638,204161,237822,237712,237921,237977,237637,237733,237749,237970,220606,237850,237916,237917,237688,237804,237803,237812,237805,237806,237745,232398,235746,235964,237445,236849,237974,336730,237702,237703,237748,332337,334052,332335,827712,237836,237858,237891,329643,332288,345424,332016,237747,237746,237892,237739,237740,237738,237736,237737,237734,237735,220608,237918,818827,237886,237889,237890,237814,237834,237815,204735,237811,237894,237895,237897,237898,237899,237893,237825,237826,752837,780442,780451,811088,811058,333861,829246,237866,203920,752250,220596,237919,237675,237925,237924,752021,237808,237810,237884,237885,237838,237949,220612,237855,237853,332396,334324,828140,237960,237905,210520,329197,828661,829766,332385,329680) and staffImage is not null;
2022-01-07 16:52:26.032 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==> Parameters: 
2022-01-07 16:52:26.951 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - <==      Total: 3732
2022-01-07 16:52:48.246 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:52:48.246 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:52:55.856 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:52:55.856 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:52:55.856 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:52:55.856 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:52:55.856 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:53:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:53:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:53:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:53:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:53:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:53:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:53:25.863 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:53:25.863 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:53:25.863 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:53:25.865 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:53:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:53:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:53:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:53:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:53:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:53:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:53:55.872 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:53:55.872 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:53:55.872 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:53:55.872 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:54:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:54:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:54:01.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:54:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:54:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:54:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:54:25.892 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:54:25.892 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:54:25.892 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:54:25.893 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:54:41.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:54:41.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:54:41.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:54:45.020 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:54:45.020 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:54:45.020 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:54:55.900 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:54:55.900 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:54:55.900 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:54:55.905 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:55:01.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:55:01.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:55:01.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:55:20.819 [main] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 16:55:21.254 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 16:55:21.811 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 16:55:21.955 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 16:55:22.172 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{ [/history]}: history(Model)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{ [/]}: getEquipment()
	{ [/staffOperation]}: staffOperation()
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{GET [/equipment]}: equipment(Model)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
2022-01-07 16:55:22.172 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 16:55:22.204 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 16:55:22.282 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:55:22.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:55:22.533 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:55:22.533 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:55:22.533 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:55:22.533 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:55:22.533 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:55:22.925 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: aff3900f-dcbb-422c-845f-d7257789503f
2022-01-07 16:55:22.925 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:55:22.941 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:55:22.957 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:55:22.972 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:55:22.972 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:55:22.972 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:55:23.035 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:55:23.057 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 46deccd4-3434-4577-b1f2-73866350e77a
2022-01-07 16:55:23.066 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: e77ba7d9-4681-42eb-958c-4f31a8eaf9db
2022-01-07 16:55:23.082 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 0440e40a-c05a-4135-9c2e-03217f9aeefa
2022-01-07 16:55:23.082 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 210cda38-4c18-4ce9-b22b-9d8c6d15f305
2022-01-07 16:55:23.098 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 756c187a-66e9-4281-9ed5-ee5df399972b
2022-01-07 16:55:23.113 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 47ec377d-2650-4338-b949-d1f696eba719
2022-01-07 16:55:23.129 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 658f3919-67e4-4d66-a26c-5aa5bbca373d
2022-01-07 16:55:23.144 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 71b8cfa5-e374-4b42-85db-e23408383614
2022-01-07 16:55:23.160 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 5d35e8da-4370-485c-aa1f-4e9d73f9dc83
2022-01-07 16:55:23.160 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:55:30.021 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:55:30.036 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:55:30.052 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:55:30.052 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:55:30.052 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:55:30.071 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 0ef403d4-7815-4f4d-aae1-412c35bb9e05
2022-01-07 16:55:30.071 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:55:30.071 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:55:30.071 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:55:30.193 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:55:30.209 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 32a8ea1d-9ae7-486b-9041-2120bf449115
2022-01-07 16:55:30.209 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: 195ee7c0-e3d8-4582-a1bc-e4bdb9a03b55
2022-01-07 16:55:30.224 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 46b10601-3652-4ae9-b5df-7b5a2db8dd76
2022-01-07 16:55:30.240 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 552c780d-769f-4c4c-8614-b26e95f1ded1
2022-01-07 16:55:30.255 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: c9386b4e-d942-477d-a0c9-01067671ccfd
2022-01-07 16:55:30.255 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: eb431832-aa34-4d67-ae06-e2a869f416a9
2022-01-07 16:55:30.276 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: 941987c3-395f-4141-92f7-e58a289b46c5
2022-01-07 16:55:30.287 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: f9457052-e1ee-4d90-84c5-af48d74497e0
2022-01-07 16:55:30.303 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 4554d6f1-f8a4-4062-8bf2-2e4e8b83ecdd
2022-01-07 16:55:30.303 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:55:45.024 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:55:45.024 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:55:45.030 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:55:46.050 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 16:55:46.147 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@21726aea
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@74b63a93
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@15d3d5d8
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 16:55:46.170 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 16:55:53.050 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:55:53.050 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:55:53.604 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:55:53.604 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:55:53.604 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:55:53.604 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:55:53.604 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:55:34.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:55:53.618 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:56:00.203 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:56:00.203 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:56:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:56:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:56:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:56:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:56:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:56:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:56:23.056 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:56:23.056 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:56:30.225 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:56:30.225 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:56:41.713 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:56:41.713 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:56:41.713 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:56:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:56:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:56:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:56:53.065 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:56:53.065 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:57:00.111 [http-nio-8080-exec-9] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==>  Preparing: select * from V_UserInfo where staffImage is not null;
2022-01-07 16:57:00.111 [http-nio-8080-exec-9] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==> Parameters: 
2022-01-07 16:57:00.240 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=1, idle=9, waiting=0)
2022-01-07 16:57:00.240 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:57:00.518 [http-nio-8080-exec-9] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - <==      Total: 5058
2022-01-07 16:57:00.565 [http-nio-8080-exec-9] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==>  Preparing: select * from V_UserInfo where staffCardNumber in (237319,224345,232197,237868,236411,243886,230616,237820,233213,233209,233219,221663,330506,323654,236787,237802,237158,244838,331366,236151,237560,234105,224359,234797,231493,232779,222550,221645,235776,231704,231703,237994,236579,237767,236598,237398,220048,236254,230462,234482,234492,234512,243853,233374,237030,221629,236461,236477,222592,752027,230427,331635,331706,200712,233437,233735,237073,237835,230979,834361,333810,220547,237704,233138,233133,237563,237768,236466,221759,237412,330428,200574,236208,236210,237105,236260,237131,323601,233713,237343,232441,243809,212572,237477,221704,221649,235899,236741,222446,236328,236197,220089,236762,237511,237883,236067,237758,237461,236537,205556,234075,234011,224316,220534,221985,224315,236547,234010,236794,234036,234037,220528,224337,224363,224351,224304,236332,224368,220169,224335,224333,224367,221897,212613,224377,222234,222312,221617,206841,220440,231370,230796,234018,237784,235140,236764,345963,220411,224256,236381,234602,235135,230917,235066,234746,234743,236842,205338,234748,234394,231410,200573,236238,237414,235666,234606,831159,235136,236853,231293,237769,220609,235239,235138,232356,234635,235075,220526,222460,224758,206022,230623,234483,230467,230816,234395,234414,234411,234417,234515,234516,234508,234514,234510,234396,234540,234541,237072,224915,220595,221699,224535,206366,224423,220559,224495,210125,210409,224893,224982,220112,233994,222009,210207,210250,220032,205178,234888,235938,243845,230046,221790,221972,233362,224467,222008,323760,332240,231707,236545,210171,233273,237458,334361,828035,815383,330650,220591,330422,751994,828167,818825,235342,234724,235653,849216,232400,237364,234147,234048,236624,234578,237786,236484,236593,237382,220181,236246,230033,237750,231686,235925,234031,232967,230220,244905,345421,232557,232342,236926,828153,333943,329645,237950,242776,334018,236925,233957,231297,233223,349077,236933,236586,234081,234053,236318,235737,237163,237165,236212,847809,236317,243866,236798,237167,234403,232663,235307,807855,850249,237419,236932,237170,829704,235730,237164,807465,243875,232789,237569,807428,243878,231783,234116,232932,235662,349091,243868,243865,237471,807499,237166,807477,243867,243978,807547,237570,237459,807469,236532,230788,230783,243971,236922,243863,236879,236406,230697,237169,234113,235833,236852,236837,230282,230666,231502,230215,230493,230107,761685,329366,332358,329564,833865,332373,244942,231778,222480,329779,221689,236463,331154,334141,336169,331348,237770,834205,331679,751926,752267,814519,233220,220511,237171,221668,345475,212546,237508,235772,237431,345509,329920,329714,234371,237937,330026,235704,329353,237135,336173,235102,333697,213083,210123,213082,761689,329682,236172,236121,236123,236155,236150,237655,236027,237633,861909,236265,237794,236348,236252,848942,236384,862855,210176,220459,236436,850610,220164,236427,236168,236506,220465,220466,236555,210281,235981,237358,237632,235503,237755,232350,232289,333508,232351,232883,232884,848957,221838,235550,828970,236405,236215,233389,807420,237340,221638,234029,220546,233545,237615,339081,236099,234159,237228,236549,233390,340310,236069,243881,234581,232599,243864,237172,243977,220442,236344,236863,847766,233166,329529,236928,243862,848818,237934,243880,243976,237842,231669,236465,244939,237731,200700,235002,237017,237395,230557,850469,221789,232777,231697,330386,207671,235567,237692,211569,236467,222377,221644,236877,234136,850051,814841,237685,236937,234094,236934,237341,233979,237176,206098,830970,220401,224835,236628,243924,243931,220092,861072,753203,753199,243940,243941,222185,237790,220554,236599,203621,237864,212733,237463,329215,232907,322264,210987,237870,231515,220085,232348,220056,220074,232302,230729,237202,234832,330515,237049,235717,236298,236326,236474,850476,237771,329887,236596,220171,234857,330586,222541,233363,236380,242730,753202,237989,224888,752480,237833,243936,231362,752482,243995,237302,237299,237300,237292,237297,237305,237640,237309,220525,330127,237336,330205,220560,220557,861056,237415,237406,237669,200667,200447,236203,222063,237678,348694,331181,242813,242899,236507,333905,834360,320547,237052,237764,237648,242815,331086,320548,753090,332154,235367,333925,827794,829457,236130,834234,236230,206268,233794,230020,220571,224626,224906,222494,224745,212848,211680,329399,236323,235038,330448,233797,332206,834340,222458,211583,242995,333706,322864,230603,230795,233864,237157,230573,237583,220621,237773,230624,333941,323863,753081,232337,232962,323639,834035,333510,206343,237278,230720,230723,230717,331076,220486,230335,230341,230238,237196,230263,230244,234556,231327,333981,237837,332207,333428,220615,237935,236433,222548,237162,211740,237832,236648,236327,333500,237204,237197,237206,237208,237368,237498,220531,237116,237216,237213,237117,237118,804786,828886,237174,752044,761693,220551,220550,220552,237322,220553,220569,237314,237757,237413,220402,230848,234058,234061,234063,235753,233848,237512,233936,237460,236378,236921,234182,237878,205442,237388,234090,234091,237241,210119,224397,220613,235838,203445,237452,220584,237481,237505,237506,237828,237667,237668,237852,222474,222469,222481,222454,222455,220590,222468,211582,222470,220404,222473,220627,233050,233231,237845,233875,224318,224308,234034,224430,230787,330645,211751,213000,211730,752983,220586,333900,828233,332437,320509,329655,237602,232730,235430,235210,232753,222065,237931,231303,232765,232764,232763,237601,329262,339432,220530,323606,348072,332356,237183,237184,237185,220565,237474,237291,237290,851516,236969,235781,235782,235816,235784,236884,237699,236097,236061,230744,230664,235508,237232,237556,237280,236397,235872,329196,232276,230740,235716,235175,850477,236779,236874,237436,234752,237597,234751,232665,232285,220607,237660,237831,211900,336853,236724,237200,752170,237286,237288,237316,237296,237315,237817,237962,237630,237674,237180,204221,847842,813969,829768,807699,813966,828815,203508,814610,807690,807682,813964,849041,847852,205540,848958,828962,237877,220523,763703,26462,814809,340418,850555,850342,349155,322551,230018,345440,244901,244906,230093,237325,753180,236828,211854,230094,230106,834194,230128,831149,220585,230941,233943,222140,230109,237649,232288,231311,230105,220080,236612,244984,234782,210003,331715,331345,752010,221966,752061,236241,234812,235213,237785,212734,212735,210979,211595,212927,212925,213087,211598,221646,322199,221680,237792,334144,213169,323608,211886,232002,237781,206640,236717,331174,330008,236472,236236,235709,244839,828489,235245,234491,234474,231843,230460,230497,231428,230370,230376,234535,230394,235370,230396,233927,237591,230382,230398,230295,237656,231495,230272,230273,231349,231497,233312,230333,230324,230292,230241,230306,333988,236739,231513,230887,231838,235740,237585,234423,231363,231562,220490,242795,243999,211821,236024,237582,233919,230165,242860,237616,230088,231490,230287,230548,230529,230126,753114,211737,236505,242947,211744,211842,242953,222084,330503,210420,230886,230915,242788,242956,210803,221780,212865,222417,220601,234539,236968,237787,212835,237951,236890,232780,237145,807546,237706,236435,236247,237407,237580,237279,237355,220497,237576,850248,237666,220519,829137,237320,237281,807507,220561,237598,237663,237600,237453,330648,237636,237635,237111,237112,237113,237155,237245,237503,237504,220504,237795,237496,237078,237081,237480,237080,237082,345848,220605,237240,237728,237087,237088,237095,237574,237092,237680,237086,752415,345986,237500,236986,237269,237270,237839,237265,237257,237276,237264,237103,237104,237426,235932,235903,236036,827649,210126,237849,236836,236032,236649,237371,832764,236018,833822,235929,861135,236249,237972,237995,233484,233984,233814,237848,235860,237432,323732,237856,237865,237662,237499,237670,237409,237695,234472,236026,237399,230582,236166,235450,235864,237562,235780,237904,235722,236098,752046,751966,234140,236240,236592,236564,236305,829015,828812,237651,834236,349262,235018,828999,233292,234796,236789,231588,231460,230239,230718,235334,236558,234076,236892,236347,235298,234375,236581,230013,235109,220410,230197,236225,323575,329740,237992,236376,237584,222569,212136,220548,231378,222467,231709,200305,222464,233089,220088,212109,752335,235902,210081,210082,210083,210084,210085,210087,210310,210090,210091,210098,235880,235877,236580,236620,237321,234146,210113,236574,220616,236075,237846,235910,236010,236584,210110,814472,237429,224341,224373,329626,231381,230605,235826,237696,224624,235901,234778,236953,234042,235304,323759,236733,329526,331150,236950,210984,213151,212718,212040,211869,210274,213227,210332,212991,212997,212041,211898,210237,213294,212908,212042,213221,212644,211931,333766,220624,222364,242723,236948,242711,220072,220545,323752,234131,237967,231377,237102,222568,232589,234052,234151,234725,231305,231713,237226,237851,236322,242959,237813,237360,242960,242961,242962,761694,349204,329281,236688,244913,242641,242644,242617,753187,237575,233812,243808,242783,244863,244865,204683,761606,333931,232859,830327,236991,236803,752969,331678,237961,833771,230490,329841,234739,232980,237715,236196,237954,237953,237956,237957,753096,237965,237966,237964,235518,235656,234770,242728,231477,230533,230347,230227,332489,332416,211855,244967,230070,230682,333520,333518,333427,333600,333509,211823,244917,237609,333525,235425,220444,237377,236848,236708,230043,230022,210419,231561,322313,221682,232534,347961,330798,235806,235931,235985,237274,236858,236605,235788,235787,235789,235794,235983,235802,235803,235805,237741,235811,235813,235815,236087,849619,236998,234386,236330,236700,211559,828482,233442,233443,233473,211549,230505,237791,345379,235537,233853,233485,233905,230703,236500,231299,234494,234521,234488,234526,234430,234431,234465,234429,234413,232131,234548,234447,234527,234418,237462,230413,237478,236893,234791,221798,243804,232260,9988776,224454,234595,236468,210247,210192,213230,212601,212105,213231,213237,212047,212520,213076,211935,212910,210402,212050,213077,213232,212720,212051,212052,210417,213300,213233,211936,212994,212721,212130,210344,210244,210980,212054,212996,212687,212655,212055,210122,210338,212912,232294,233222,237433,236221,236306,200765,235019,237659,815381,234863,234834,236394,243897,224266,211622,329297,234843,236533,236535,224322,234538,237730,237190,234762,242752,206865,851182,237036,828180,221684,222404,235770,237776,237766,234787,235597,235588,237422,237420,236194,211933,211932,212048,213295,212688,210232,212043,212653,210362,211603,213224,213226,213266,213223,211934,212103,213228,210059,212519,212045,213222,212823,212909,213171,211879,212516,213296,236243,222035,235410,222133,234858,233614,329394,230127,233889,231285,753660,234372,237441,236534,833762,233371,231329,331346,814533,220533,221635,234519,234520,234446,234493,234547,234432,234524,234466,234437,244849,234438,234522,235941,234489,234523,234544,235850,234440,234543,234419,234525,243830,237143,237487,849949,236136,236931,243891,236543,234400,234407,203778,237137,233624,331350,200701,242714,222197,233783,237774,234786,814725,235083,237843,235844,751956,234033,751960,233380,220481,334131,323645,211756,210305,213044,220102,234074,233800,221681,861850,332440,220532,212793,233676,221654,212106,212857,236556,233056,221676,331676,329810,237038,212861,213003,236276,234014,234015,330682,323744,242639,213154,212913,236510,236886,237743,212860,212858,212859,828098,243921,222178,234099,210350,233272,849315,232357,833959,235439,230756,222000,221675,237762,236802,234511,235142,234103,230747,243838,237091,232387,234845,234844,220426,222371,233015,235839,233633,222226,204473,833898,237658,224370,234019,234138,237233,224398,236470,233375,221693,234567,233061,221683,224928,221685,231975,221643,224267,213116,222190,213005,221783,236734,236355,329498,234727,234768,331607,234397,234398,237392,237608,329781,233090,212645,232052,236773,233287,236473,222476,237464,753091,200699,233218,222327,231642,234773,234892,237698,234110,235758,234108,234112,318478,334198,220418,210276,230373,231831,231835,230368,230424,329707,332246,221763,221696,230506,230472,233901,205526,236512,237963,232642,236625,236594,233955,220073,243872,236475,814584,224330,850765,235729,231402,230725,230453,237175,230299,230297,237115,230454,232822,222583,834317,320525,320599,237065,233467,230564,231418,230489,236845,230491,231403,237592,235320,230381,236106,237195,233119,231917,222047,333790,330013,236403,829003,237253,224319,222175,237138,233091,237416,242880,232626,233712,220450,221695,221717,323731,232352,235092,235962,236636,235947,235950,235952,235601,237623,235604,237396,235606,235610,235608,235609,235611,235612,235616,235618,235663,235622,235623,235624,235625,235626,235633,235634,235828,235636,235637,235638,235639,235890,235640,235641,235966,332496,206575,333436,332328,211899,244937,243813,237671,860470,231436,753661,235866,236158,235960,232071,236444,236479,235553,231529,237342,231700,224325,224328,235719,234021,222386,336829,236429,237993,211764,237689,235106,236462,220577,221712,237726,323578,220484,224932,212078,212077,210157,212073,212076,212082,210229,210269,212112,210147,212110,211578,213246,212529,233096,234779,235014,231796,236641,213411,235728,210317,210115,221706,237379,234833,237788,221710,232081,752570,752722,333636,334325,236520,230636,333512,230782,220006,230638,230639,230735,220097,230633,230073,220034,751964,220445,236546,231678,237929,231698,222221,222162,235667,236248,236952,235797,236216,237948,236244,236792,220518,220626,833960,242989,220583,237294,232877,203382,234889,237801,234481,237039,206716,336315,235176,232560,232556,232554,232487,236982,336384,235706,224255,235875,235769,230647,221648,212523,833828,233063,233918,224741,232349,220472,206185,232423,329679,205170,230132,224331,761670,233160,222068,234380,235189,236277,231731,237617,212547,752846,231342,233310,221947,234408,234529,236459,236903,213404,231417,234502,220028,235756,833718,329702,210016,233162,231735,234057,235048,323848,207102,235147,235146,334226,237958,232325,237402,237356,232328,232304,232298,236977,232362,232329,232314,237357,232306,232363,232308,232310,232312,231558,231566,231567,231574,231585,231590,232202,237186,232206,232212,232213,231598,231599,232201,232221,232223,237642,753194,220053,220057,220055,232369,237107,232934,237797,232262,220617,331104,232869,237425,232871,237697,232372,232382,235724,232380,232381,236940,235774,237564,751095,235143,244803,210136,236503,235845,233973,330450,752232,212794,829060,235521,220574,323583,323798,237796,334014,333523,333604,230919,210002,834203,222549,330919,834228,237709,230815,230814,850876,752256,232341,237333,237754,232257,235744,237442,235748,232694,232675,237903,236960,752584,346142,204324,200787,236514,828756,242760,333882,820676,244813,242888,242648,236302,236315,236325,236476,230736,204768,220407,331598,237682,334342,231857,237818,236365,221980,232880,232978,233849,244869,221753,234460,231563,234442,234931,234453,233101,234552,220415,220052,236469,236234,236303,230826,237026,236300,236455,236209,237015,234912,234789,323611,329542,211745,231611,330461,828491,332315,232041,205568,235727,206158,236882,233372,236096,235069,203922,237686,212816,232417,230805,237191,235837,330593,233519,237840,753088,232340,231360,237428,236630,236647,242789,235995,235863,236972,237809,232927,237765,236062,230981,231364,232399,236288,828176,232875,207657,220051,237753,235068,236174,221929,243810,332360,333447,232837,211864,331062,235522,333519,236613,230965,232292,230532,210186,332294,333777,320520,323493,236979,231536,336171,235100,235104,329335,221954,203641,329751,345447,236222,329189,329286,320619,233635,211558,211501,235793,231451,333751,331033,231521,230330,235316,230350,242842,230415,230416,232225,230305,230310,230321,230383,230219,237912,237468,230224,230536,752581,232983,829004,236214,236220,236228,236226,242932,236551,232888,230209,236304,221813,242951,213239,230050,221660,220485,221658,329510,334237,230716,200502,236519,233087,233639,236410,237857,235842,237385,237763,236567,234774,236281,235742,211829,329857,213156,212920,211830,213243,213245,213241,213242,237936,234132,230679,236088,220114,236413,211570,242685,200549,233983,206645,234806,212732,211592,210389,211725,220488,751991,752441,210312,212862,212727,212724,212731,212725,212061,210227,211943,211940,212071,212062,211755,211942,212060,210334,212059,210253,210118,212066,212067,210209,211941,210396,212058,212072,211844,213014,211616,210004,210265,210392,213013,213162,213155,237875,329466,323792,323617,224268,212738,234776,242662,330585,334282,330678,235090,237988,230958,233768,232699,233097,237676,237923,237888,236971,236973,236975,236974,334168,834192,237108,237069,237339,753192,237273,237271,237862,237217,236989,237011,236990,237317,207115,237013,237068,220489,210927,210928,210929,210930,210931,210932,210297,210934,210935,210936,210937,210940,210941,210942,210943,210945,210954,210955,210956,210958,236993,237021,237064,237066,220517,237067,237867,243826,243827,237973,220566,236460,237150,230813,237863,242718,236114,236793,236268,235984,244882,230201,231489,329258,323857,233811,233461,236321,220050,242812,237869,237109,232377,236964,851743,827751,231358,231357,230818,231388,237421,847709,235178,220580,230925,232847,230948,230943,329413,237330,231314,231320,753111,232343,221711,212722,222131,233397,320623,320510,344949,329288,320511,333789,329193,203374,236377,237446,237349,236320,323542,849585,829002,235865,334231,236550,205386,220539,232919,233942,236704,236310,236293,233274,230005,204500,237227,230060,235061,751923,220422,236485,220568,237311,237793,232653,236681,236682,236680,236683,236896,827673,236963,220575,236572,236573,236576,220478,236699,236751,236712,236713,236701,237063,236750,236748,236857,850457,237614,232231,232868,206548,236657,220477,333539,332426,333613,236888,236692,236799,236796,236809,236703,237023,236800,220506,236916,236832,237677,237025,237376,237054,235118,236725,237807,235086,221634,234977,236206,235715,204910,224360,237987,237400,236205,237077,233366,233370,220090,200379,235739,236999,237000,237654,237611,237009,237004,237293,237260,237259,237272,237295,236795,236830,220564,220514,237053,207661,237486,236951,237057,236949,237149,237058,332281,237759,236945,237263,230689,753108,242806,333926,242830,761611,233832,232941,333483,235904,233818,233817,233819,232989,333994,233802,333456,237657,335898,236905,333530,832044,851517,235996,235924,233803,332422,236651,235527,220189,237417,242772,242774,203767,242775,232801,233280,233281,234631,221691,237644,235335,234518,230483,222341,230459,220623,752490,235062,237132,234742,234719,231849,230978,211930,331294,233949,237641,235457,333517,233965,220435,332330,220436,237027,236784,236785,236721,236431,833635,323705,233877,832849,831694,828150,210600,210876,236615,236913,237337,232905,850830,236585,235926,232947,236084,236695,832850,237684,236074,210395,210238,210340,210836,210838,210355,210840,210842,210138,210844,210378,210251,210847,210816,210817,210818,210819,210848,210849,210850,210827,210851,210828,210877,210878,210347,210879,210946,210431,210947,210948,210882,210825,210357,210884,210885,210371,210888,210182,210890,210891,210427,210095,210894,210895,210897,210898,210908,210914,210912,210924,210813,210364,210815,232952,329804,237798,232391,232392,233807,232917,235835,232816,232819,236631,237652,210961,210963,210964,210965,210821,210822,210823,210824,210826,210966,210969,210970,210971,210852,210206,210854,210855,210856,210311,210858,210375,210404,210861,210412,210367,210421,210865,210314,210869,210151,210871,210203,210333,210284,210900,210973,210104,210904,210905,210906,210909,210910,210911,210913,210915,210916,210212,210919,210920,210380,210922,210926,220060,752159,333573,237218,232959,334169,236927,236839,236652,331088,340010,221913,232464,232463,231406,230504,237650,230468,230475,231445,237366,230320,236509,336820,236716,236432,236480,236481,235368,235361,235363,236566,230456,230500,230455,230476,230281,230404,230255,235566,235580,235571,236147,220161,330854,237613,235874,235873,235870,236041,236040,236570,236851,236843,237410,336302,236900,320550,220111,236416,236486,210260,237952,220409,236273,236274,237047,236538,236685,827650,236340,200713,236362,236343,752000,236352,220599,236335,236364,236184,236185,236578,236907,237879,230133,230653,230791,237424,237799,230746,230742,230743,230799,230102,333423,333526,230150,236738,235762,230202,230205,230206,230207,230217,230225,230266,230267,230268,230269,230278,230286,230288,230300,233850,230352,230355,230356,230357,230403,230406,236805,235725,230410,230411,230420,230421,230433,230442,230775,230465,230477,237423,230487,237141,329211,237250,230502,230503,230540,230544,233876,235055,243806,236513,236515,237451,236709,236727,236746,220521,236361,236774,332455,333979,236826,220439,236777,236710,236711,236673,236674,236675,236676,236677,236694,849325,236561,220454,235119,235049,213166,211980,235285,752188,232569,200462,204185,237567,235202,237847,235288,237653,761699,236838,200557,200565,237873,237872,237871,237880,237882,237881,807685,751038,847841,849539,830813,832357,850872,804789,827675,340184,237902,861362,850065,333620,828816,813967,815357,807701,847851,807686,807689,237938,237939,237940,237941,237942,237907,237943,237910,237944,237911,237945,237915,237914,237908,237909,237926,237928,237927,200247,237946,237975,237976,319789,233052,236068,236291,236023,237129,210156,236080,236078,210165,236671,236607,237721,236033,828497,236744,236875,237751,237727,235919,235920,237683,210169,220453,236834,236154,237827,235965,237930,236898,235418,236066,235906,237378,235474,237051,235514,235512,236619,236618,236602,237489,236883,235411,336193,336192,237507,345398,237231,236864,236865,236866,236867,237101,210167,212929,212928,752934,332476,236324,236242,236464,211503,236034,242866,237860,210390,210327,236111,211665,211714,210211,211673,211674,211675,211672,210185,210400,211635,211670,211634,210349,211628,211629,211630,211631,211632,211633,211644,211643,211642,211641,211640,211639,211638,211637,211636,236152,211667,211668,210313,211671,220468,237700,236388,333932,210233,211683,211684,211685,211687,211688,211689,211690,329565,828534,753175,211724,752316,220610,236846,205581,753237,243847,232836,752548,205743,242614,242889,211717,211718,211860,236346,237969,237672,237708,220619,237181,220101,210092,210377,210094,210097,815388,210069,210079,230180,242799,222193,220016,752456,828457,333965,200757,237203,236917,336189,236862,237334,237335,236889,236807,236808,236810,236813,236812,237075,237324,323845,329426,330088,320555,236878,236769,207109,236923,236765,236941,236860,236861,237024,236082,236635,236667,236634,320238,323610,329684,222078,834416,237789,332451,235578,320526,242884,222079,232811,242882,237243,235375,235376,235377,211711,211709,211645,211646,211647,211648,210319,211651,211652,211677,211663,211653,210336,210205,210372,230790,237874,230812,222141,230671,230101,230599,232397,211834,333511,230650,232856,236939,230079,329591,236980,236981,237514,834046,230955,230131,220622,203699,230032,200754,848981,336207,236086,236891,231312,330018,211839,211841,333923,211793,211816,211770,211769,211768,211767,210058,211782,210425,210255,211774,211772,210189,753186,244886,244885,231347,205186,211783,211784,210323,210132,210405,211790,211792,210342,210424,211797,211798,210304,211800,211801,211802,210242,211804,210804,211806,210271,243980,243942,211893,211894,210252,237772,222130,211809,211810,211811,211812,211813,211814,211815,222169,752605,244897,333424,211840,828585,220620,851742,237861,236816,237289,243807,242952,220434,220423,237932,236970,211890,230963,222137,237326,220177,237307,230014,220602,333522,231341,210012,211838,210407,230143,237242,233824,832551,232939,233820,233813,233833,237887,237725,235982,237239,237465,232954,814779,237780,220447,237901,237661,236105,236101,236093,237710,237645,237775,237778,237859,236060,236559,236138,236073,236148,236283,236501,210172,235928,236496,237454,237018,850233,235936,235533,235498,210040,235565,210102,237593,235564,235572,235944,235444,332325,235423,235482,235481,236049,235510,235551,235511,237694,237693,236173,236428,220582,329304,329307,837713,237479,237509,210348,345943,237664,237824,861086,237502,237533,237534,237537,237538,237539,237540,237541,237543,237521,237522,237523,237550,237551,237552,237553,237554,237524,237517,237525,237557,237527,237528,237516,237529,237530,237518,237520,237515,237548,237549,237558,237559,807417,348264,849946,849942,832084,311203,830968,232987,233804,827659,827660,827661,827662,827760,220475,232973,827694,827693,827692,827658,220180,236665,236650,235486,220573,235455,210007,235927,237034,235406,332355,334054,334051,332329,334043,237719,235908,236736,205928,210028,220086,237573,237594,237510,237823,237595,220579,220578,237578,237606,237561,323851,237590,237724,237638,204161,237822,237712,237921,237977,237637,237733,237749,237970,220606,237850,237916,237917,237688,237804,237803,237812,237805,237806,237745,232398,235746,235964,237445,236849,237974,336730,237702,237703,237748,332337,334052,332335,827712,237836,237858,237891,332016,237747,237746,237738,237734,220608,237897,780442,811088,237866,203920,752250,220596,237919,237675,237925,237924,752021,237884,237949,329680) and staffImage is not null;
2022-01-07 16:57:00.573 [http-nio-8080-exec-9] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==> Parameters: 
2022-01-07 16:57:01.096 [http-nio-8080-exec-9] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - <==      Total: 3594
2022-01-07 16:57:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:57:01.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:57:01.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:57:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:57:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:57:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:57:23.080 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:57:23.080 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:57:30.251 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:57:30.251 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:57:30.803 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 16:57:30.803 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 16:57:30.803 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 16:57:30.803 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 16:57:30.803 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 16:57:12.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 16:57:30.803 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 16:57:41.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:57:41.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:57:41.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:57:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:57:52.083 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:57:52.083 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:57:53.089 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:57:53.089 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:58:00.263 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:58:00.263 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:58:03.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:58:03.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:58:03.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:58:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:58:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:58:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:58:23.095 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:58:23.095 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:58:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:58:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:58:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:58:30.273 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:58:30.273 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:58:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:58:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:58:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:58:53.101 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:58:53.101 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:59:00.279 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:59:00.279 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 16:59:01.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:59:01.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:59:01.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:59:13.731 [main] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 16:59:14.165 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 16:59:14.724 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 16:59:14.866 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@6433a2
2022-01-07 16:59:15.120 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{ [/staffOperation]}: staffOperation()
	{ [/]}: getEquipment()
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{GET [/equipment]}: equipment(Model)
	{ [/history]}: history(Model)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{ [/monitor]}: monitor()
2022-01-07 16:59:15.126 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2022-01-07 16:59:15.147 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 16:59:15.223 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 16:59:15.480 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 16:59:15.482 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:59:15.483 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:59:15.487 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:59:15.495 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:59:15.496 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:59:15.501 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:59:15.513 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:59:15.513 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:59:15.514 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:59:15.514 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:59:15.515 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:59:15.518 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:59:15.529 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:59:15.530 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:59:15.535 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:59:15.538 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:59:15.544 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:59:15.544 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 16:59:15.544 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:59:15.544 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:59:15.545 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:59:15.545 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:59:15.546 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:59:15.546 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:59:15.546 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:59:15.547 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:59:15.553 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 16:59:15.553 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:59:15.554 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:59:15.554 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:59:15.557 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:59:15.557 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:59:15.558 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:59:15.558 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:59:15.558 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:59:15.943 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 373269b5-5405-4a4a-8064-db59f181d15d
2022-01-07 16:59:15.951 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:59:15.968 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:59:15.984 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:59:15.992 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 16:59:15.992 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 16:59:15.994 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 16:59:16.059 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:59:16.080 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 69fc2697-852b-4293-903b-e90bdfbf7919
2022-01-07 16:59:16.094 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: 052480aa-aeef-4969-9152-34a4341f3580
2022-01-07 16:59:16.107 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 5a3795f2-df04-4287-b79a-47f1c23f1579
2022-01-07 16:59:16.120 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 5fb43ae2-9de4-4e9f-bb4c-344ba9f400ef
2022-01-07 16:59:16.132 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: ece377b5-3f5e-4904-bf85-0ce4b2e70e5c
2022-01-07 16:59:16.146 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 2523ba5c-1e9e-4259-a96f-883abc8a7d8d
2022-01-07 16:59:16.159 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 8da5530c-9ccd-47bb-aad1-b43741a51351
2022-01-07 16:59:16.171 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 539fca89-aacd-4724-beb3-550fc9c64741
2022-01-07 16:59:16.183 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 05dd132c-f106-4817-bdcf-9e369bdccd1d
2022-01-07 16:59:16.184 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:59:41.719 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 16:59:41.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 16:59:41.724 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 16:59:41.724 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 16:59:41.724 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 16:59:41.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 16:59:41.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 16:59:41.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 16:59:41.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 16:59:41.727 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 16:59:41.727 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 16:59:41.727 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 16:59:41.728 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 16:59:41.728 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 16:59:41.729 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 16:59:41.729 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 16:59:41.730 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 16:59:41.730 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 16:59:41.730 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 16:59:41.731 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 16:59:41.731 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 16:59:41.732 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 16:59:41.732 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 16:59:41.733 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 16:59:41.733 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 16:59:41.738 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 16:59:41.739 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 16:59:41.739 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 16:59:41.740 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 16:59:41.740 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 16:59:41.741 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 16:59:41.741 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 16:59:41.742 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 16:59:41.742 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 16:59:41.742 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 16:59:41.743 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 16:59:41.757 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: a9618e58-e5b1-411b-8857-f848acd5bcfa
2022-01-07 16:59:41.758 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:59:41.758 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:59:41.759 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:59:41.873 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 16:59:41.890 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: fc27b2dd-956f-4c9a-8872-fedb65836f98
2022-01-07 16:59:41.898 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: 90f5a1df-beb8-4e3b-ae14-b67ad8b57066
2022-01-07 16:59:41.898 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 6e723edd-56f4-4c3a-8c5e-3e6d59be067d
2022-01-07 16:59:41.922 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 39c6d01c-4ace-4fe3-bf71-ca5ebd002db1
2022-01-07 16:59:41.935 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: db97513a-3c88-490b-922f-b9f45a96365e
2022-01-07 16:59:41.947 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 376d1054-e1aa-4b3e-abc7-67d9797b7ebf
2022-01-07 16:59:41.958 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: a8fc5d05-5164-4b10-83b0-603d4937c889
2022-01-07 16:59:41.969 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: f024000a-82ab-46b7-9093-74c0cdfd040f
2022-01-07 16:59:41.981 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: b38c15e9-db9e-400f-9460-438d8b49ec9d
2022-01-07 16:59:41.981 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:59:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 16:59:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 16:59:45.021 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 16:59:46.061 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 16:59:46.062 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:00:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:00:01.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:00:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:00:11.878 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:00:11.878 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:00:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:00:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:00:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:00:16.075 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:00:16.075 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:00:23.376 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 17:00:23.487 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@186864ce
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@14bc7ad9
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1c470fe3
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 17:00:23.505 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 17:00:38.990 [http-nio-8080-exec-6] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==>  Preparing: select * from V_UserInfo where staffImage is not null;
2022-01-07 17:00:38.990 [http-nio-8080-exec-6] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==> Parameters: 
2022-01-07 17:00:39.421 [http-nio-8080-exec-6] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - <==      Total: 5058
2022-01-07 17:00:39.478 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==>  Preparing: select * from V_UserInfo where staffCardNumber in (224345,232197,233219,221663,330506,323654,236787,237802,237158,244838,331366,236151,237560,234105,224359,234797,231493,232779,222550,221645,235776,231704,231703,237994,236579,237767,236598,237398,220048,236254,230462,234482,234492,234512,243853,233374,237030,221629,236461,236477,222592,752027,230427,331635,331706,200712,233437,233735,237073,237835,230979,834361,333810,220547,237704,233138,233133,237563,237768,236466,221759,237412,330428,200574,236208,236210,237105,236260,237131,323601,233713,237343,232441,243809,237477,221704,221649,236741,222446,220089,237758,236537,220534,236547,234010,220528,224377,222234,222312,221617,206841,220440,237784,236764,224256,234602,230917,234743,234748,235136,231293,230467,230816,234414,234411,234417,234514,234540,206366,224495,210409,224982,205178,234888,235938,243845,230046,221790,221972,233362,224467,222008,323760,332240,231707,236545,210171,233273,237458,330650,828167,235342,234724,235653,849216,232400,237364,234147,234048,236624,234578,237786,236484,236593,237382,220181,236246,230033,237750,231686,235925,234031,232967,230220,244905,345421,232557,232342,236926,333943,233957,231297,234081,237163,243866,236798,232663,235307,807855,237419,237170,243875,232932,235662,243865,237166,243867,237459,243971,230697,230282,230666,231502,230215,230493,230107,761685,329366,332358,329564,833865,332373,329779,221689,236463,331154,334141,336169,331348,237770,834205,331679,751926,752267,814519,233220,220511,221668,345475,212546,237508,235772,237431,345509,329920,329714,234371,237937,330026,235704,329353,237135,336173,235102,333697,213083,210123,213082,761689,329682,236172,236121,236123,236155,236150,237655,236027,237633,861909,236265,237794,236348,236252,848942,236384,862855,210176,220459,236436,850610,220164,236427,236168,236506,220465,220466,236555,210281,235981,237358,237632,235503,237755,232350,232289,333508,232351,232883,232884,848957,221838,236215,233389,807420,234029,220546,234159,237228,220442,236863,847766,233166,329529,236928,243976,237842,231669,236465,244939,237731,200700,235002,237017,237395,230557,850469,221789,232777,231697,330386,207671,235567,237692,211569,236467,222377,221644,236877,234136,233979,206098,236628,243924,243931,220092,861072,753199,243940,243941,222185,237790,220554,236599,203621,237864,212733,237463,322264,237870,220085,232348,220056,220074,230729,237202,234832,330515,237049,235717,236298,236326,236474,850476,237771,329887,236596,220171,234857,330586,222541,233363,236380,242730,753202,237989,224888,752480,237833,243936,231362,752482,243995,237302,237299,237300,237292,237297,237305,237640,237309,220525,330127,237336,330205,220560,220557,861056,237415,237406,237669,200667,200447,222063,348694,331181,242813,242899,236507,333905,834360,320547,237052,237764,237648,242815,331086,320548,753090,332154,235367,333925,827794,829457,236130,834234,236230,206268,233794,230020,220571,224745,211680,329399,236323,330448,834340,242995,333706,322864,230795,237157,230624,333941,232337,232962,323639,333510,206343,230720,230723,230717,220486,230335,230341,230238,237196,230263,230244,234556,231327,333981,237837,220615,237935,236433,222548,237162,211740,237832,236648,236327,333500,237204,237197,237206,237208,237368,237498,220531,237116,237216,237213,237117,237118,804786,828886,237174,752044,761693,220551,220550,220552,237322,220553,220569,237314,237757,237413,220402,230848,234058,234061,234063,235753,233848,237512,233936,237460,236378,236921,234182,237878,205442,237388,234090,234091,237241,210119,224397,220613,235838,203445,237452,220584,237481,237505,237506,237828,237667,237668,237852,222469,220590,211582,220404,233231,237845,233875,224318,224308,234034,224430,230787,330645,211751,213000,211730,752983,333900,332437,320509,329655,237602,235210,222065,237931,232764,237601,329262,339432,220530,323606,348072,332356,237183,237184,237185,220565,237474,237291,237290,851516,236969,235781,235782,235816,235784,236884,237699,236097,236061,230744,230664,232276,235716,235175,850477,237436,234752,237597,234751,220607,237660,211900,336853,236724,237200,752170,237286,237288,237316,237296,237315,237817,237962,237630,237674,237180,204221,847842,813969,829768,807699,813966,828815,203508,814610,807690,807682,813964,849041,847852,205540,848958,828962,237877,220523,763703,26462,814809,340418,850555,850342,349155,322551,230018,345440,244901,244906,230093,237325,753180,236828,211854,230094,230106,230128,831149,222140,230109,237649,232288,231311,230105,244984,234782,210003,331715,331345,752010,221966,752061,236241,234812,235213,237785,212734,212735,210979,211595,212927,212925,213087,211598,221646,322199,221680,237792,232002,237781,206640,236717,331174,330008,236472,236236,235709,244839,828489,235245,234491,234474,231843,230460,230497,231428,230370,230376,234535,230394,235370,230396,233927,237591,230382,230398,230295,237656,231495,230272,230273,231349,231497,233312,230333,230324,230292,230241,230306,333988,236739,231513,230887,231838,235740,237585,234423,231363,231562,220490,242795,243999,211821,236024,237582,233919,230165,242860,237616,230088,231490,230287,230548,230529,230126,753114,211737,236505,242947,211744,211842,242953,222084,330503,210420,230886,230915,242788,242956,212865,220601,232780,237706,236435,236247,237407,237580,237279,237355,220497,237576,850248,237666,220519,829137,237320,237281,807507,220561,237598,237663,237600,237453,330648,237636,237635,237111,237112,237113,237155,237245,237503,237504,220504,237795,237496,237078,237081,237480,237080,237082,345848,220605,237240,237728,237087,237088,237095,237574,237092,237680,237086,752415,345986,237500,236986,237269,237270,237839,237265,237257,237276,237264,237103,237104,237426,235932,235903,236036,827649,210126,237849,236836,236032,236649,237371,832764,236018,833822,235929,861135,236249,237972,237995,233484,233984,233814,237848,237432,323732,237856,237865,237662,237499,237670,237409,237695,234472,236026,237399,230582,236166,235450,235864,237562,235780,237904,235722,236098,752046,751966,234140,236240,236592,236564,236305,829015,828812,237651,834236,349262,235018,828999,233292,234796,236789,231588,231460,230239,230718,235334,236558,234076,236892,236347,235298,234375,236581,230013,235109,220410,230197,236225,323575,329740,237992,236376,237584,222569,212136,220548,231378,222467,231709,200305,222464,233089,220088,212109,752335,235902,210081,210082,210083,210084,210085,210087,210310,210090,210091,210098,235880,235877,236580,236620,237321,234146,210113,236574,220616,236075,237846,235910,236010,236584,210110,814472,237429,224341,224373,329626,231381,230605,235826,237696,235901,234778,236953,234042,235304,323759,236733,329526,331150,236950,210984,213151,212718,212040,211869,210274,213227,210332,212991,212997,212041,211898,210237,213294,212908,212042,213221,212644,211931,333766,220624,222364,242723,236948,242711,220072,220545,323752,234131,237967,231377,237102,222568,232589,234052,234151,234725,231305,231713,237226,237851,236322,242959,237813,237360,242960,242961,242962,761694,349204,329281,236688,244913,242641,242644,242617,753187,237575,233812,243808,242783,244863,244865,204683,761606,333931,232859,830327,236991,236803,752969,331678,237961,833771,230490,329841,234739,232980,237715,236196,237954,237953,237956,237957,753096,237965,237966,237964,235518,235656,234770,242728,231477,230533,230347,230227,332489,332416,211855,244967,230070,230682,333520,333518,333427,333600,333509,211823,244917,237609,333525,235425,220444,237377,236848,236708,230043,230022,210419,231561,322313,221682,232534,347961,330798,235806,235931,235985,237274,236858,236605,235788,235787,235789,235794,235983,235802,235803,235805,237741,235811,235813,235815,236087,849619,236998,234386,236330,236700,211559,828482,233442,233443,233473,211549,230505,237791,345379,235537,233853,233485,233905,230703,236500,231299,234494,234521,234488,234526,234430,234431,234465,234429,234413,232131,234548,234447,234527,234418,237462,230413,237478,236893,234791,221798,243804,232260,9988776,224454,234595,236468,210247,210192,213230,212601,212105,213231,213237,212047,212520,213076,211935,212910,210402,212050,213077,213232,212720,212051,212052,210417,213300,213233,211936,212994,212721,212130,210344,210244,210980,212054,212996,212687,212655,212055,210122,210338,212912,232294,233222,237433,236221,236306,200765,235019,237659,234863,224266,211622,329297,234843,236533,236535,224322,234538,237730,237190,234762,242752,206865,851182,237036,828180,221684,222404,235770,237776,237766,234787,235597,237422,237420,236194,211933,211932,212048,213295,212688,210232,212043,212653,210362,211603,213224,213226,213266,213223,211934,212103,213228,210059,212519,212045,213222,212823,212909,213171,211879,212516,213296,236243,222035,235410,222133,234858,233614,329394,230127,233889,231285,753660,234372,237441,236534,833762,233371,231329,331346,814533,220533,221635,234519,234520,234446,234493,234547,234432,234524,234466,234437,244849,234438,234522,235941,234489,234523,234544,235850,234440,234543,234419,234525,243830,237143,237487,849949,236136,236931,243891,236543,234400,234407,203778,237137,233624,331350,200701,242714,222197,233783,237774,234786,814725,235083,237843,235844,751956,234033,751960,233380,220481,334131,323645,211756,210305,213044,220102,234074,233800,221681,861850,332440,220532,212793,233676,221654,212106,212857,236556,233056,221676,331676,329810,237038,212861,213003,236276,234014,234015,330682,323744,242639,213154,212913,236510,236886,237743,212860,212858,212859,243921,222178,234099,210350,233272,849315,232357,833959,235439,230756,222000,221675,237762,234511,235142,234103,230747,243838,237091,232387,234845,234844,220426,222371,233015,235839,233633,222226,204473,833898,237658,224370,234019,234138,237233,224398,236470,233375,221693,234567,233061,221683,224928,221685,231975,221643,224267,213116,222190,213005,221783,236734,236355,329498,234727,234768,234397,234398,237392,237608,212645,232052,236773,233287,236473,222476,237464,753091,200699,233218,222327,231642,234773,234892,237698,234110,235758,234108,234112,318478,334198,220418,230373,231831,231835,230368,230424,329707,332246,221763,221696,230506,230472,233901,205526,236512,237963,232642,236625,236594,233955,243872,814584,235729,231402,230725,230453,237175,230299,230297,237115,230454,232822,222583,834317,320525,320599,237065,233467,230564,231418,230489,236845,230491,231403,237592,235320,230381,236106,237195,233119,231917,222047,333790,330013,236403,829003,237253,224319,222175,237138,233091,237416,242880,232626,233712,220450,221695,221717,323731,232352,235092,235962,236636,235947,235950,235952,235601,237623,235604,237396,235606,235610,235608,235609,235611,235612,235616,235618,235663,235622,235623,235624,235625,235626,235633,235634,235828,235636,235637,235638,235639,235890,235640,235641,235966,332496,206575,333436,332328,211899,244937,243813,237671,860470,231436,753661,235866,236158,235960,236444,236479,235553,231529,237342,231700,224325,224328,235719,234021,222386,336829,236429,237993,211764,237689,235106,236462,220577,221712,237726,323578,224932,212078,212077,210157,212073,212076,212082,210229,210269,212112,210147,212110,211578,213246,212529,233096,234779,235014,236641,213411,235728,237379,234833,237788,221710,232081,752570,752722,333636,334325,236520,220097,230633,230073,220034,751964,220445,236546,231678,237929,231698,222221,222162,235667,236248,236952,235797,236216,237948,236244,236792,220518,220626,833960,242989,220583,203382,234889,237801,234481,237039,206716,336315,235176,232560,232556,232554,232487,236982,336384,235706,224255,235875,235769,230647,221648,212523,833828,233063,233918,232349,206185,232423,329679,205170,230132,224331,761670,233160,222068,234380,235189,236277,231731,237617,212547,752846,231342,233310,221947,234408,234529,236459,236903,213404,231417,234502,220028,235756,833718,329702,210016,233162,231735,234057,235048,323848,207102,235147,235146,334226,237958,232304,236977,232329,232306,231567,232202,232213,231599,237642,753194,220053,220057,220055,237107,237797,331104,232871,237697,232372,232382,235724,232380,232381,236940,235774,237564,751095,235143,244803,236503,235845,233973,212794,829060,235521,220574,323583,237796,334014,333523,333604,230919,210002,834203,222549,330919,834228,237709,230815,230814,850876,752256,232341,237333,237754,232257,235744,237442,235748,232694,232675,237903,236960,752584,346142,204324,200787,236514,828756,242760,333882,820676,244813,242888,242648,236302,236315,236325,236476,230736,204768,220407,331598,237682,334342,231857,237818,236365,221980,232880,232978,233849,244869,221753,234460,231563,234442,234931,234453,233101,234552,220415,220052,236469,236234,236303,230826,237026,236300,236455,236209,237015,234912,234789,323611,329542,211745,231611,330461,828491,332315,232041,205568,235727,206158,236882,236096,235069,203922,237686,212816,232417,230805,237191,235837,330593,233519,237840,753088,232340,231360,237428,236630,236647,242789,235995,235863,236972,237809,232927,237765,236062,230981,231364,232399,236288,828176,232875,207657,220051,237753,235068,236174,221929,243810,332360,333447,232837,211864,331062,235522,333519,236613,230965,232292,230532,210186,332294,333777,320520,323493,231536,336171,235100,235104,329335,221954,236222,329189,329286,320619,233635,211558,211501,235793,231451,333751,331033,231521,230330,235316,230350,242842,230415,230416,232225,230305,230310,230321,230383,230219,237912,237468,230224,230536,752581,232983,829004,236214,236220,236228,236226,242932,236551,232888,230209,236304,221813,242951,213239,230050,221660,220485,221658,329510,334237,233087,233639,236410,237857,235842,237763,236567,234774,235742,211829,329857,213156,212920,211830,213243,213245,213241,213242,237936,234132,230679,236088,220114,236413,211570,234806,212732,211592,210389,211725,220488,751991,752441,210312,212862,212727,212724,212731,212725,212061,210227,211943,211940,212071,212062,211755,211942,212060,210334,212059,210253,210118,212066,212067,210209,211941,210396,212058,212072,211844,213014,211616,210004,210265,210392,213013,213162,213155,237875,329466,323792,323617,224268,212738,242662,330585,334282,330678,235090,237988,230958,233768,232699,233097,237676,237923,237888,236971,236973,236975,236974,334168,834192,237108,237069,237339,753192,237273,237271,237862,237217,236989,237011,236990,237317,207115,237013,237068,220489,210927,210928,210929,210930,210931,210932,210297,210934,210935,210936,210937,210940,210941,210942,210943,210945,210954,210955,210956,210958,236993,237021,237064,237066,220517,237067,237867,243826,243827,237973,220566,236460,237150,230813,237863,242718,236114,236793,236268,235984,244882,230201,231489,329258,323857,220050,242812,237869,237109,232377,236964,851743,827751,231358,231357,230818,231388,237421,847709,235178,220580,230925,232847,230948,230943,329413,237330,231314,231320,753111,232343,221711,212722,222131,233397,320623,320510,344949,329288,320511,333789,329193,203374,236377,237446,237349,236320,323542,849585,829002,235865,334231,236550,205386,220539,232919,233942,236704,236310,236293,233274,230005,204500,237227,230060,235061,751923,220422,236485,220568,237311,237793,232653,236681,236682,236680,236683,236896,827673,236963,220575,236572,236573,236576,220478,236699,236751,236712,236713,236701,237063,236750,236748,236857,850457,237614,232868,236657,220477,333539,332426,333613,236888,236692,236799,236796,236809,236703,237023,236800,220506,236916,236832,237677,237025,237376,237054,235118,236725,237807,235086,221634,234977,236206,235715,204910,224360,237987,237400,236205,237077,233366,233370,220090,200379,235739,236999,237000,237654,237611,237009,237004,237293,237260,237259,237272,237295,236795,236830,220564,220514,237053,207661,237486,236951,237057,236949,237149,237058,332281,237759,236945,237263,230689,753108,242806,333926,242830,761611,233832,232941,333483,235904,233818,233817,233819,232989,333994,233802,333456,237657,335898,236905,333530,832044,851517,235996,235924,233803,332422,236651,235527,237417,242772,242774,242775,233280,233281,234631,221691,237644,235335,234518,230483,222341,230459,220623,752490,235062,237132,234742,234719,231849,230978,211930,331294,233949,333517,220435,332330,220436,237027,236784,236785,236721,236431,323705,233877,828150,210600,236615,232905,850830,236585,235926,232947,236084,236695,832850,237684,236074,210395,210238,210340,210836,210838,210355,210840,210842,210138,210844,210378,210251,210847,210816,210817,210818,210819,210848,210849,210850,210827,210851,210828,210877,210878,210347,210879,210946,210431,210947,210948,210882,210825,210357,210884,210885,210371,210888,210182,210890,210891,210427,210095,210894,210895,210897,210898,210908,210914,210912,210924,210813,210364,210815,232952,329804,237798,232391,232392,233807,232917,235835,232816,232819,236631,237652,210961,210963,210964,210965,210821,210822,210823,210824,210826,210966,210969,210970,210971,210852,210206,210854,210855,210856,210311,210858,210375,210404,210861,210412,210367,210421,210865,210314,210869,210151,210871,210203,210333,210284,210900,210973,210104,210904,210905,210906,210909,210910,210911,210913,210915,210916,210212,210919,210920,210380,210922,210926,220060,752159,333573,237218,232959,334169,236927,236839,236652,331088,340010,221913,232463,230504,230475,231445,237366,230320,236509,336820,236716,236432,236480,236481,235368,235361,235363,230456,230500,230455,230476,230281,230404,230255,235566,235580,235571,236147,220161,237613,235874,235873,235870,236041,236040,236570,236851,236843,237410,336302,236900,320550,220111,236416,236486,210260,237952,220409,236273,236274,237047,236538,236685,827650,236340,200713,236362,236343,752000,236352,220599,236335,236364,236184,236185,236578,230791,237424,237799,230746,230742,230799,230102,235762,230225,230268,230356,230406,236805,235725,230410,230411,230420,230421,230433,230442,230465,230477,237423,329211,230502,230503,233876,235055,243806,236513,236515,237451,236709,236727,236746,220521,236361,236774,332455,333979,236826,220439,236777,236710,236711,236673,236674,236675,236676,236677,236694,849325,236561,220454,235119,235049,213166,211980,235285,752188,232569,200462,204185,237567,235202,237847,235288,237653,761699,236838,200557,200565,237873,237872,237871,237880,237882,237881,751038,847841,830813,832357,850872,804789,340184,850065,333620,828816,813967,815357,807701,847851,807686,807689,237938,237939,237940,237941,237942,237907,237943,237910,237944,237945,237908,237926,237928,237927,200247,237946,237975,237976,319789,233052,236068,236291,236023,237129,210156,236080,236078,210165,236671,236607,237721,236033,828497,236744,236875,237751,237727,235919,235920,237683,210169,220453,236834,236154,237827,235965,237930,235418,235906,237378,237051,235514,236619,236618,236602,237489,236883,336193,336192,237507,345398,237231,236864,236865,236866,236867,237101,210167,212929,212928,752934,332476,236324,236242,236464,211503,236034,242866,237860,210390,210327,236111,211665,211714,210211,211673,211674,211675,211672,210185,210400,211635,211670,211634,210349,211628,211629,211630,211631,211632,211633,211644,211643,211642,211641,211640,211639,211638,211637,211636,236152,211667,211668,210313,211671,220468,237700,236388,333932,210233,211683,211684,211685,211687,211688,211689,211690,329565,828534,753175,211724,752316,220610,236846,205581,753237,243847,232836,752548,205743,242614,242889,211717,211718,211860,236346,237969,237672,237708,220619,237181,220101,210092,210377,210094,210097,815388,210069,210079,230180,242799,222193,220016,752456,828457,333965,200757,237203,236917,336189,236862,237334,237335,236889,236807,236808,236810,236813,236812,237075,237324,323845,329426,330088,320555,236878,236769,207109,236923,236765,236941,236860,236861,237024,236082,236635,236667,236634,320238,323610,329684,222078,834416,237789,332451,235578,320526,242884,222079,232811,242882,237243,235375,235376,235377,211711,211709,211645,211646,211647,211648,210319,211651,211652,211677,211663,211653,210336,210205,210372,222141,230671,230599,232397,211834,333511,230650,232856,236939,329591,236980,236981,237514,834046,220622,203699,230032,200754,848981,336207,236086,236891,330018,211839,211841,211793,211816,211770,211769,211768,211767,210058,211782,210425,210255,211774,211772,210189,753186,244886,244885,231347,205186,211783,211784,210323,210132,210405,211790,211792,210342,210424,211797,211798,210304,211800,211801,211802,210242,211804,210804,211806,210271,243980,243942,211893,211894,210252,237772,222130,211809,211810,211811,211812,211813,211814,211815,222169,752605,244897,333424,211840,828585,220620,851742,237861,236816,237289,243807,242952,220434,220423,237932,236970,211890,230963,222137,237326,220177,237307,230014,220602,333522,231341,210012,211838,210407,230143,237242,233824,832551,232939,233820,233813,233833,237725,237465,232954,237780,220447,237901,237661,236105,236101,236093,237710,237645,237775,237778,237859,236060,236559,236138,236073,236148,236283,236501,210172,235928,236496,237454,237018,850233,235936,235533,235498,210040,235565,210102,237593,235564,235944,235444,332325,236049,235551,237693,236173,220582,329304,329307,837713,237479,237509,210348,345943,237664,237824,861086,237502,237533,237534,237537,237538,237539,237540,237541,237543,237521,237522,237523,237550,237551,237552,237553,237554,237524,237517,237525,237557,237527,237528,237516,237529,237530,237518,237520,237515,237548,237549,237558,237559,807417,348264,849946,849942,832084,311203,830968,232987,827659,827660,827661,827662,827760,232973,827694,827693,827692,827658,220180,236665,235486,220573,235455,210007,235927,235406,332355,334054,334043,235908,236736,205928,237573,237594,237510,237823,237595,220579,220578,237578,237606,237561,323851,237590,237724,237638,204161,237822,237712,237921,237977,237637,237733,237749,237970,220606,237850,237916,237917,237688,237804,237803,237812,237805,237806,237745,232398,235746,235964,237445,236849,237974,336730,237702,237703,237748,332337,334052,332335,827712,237836,237858,237891,332016,237747,237746,237738,237734,220608,237897,780442,811088,237866,203920,752250,220596,237919,237675,237925,237924,752021,237884,237949) and staffImage is not null;
2022-01-07 17:00:39.486 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==> Parameters: 
2022-01-07 17:00:40.025 [http-nio-8080-exec-6] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - <==      Total: 3138
2022-01-07 17:00:41.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:00:41.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:00:41.732 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:00:41.901 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:00:41.901 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:00:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:00:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:00:45.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:00:46.084 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:00:46.084 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:01:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:01:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:01:01.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:01:11.908 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:01:11.908 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:01:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:01:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:01:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:01:16.097 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:01:16.097 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:01:41.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:01:41.734 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:01:41.734 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:01:41.930 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:01:41.930 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:01:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:01:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:01:45.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:01:46.116 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:01:46.116 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:02:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:02:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:02:01.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:02:11.950 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:02:11.950 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:02:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:02:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:02:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:02:16.126 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:02:16.126 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:02:41.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:02:41.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:02:41.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:02:41.954 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:02:41.954 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:02:45.021 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:02:45.021 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:02:45.021 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:02:46.136 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:02:46.136 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:03:01.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:03:01.732 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:03:01.733 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:03:11.762 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:03:11.762 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 17:03:11.762 [Thread-5] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 17:03:11.777 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:03:11.777 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 17:02:53.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 17:03:11.777 [Thread-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:03:11.968 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:03:11.968 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:03:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:03:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:03:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:03:16.154 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:03:16.154 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:03:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:03:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:03:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:03:41.981 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:03:41.981 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:03:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:03:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:03:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:03:46.174 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:03:46.174 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:03:49.631 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:03:49.631 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 17:03:49.631 [Thread-6] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 17:03:49.631 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:03:49.631 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 17:03:31.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 17:03:49.648 [Thread-6] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:04:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:04:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:04:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:04:11.993 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:04:11.993 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:04:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:04:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:04:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:04:16.189 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:04:16.189 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:04:41.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:04:41.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:04:41.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:04:42.006 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:04:42.006 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:04:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:04:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:04:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:04:46.205 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:04:46.205 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:05:01.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:05:01.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:05:01.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:05:12.014 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:05:12.014 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:05:15.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:05:15.019 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:05:15.023 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:05:16.210 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:05:16.210 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:05:41.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:05:41.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:05:41.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:05:42.028 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:05:42.028 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:05:45.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:05:45.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:05:45.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:05:46.230 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:05:46.231 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:06:01.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:06:01.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:06:01.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:06:12.036 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:06:12.036 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:06:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:06:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:06:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:06:16.236 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:06:16.236 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:06:23.827 [Thread-9] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:06:23.829 [Thread-9] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 17:06:23.832 [Thread-9] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 17:06:23.833 [Thread-9] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:06:23.834 [Thread-9] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 17:06:05.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 17:06:23.840 [Thread-9] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:06:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:06:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:06:30.022 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:06:42.051 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:06:42.052 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:06:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:06:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:06:45.021 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:06:46.247 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:06:46.247 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:07:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:07:01.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:07:01.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:07:12.073 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:07:12.077 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:07:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:07:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:07:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:07:16.263 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:07:16.263 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:07:30.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:07:30.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:07:30.023 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:07:42.085 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:07:42.085 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:07:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:07:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:07:45.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:07:46.276 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:07:46.276 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:08:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:08:01.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:08:01.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:08:12.105 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:08:12.105 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:08:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:08:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:08:15.021 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:08:16.293 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:08:16.293 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:08:41.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:08:41.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:08:41.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:08:42.124 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:08:42.124 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:08:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:08:45.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:08:45.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:08:46.303 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:08:46.303 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:09:01.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:09:01.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:09:01.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:09:12.136 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:09:12.138 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:09:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:09:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:09:15.019 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:09:16.309 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:09:16.311 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:09:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:09:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:09:30.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:09:42.145 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:09:42.146 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:09:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:09:45.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:09:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:09:46.326 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:09:46.326 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:10:00.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:10:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:10:00.019 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:10:12.162 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:10:12.162 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:10:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:10:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:10:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:10:16.340 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:10:16.340 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:10:25.401 [Thread-11] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:10:25.401 [Thread-11] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 17:10:10.0(Timestamp), 151(String), 192.168.1.151(String), 4(Integer), null, 0(Integer)
2022-01-07 17:10:25.408 [Thread-11] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:10:38.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:10:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:10:38.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:10:38.802 [Thread-12] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:10:38.803 [Thread-12] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 17:10:20.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 17:10:38.809 [Thread-12] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:10:42.170 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:10:42.170 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:10:46.355 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:10:46.355 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:10:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:10:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:10:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:11:00.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:11:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:11:00.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:11:01.004 [Thread-13] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:11:01.007 [Thread-13] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 17:11:01.007 [Thread-13] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 17:11:01.008 [Thread-13] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:11:01.008 [Thread-13] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 17:10:42.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 17:11:01.014 [Thread-13] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:11:12.185 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:11:12.187 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:11:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:11:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:11:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:11:16.364 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:11:16.364 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:11:26.399 [Thread-18] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:11:26.400 [Thread-18] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 17:11:07.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 17:11:26.405 [Thread-18] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:11:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:11:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:11:30.020 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:11:42.197 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:11:42.197 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:11:46.372 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:11:46.372 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:11:48.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:11:48.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:11:48.731 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:11:54.533 [Thread-20] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:11:54.534 [Thread-20] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 17:11:54.535 [Thread-20] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:11:54.535 [Thread-20] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:11:54.536 [Thread-20] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@4ecf204f(byte[]), 2022-01-07 17:11:35.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 77(Integer)
2022-01-07 17:11:54.538 [Thread-20] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:12:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:12:00.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:12:00.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:12:12.211 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:12:12.212 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:12:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:12:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:12:15.023 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:12:16.389 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:12:16.389 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:12:30.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:12:30.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:12:30.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:12:42.229 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:12:42.232 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:12:46.405 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:12:46.405 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:12:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:12:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:12:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:13:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:13:00.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:13:00.020 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:13:12.248 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:13:12.248 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:13:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:13:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:13:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:13:16.413 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:13:16.413 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:13:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:13:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:13:30.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:13:42.257 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:13:42.257 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:13:46.429 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:13:46.429 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:13:49.225 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:13:49.230 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:13:49.231 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:14:12.269 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:14:14.150 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:14:14.151 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:14:14.151 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:14:14.152 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:14:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:14:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:14:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:14:16.443 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:14:16.443 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:14:38.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:14:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:14:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:14:44.157 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:14:44.157 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:14:46.449 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:14:46.449 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:14:48.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:14:48.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:14:48.732 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:15:00.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:15:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:15:00.021 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:15:14.174 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:15:14.175 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:15:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:15:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:15:15.024 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:15:16.458 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:15:16.458 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:15:34.616 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 17:15:35.035 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 17:15:35.383 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@72572143
2022-01-07 17:15:35.477 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@72572143
2022-01-07 17:15:35.610 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{GET [/equipment]}: equipment(Model)
	{ [/]}: getEquipment()
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{ [/staffOperation]}: staffOperation()
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{ [/history]}: history(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
2022-01-07 17:15:35.613 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 17:15:35.623 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 17:15:35.655 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 17:15:35.879 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 17:15:35.880 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:15:35.880 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:15:35.880 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:15:35.880 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:15:35.880 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:15:35.880 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:15:35.880 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:15:35.880 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:15:35.880 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:15:35.881 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:15:35.881 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:15:35.881 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:15:35.881 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:15:35.881 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:15:35.881 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:15:35.881 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:15:35.881 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:15:35.881 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 17:15:35.881 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:15:35.881 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:15:35.882 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:15:36.152 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: ed1a2862-8d54-4e72-8dce-c9ecc0bca7c5
2022-01-07 17:15:36.157 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:15:36.169 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:15:36.179 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:15:36.184 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:15:36.184 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:15:36.185 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:15:36.264 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:15:36.303 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: b32867b7-047b-4988-abb1-ad9045b489c8
2022-01-07 17:15:36.323 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: adcea776-8bcd-4732-9036-f308a653b239
2022-01-07 17:15:36.335 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: ce7e86af-6d15-4e60-9f03-f1286d51d077
2022-01-07 17:15:36.347 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: d92bfbbb-bdce-4e06-a5dd-dd4a59ac0351
2022-01-07 17:15:36.367 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 4eb5aa56-d1de-47fb-afbb-00f3dc1ab3c2
2022-01-07 17:15:36.384 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: 5a124706-314c-4704-ad9a-d56151e0397e
2022-01-07 17:15:36.413 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 9b796ae6-f488-4125-913c-d2b17f5e5763
2022-01-07 17:15:36.425 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 3f82699a-e825-4f54-821f-712e90c4315f
2022-01-07 17:15:36.437 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 14c7b2fa-7a87-43ff-8e1c-2ef18992e6c5
2022-01-07 17:15:36.438 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:15:46.720 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 17:15:46.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:15:46.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:15:46.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:15:46.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:15:46.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:15:46.721 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:15:46.722 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:15:46.723 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:15:46.738 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 82ec0f1d-bf0d-4f9c-8928-9de5b13257d7
2022-01-07 17:15:46.738 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:15:46.738 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:15:46.739 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:15:46.843 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:15:46.856 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 090156fd-8edb-4f46-a1f4-190dbe84366b
2022-01-07 17:15:46.866 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: fe432599-7b5a-40e2-a029-e1cfcd6944c3
2022-01-07 17:15:46.876 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: bda98314-b330-4f69-acb6-9983a8800bf7
2022-01-07 17:15:46.886 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 61ed546d-e1a6-4e8c-ab20-8115c78ef467
2022-01-07 17:15:46.896 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 7367ba11-ac23-4a25-9b2c-af40984f562d
2022-01-07 17:15:46.906 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 918f1ba4-a9d8-4d44-adaf-6207934a91ac
2022-01-07 17:15:46.917 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: 99534353-d9a9-49d8-85bc-80e835bf4f09
2022-01-07 17:15:46.927 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 4f97ba0c-164b-4058-8b58-76cd6fb7855e
2022-01-07 17:15:46.937 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 5aa6a345-c999-425c-92bb-ef3aea082f2e
2022-01-07 17:15:46.938 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:16:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:16:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:16:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:16:05.780 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 17:16:05.838 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@178c0356
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@5d851e23
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@fb7597a
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 17:16:05.839 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 17:16:06.279 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:16:06.279 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:16:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:16:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:16:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:16:16.852 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:16:16.852 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:16:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:16:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:16:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:16:36.284 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:16:36.284 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:16:46.867 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:16:46.867 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:16:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:16:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:16:48.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:16:49.969 [http-nio-8080-exec-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.getData - ==>  Preparing: select * from PassTable where passTime > ? and passTime < ? and passEquipmentIp=? ORDER BY passTime;
2022-01-07 17:16:49.971 [http-nio-8080-exec-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.getData - ==> Parameters: 2022-01-03 00:00:00.0(Timestamp), 2022-01-08 00:00:00.0(Timestamp), 192.168.1.118(String)
2022-01-07 17:16:49.999 [http-nio-8080-exec-5] DEBUG c.f.s.mapper.faceRecognition.PassMapper.getData - <==      Total: 381
2022-01-07 17:17:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:17:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:17:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:17:06.289 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:17:06.289 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:17:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:17:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:17:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:17:16.881 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:17:16.881 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:17:36.294 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:17:36.294 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:17:38.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:17:38.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:17:38.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:17:46.894 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:17:46.894 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:17:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:17:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:17:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:18:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:18:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:18:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:18:06.294 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:18:06.294 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:18:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:18:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:18:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:18:16.908 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:18:16.908 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:18:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:18:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:18:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:18:36.304 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:18:36.304 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:18:46.921 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:18:46.921 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:18:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:18:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:18:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:19:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:19:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:19:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:19:06.317 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:19:06.317 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:19:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:19:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:19:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:19:16.928 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:19:16.928 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:19:36.331 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:19:36.331 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:19:38.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:19:38.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:19:38.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:19:46.933 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:19:46.933 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:19:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:19:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:19:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:20:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:20:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:20:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:20:06.342 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:20:06.342 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:20:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:20:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:20:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:20:16.935 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:20:16.935 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:20:30.000 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:20:30.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:20:30.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:20:36.343 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:20:36.343 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:20:46.951 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:20:46.951 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:20:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:20:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:20:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:21:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:21:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:21:00.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:21:06.356 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:21:06.356 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:21:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:21:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:21:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:21:16.961 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:21:16.961 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:21:30.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:21:30.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:21:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:21:36.369 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:21:36.369 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:21:46.972 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:21:46.972 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:21:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:21:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:21:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:22:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:22:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:22:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:22:06.370 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:22:06.370 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:22:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:22:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:22:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:22:16.975 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:22:16.975 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:22:36.373 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:22:36.373 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:22:38.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:22:38.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:22:38.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:22:46.982 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:22:46.982 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:22:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:22:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:22:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:23:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:23:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:23:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:23:06.374 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:23:06.374 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:23:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:23:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:23:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:23:16.985 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:23:16.985 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:23:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:23:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:23:30.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:23:36.388 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:23:36.388 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:23:46.987 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:23:46.987 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:23:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:23:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:23:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:24:00.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:24:00.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:24:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:24:06.402 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:24:06.402 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:24:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:24:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:24:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:24:16.997 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:24:16.997 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:24:36.405 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:24:36.405 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:24:38.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:24:38.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:24:38.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:24:47.005 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:24:47.005 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:24:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:24:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:24:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:25:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:25:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:25:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:25:06.410 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:25:06.410 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:25:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:25:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:25:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:25:17.014 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:25:17.014 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:25:36.413 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:25:36.413 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:25:38.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:25:38.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:25:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:25:47.017 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:25:47.017 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:25:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:25:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:25:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:26:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:26:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:26:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:26:06.415 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:26:06.415 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:26:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:26:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:26:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:26:17.023 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:26:17.023 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:26:36.426 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:26:36.426 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:26:38.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:26:38.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:26:38.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:26:47.025 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:26:47.025 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:26:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:26:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:26:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:27:00.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:27:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:27:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:27:06.442 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:27:06.442 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:27:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:27:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:27:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:27:17.027 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:27:17.027 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:27:23.990 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:27:23.991 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: ed1a2862-8d54-4e72-8dce-c9ecc0bca7c5: (connection evicted)
2022-01-07 17:27:23.991 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: b32867b7-047b-4988-abb1-ad9045b489c8: (connection evicted)
2022-01-07 17:27:23.991 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: adcea776-8bcd-4732-9036-f308a653b239: (connection evicted)
2022-01-07 17:27:23.991 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: ce7e86af-6d15-4e60-9f03-f1286d51d077: (connection evicted)
2022-01-07 17:27:23.991 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: d92bfbbb-bdce-4e06-a5dd-dd4a59ac0351: (connection evicted)
2022-01-07 17:27:23.991 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: 4eb5aa56-d1de-47fb-afbb-00f3dc1ab3c2: (connection evicted)
2022-01-07 17:27:23.991 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: 5a124706-314c-4704-ad9a-d56151e0397e: (connection evicted)
2022-01-07 17:27:23.991 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: 9b796ae6-f488-4125-913c-d2b17f5e5763: (connection evicted)
2022-01-07 17:27:23.991 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: 3f82699a-e825-4f54-821f-712e90c4315f: (connection evicted)
2022-01-07 17:27:23.991 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: 14c7b2fa-7a87-43ff-8e1c-2ef18992e6c5: (connection evicted)
2022-01-07 17:27:23.991 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 17:27:23.992 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:27:23.992 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: 82ec0f1d-bf0d-4f9c-8928-9de5b13257d7: (connection evicted)
2022-01-07 17:27:23.992 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 090156fd-8edb-4f46-a1f4-190dbe84366b: (connection evicted)
2022-01-07 17:27:23.992 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: fe432599-7b5a-40e2-a029-e1cfcd6944c3: (connection evicted)
2022-01-07 17:27:23.992 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: bda98314-b330-4f69-acb6-9983a8800bf7: (connection evicted)
2022-01-07 17:27:23.992 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: 61ed546d-e1a6-4e8c-ab20-8115c78ef467: (connection evicted)
2022-01-07 17:27:23.992 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: 7367ba11-ac23-4a25-9b2c-af40984f562d: (connection evicted)
2022-01-07 17:27:23.993 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: 918f1ba4-a9d8-4d44-adaf-6207934a91ac: (connection evicted)
2022-01-07 17:27:23.993 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: 99534353-d9a9-49d8-85bc-80e835bf4f09: (connection evicted)
2022-01-07 17:27:23.993 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: 4f97ba0c-164b-4058-8b58-76cd6fb7855e: (connection evicted)
2022-01-07 17:27:23.993 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: 5aa6a345-c999-425c-92bb-ef3aea082f2e: (connection evicted)
2022-01-07 17:27:23.993 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 17:27:27.542 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 17:27:27.958 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 17:27:28.366 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1ae4e221
2022-01-07 17:27:28.468 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1ae4e221
2022-01-07 17:27:28.608 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{ [/staffOperation]}: staffOperation()
	{ [/]}: getEquipment()
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{ [/history]}: history(Model)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{GET [/equipment]}: equipment(Model)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
2022-01-07 17:27:28.611 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 17:27:28.622 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 17:27:28.656 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 17:27:28.889 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 17:27:28.890 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:27:28.890 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:27:28.890 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:27:28.890 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:27:28.890 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:27:28.891 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:27:28.891 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:27:28.891 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:27:28.891 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:27:28.891 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:27:28.891 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:27:28.891 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:27:28.891 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:27:28.891 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:27:28.891 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:27:28.892 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 17:27:28.893 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:27:28.893 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:27:28.893 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:27:28.893 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:27:28.893 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:27:28.893 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:27:28.893 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:27:28.893 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:27:29.168 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: b8657b1d-35d4-44c1-a1ea-74cc55ce89a7
2022-01-07 17:27:29.173 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:27:29.185 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:27:29.197 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:27:29.201 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:27:29.201 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:27:29.202 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:27:29.271 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:27:29.310 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: db70a7aa-9fb4-41f1-a0ff-0b886b095414
2022-01-07 17:27:29.330 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: 9a263427-3ee4-418b-b0cc-eef9f5d5a8c0
2022-01-07 17:27:29.345 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 8c0c8924-b4e8-40d2-9283-001f5f2e8580
2022-01-07 17:27:29.357 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 47ea9947-5cb0-4830-80f1-3099bfc3b144
2022-01-07 17:27:29.373 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 5b20ff20-288e-4aa9-bdbb-d436d688b142
2022-01-07 17:27:29.385 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: b8d68cdc-2cbc-40c7-a2fd-9e0ee44653f5
2022-01-07 17:27:29.412 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 5ec0467f-3668-4658-982a-5951c438e8b9
2022-01-07 17:27:29.426 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 72dc595b-57d7-4ab0-b612-8af09c273c59
2022-01-07 17:27:29.440 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: abd51f8f-11a7-48e3-a484-3f7f40586ce7
2022-01-07 17:27:29.440 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:27:30.001 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 17:27:30.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:27:30.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:27:30.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:27:30.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:27:30.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:27:30.002 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:27:30.003 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:27:30.004 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:27:30.020 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 49cf28eb-db01-468c-bf82-b7954d0cf643
2022-01-07 17:27:30.021 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:27:30.021 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:27:30.021 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:27:30.129 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:27:30.144 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 6cc133ad-d96b-4f42-8918-60002ddfb006
2022-01-07 17:27:30.173 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: 9d5494ff-6bc9-4ffc-bf59-1ca6379d0053
2022-01-07 17:27:30.190 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: f13c0af0-772c-43b1-9153-3c5710e6a7f9
2022-01-07 17:27:30.211 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: ce44eeac-f1dd-4a67-b0b0-87156ce27281
2022-01-07 17:27:30.229 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: df678212-7627-43a1-a511-b6fac32f739e
2022-01-07 17:27:30.243 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: d27e548d-8c4b-447c-8803-3e146ba961e2
2022-01-07 17:27:30.256 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: cee27cc3-26a8-4017-9d07-d04d02873c8d
2022-01-07 17:27:30.269 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: fbc0db22-7b36-4105-b8b9-f382b9104ec2
2022-01-07 17:27:30.282 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 9670dcce-e8b8-4bc4-b3c0-1962486ce0da
2022-01-07 17:27:30.282 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:27:45.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:27:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:27:45.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:27:57.446 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 17:27:57.504 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@769fb96b
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7e5499b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2b1d995d
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 17:27:57.505 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 17:27:59.277 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:27:59.277 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:28:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:28:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:28:00.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:28:00.137 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:28:00.137 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:28:05.222 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:28:05.225 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:28:05.228 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:28:10.781 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:28:10.782 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:28:10.783 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:28:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:28:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:28:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:28:16.348 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:28:16.348 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:28:16.349 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:28:21.464 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:28:21.465 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:28:21.466 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:28:29.284 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:28:29.284 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:28:30.000 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:28:30.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:28:30.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:28:30.141 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:28:30.141 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:28:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:28:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:28:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:28:59.300 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:28:59.300 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:29:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:29:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:29:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:29:00.157 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:29:00.157 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:29:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:29:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:29:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:29:29.312 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:29:29.312 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:29:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:29:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:29:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:29:30.167 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:29:30.167 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:29:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:29:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:29:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:29:59.321 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:29:59.321 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:30:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:30:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:30:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:30:00.173 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:30:00.173 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:30:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:30:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:30:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:30:29.331 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:30:29.331 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:30:30.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:30:30.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:30:30.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:30:30.186 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:30:30.186 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:30:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:30:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:30:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:30:59.338 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:30:59.338 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:31:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:31:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:31:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:31:00.191 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:31:00.191 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:31:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:31:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:31:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:31:29.349 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:31:29.349 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:31:30.203 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:31:30.203 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:31:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:31:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:31:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:31:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:31:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:31:48.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:31:59.360 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:31:59.360 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:32:00.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:32:00.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:32:00.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:32:00.215 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:32:00.215 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:32:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:32:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:32:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:32:29.366 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:32:29.366 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:32:30.220 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:32:30.220 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:32:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:32:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:32:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:32:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:32:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:32:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:32:59.373 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:32:59.373 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:33:00.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:33:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:33:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:33:00.236 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:33:00.236 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:33:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:33:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:33:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:33:29.374 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:33:29.374 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:33:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:33:30.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:33:30.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:33:30.238 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:33:30.238 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:33:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:33:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:33:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:33:59.379 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:33:59.379 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:34:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:34:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:34:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:34:00.253 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:34:00.253 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:34:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:34:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:34:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:34:29.388 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:34:29.388 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:34:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:34:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:34:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:34:30.259 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:34:30.259 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:34:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:34:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:34:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:34:59.396 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:34:59.396 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:35:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:35:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:35:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:35:00.265 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:35:00.265 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:35:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:35:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:35:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:35:20.587 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:35:20.587 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: b8657b1d-35d4-44c1-a1ea-74cc55ce89a7: (connection evicted)
2022-01-07 17:35:20.587 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: db70a7aa-9fb4-41f1-a0ff-0b886b095414: (connection evicted)
2022-01-07 17:35:20.587 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: 9a263427-3ee4-418b-b0cc-eef9f5d5a8c0: (connection evicted)
2022-01-07 17:35:20.587 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 8c0c8924-b4e8-40d2-9283-001f5f2e8580: (connection evicted)
2022-01-07 17:35:20.588 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 47ea9947-5cb0-4830-80f1-3099bfc3b144: (connection evicted)
2022-01-07 17:35:20.588 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: 5b20ff20-288e-4aa9-bdbb-d436d688b142: (connection evicted)
2022-01-07 17:35:20.588 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: b8d68cdc-2cbc-40c7-a2fd-9e0ee44653f5: (connection evicted)
2022-01-07 17:35:20.588 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: 5ec0467f-3668-4658-982a-5951c438e8b9: (connection evicted)
2022-01-07 17:35:20.588 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: 72dc595b-57d7-4ab0-b612-8af09c273c59: (connection evicted)
2022-01-07 17:35:20.588 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: abd51f8f-11a7-48e3-a484-3f7f40586ce7: (connection evicted)
2022-01-07 17:35:20.588 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 17:35:20.588 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:35:20.588 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: 49cf28eb-db01-468c-bf82-b7954d0cf643: (connection evicted)
2022-01-07 17:35:20.588 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 6cc133ad-d96b-4f42-8918-60002ddfb006: (connection evicted)
2022-01-07 17:35:20.589 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: 9d5494ff-6bc9-4ffc-bf59-1ca6379d0053: (connection evicted)
2022-01-07 17:35:20.589 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: f13c0af0-772c-43b1-9153-3c5710e6a7f9: (connection evicted)
2022-01-07 17:35:20.589 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: ce44eeac-f1dd-4a67-b0b0-87156ce27281: (connection evicted)
2022-01-07 17:35:20.589 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: df678212-7627-43a1-a511-b6fac32f739e: (connection evicted)
2022-01-07 17:35:20.589 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: d27e548d-8c4b-447c-8803-3e146ba961e2: (connection evicted)
2022-01-07 17:35:20.589 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: cee27cc3-26a8-4017-9d07-d04d02873c8d: (connection evicted)
2022-01-07 17:35:20.589 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: fbc0db22-7b36-4105-b8b9-f382b9104ec2: (connection evicted)
2022-01-07 17:35:20.589 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: 9670dcce-e8b8-4bc4-b3c0-1962486ce0da: (connection evicted)
2022-01-07 17:35:20.589 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 17:35:24.212 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 17:35:24.623 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 17:35:24.983 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@366cf6e
2022-01-07 17:35:25.076 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@366cf6e
2022-01-07 17:35:25.212 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{ [/staffOperation]}: staffOperation()
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{GET [/equipment]}: equipment(Model)
	{ [/equipment/getData]}: getEquipmentData()
	{ [/]}: getEquipment()
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{ [/history]}: history(Model)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
2022-01-07 17:35:25.215 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 17:35:25.225 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 17:35:25.260 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 17:35:25.486 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 17:35:25.487 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:35:25.487 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:35:25.487 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:35:25.487 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:35:25.487 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:35:25.487 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:35:25.487 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:35:25.487 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:35:25.488 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:35:25.488 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:35:25.488 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:35:25.488 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:35:25.488 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:35:25.488 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:35:25.488 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:35:25.488 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:35:25.488 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:35:25.488 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 17:35:25.488 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:35:25.489 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:35:25.490 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:35:25.490 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:35:25.771 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: d5115649-485f-4ee0-8a39-e6f3f62d8aaf
2022-01-07 17:35:25.776 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:35:25.788 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:35:25.798 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:35:25.802 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:35:25.803 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:35:25.804 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:35:25.877 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:35:25.907 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 8f5967af-16e0-4565-b2e5-adf5eb5c911a
2022-01-07 17:35:25.928 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: 299948c5-1beb-4bd9-a9c6-97a2bdda6f0f
2022-01-07 17:35:25.940 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 78de7952-2b0c-4703-b449-090a1cfaac6e
2022-01-07 17:35:25.951 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 342e5959-1a37-40c5-be92-e4884ce0a136
2022-01-07 17:35:25.969 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 8da427d2-1f08-4c74-85b1-30c95a87717b
2022-01-07 17:35:25.982 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: c069ab5d-1aa5-4927-9270-e273078f9b53
2022-01-07 17:35:25.996 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: fefbf436-61df-4f46-a034-851207cd3b46
2022-01-07 17:35:26.007 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: b99a8394-3fe7-480b-80bb-da4fd36358e1
2022-01-07 17:35:26.019 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: e42ff192-a5ab-4270-8c47-0f2c95fc02f3
2022-01-07 17:35:26.019 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:35:30.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 17:35:30.012 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:35:30.013 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:35:30.027 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 99c2d4e3-b7f8-49a9-8adb-7df249b40260
2022-01-07 17:35:30.027 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:35:30.027 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:35:30.028 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:35:30.135 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:35:30.150 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: c67ca26e-26ca-4a0d-a766-778e36c06bb9
2022-01-07 17:35:30.162 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: 9ed4c6a0-ba97-4e46-aa7a-6aa6c73ff69d
2022-01-07 17:35:30.172 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 79575d75-6b6b-47e0-bcc2-7ac66f88fa80
2022-01-07 17:35:30.182 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 9fa9b2ad-26f0-4dc0-8a9e-f26121f475f9
2022-01-07 17:35:30.193 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 1ac7eedd-c472-4855-abcf-0b563af73c9c
2022-01-07 17:35:30.203 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: aae0f731-7340-4f22-a7e2-8149bec22782
2022-01-07 17:35:30.213 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: 0b84c0c4-989f-40e0-a8f1-9630ed4bd36a
2022-01-07 17:35:30.224 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 071d7489-8096-41e3-ae4e-eb829536d53b
2022-01-07 17:35:30.235 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 6939d297-414e-4cd6-a294-3ad23765b942
2022-01-07 17:35:30.235 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:35:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:35:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:35:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:35:55.887 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:35:55.887 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:36:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:36:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:36:00.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:36:00.142 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:36:00.142 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:36:14.664 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 17:36:14.723 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@6974a4e0
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@6e725ff4
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@574e5a4a
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 17:36:14.724 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 17:36:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:36:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:36:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:36:21.223 [Thread-44] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:36:21.225 [Thread-44] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:36:21.229 [Thread-44] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:36:21.231 [Thread-44] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:36:21.231 [Thread-44] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 17:36:02.0(Timestamp), 118(String), 192.168.1.118(String), 2(Integer), null, 36(Integer)
2022-01-07 17:36:21.240 [Thread-44] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:36:21.861 [Thread-45] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:36:21.862 [Thread-45] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:36:21.863 [Thread-45] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:36:21.863 [Thread-45] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:36:21.864 [Thread-45] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 17:36:02.0(Timestamp), 118(String), 192.168.1.118(String), 2(Integer), null, 16(Integer)
2022-01-07 17:36:21.869 [Thread-45] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:36:25.888 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:36:25.888 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:36:30.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:36:30.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:36:30.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:36:30.156 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:36:30.156 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:36:36.554 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:36:36.555 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:36:36.555 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:36:36.556 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:36:36.557 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 17:36:17.0(Timestamp), 118(String), 192.168.1.118(String), 2(Integer), null, 38(Integer)
2022-01-07 17:36:36.562 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:36:37.154 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:36:37.154 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:36:37.155 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:36:37.156 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:36:37.156 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 17:36:17.0(Timestamp), 118(String), 192.168.1.118(String), 2(Integer), null, 32(Integer)
2022-01-07 17:36:37.162 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:36:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:36:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:36:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:36:55.892 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:36:55.892 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:37:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:37:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:37:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:37:00.171 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:37:00.171 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:37:03.895 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:37:03.895 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:37:03.895 [Thread-48] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:37:03.895 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:37:03.895 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 17:36:44.0(Timestamp), 118(String), 192.168.1.118(String), 2(Integer), null, 24(Integer)
2022-01-07 17:37:03.905 [Thread-48] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:37:04.539 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:37:04.539 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:37:04.539 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:37:04.539 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:37:04.539 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 17:36:44.0(Timestamp), 118(String), 192.168.1.118(String), 2(Integer), null, 31(Integer)
2022-01-07 17:37:04.550 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:37:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:37:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:37:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:37:25.895 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:37:25.895 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:37:30.183 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:37:30.183 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:37:38.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:37:38.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:37:38.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:37:47.332 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:37:47.333 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:37:47.333 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:37:47.334 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:37:47.334 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 17:37:28.0(Timestamp), 118(String), 192.168.1.118(String), 2(Integer), null, 21(Integer)
2022-01-07 17:37:47.340 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:37:47.972 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:37:47.972 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 17:37:47.973 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:37:47.975 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:37:47.975 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), null, 2022-01-07 17:37:28.0(Timestamp), 118(String), 192.168.1.118(String), 2(Integer), null, 29(Integer)
2022-01-07 17:37:47.981 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:37:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:37:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:37:48.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:37:55.900 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:37:55.900 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:38:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:38:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:38:00.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:38:00.194 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:38:00.194 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:38:10.495 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:38:10.496 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 17:38:10.496 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:38:10.497 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:38:10.497 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@d557769(byte[]), 2022-01-07 17:37:51.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 81(Integer)
2022-01-07 17:38:10.498 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:38:11.134 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:38:11.134 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 17:38:11.135 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:38:11.136 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:38:11.136 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), null, 2022-01-07 17:37:51.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 78(Integer)
2022-01-07 17:38:11.143 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:38:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:38:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:38:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:38:25.905 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:38:25.905 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:38:29.181 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:38:29.181 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 17:38:29.182 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:38:29.183 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:38:29.183 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@b354e8d(byte[]), 2022-01-07 17:38:10.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 76(Integer)
2022-01-07 17:38:29.184 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:38:29.818 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:38:29.819 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 17:38:29.820 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:38:29.820 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:38:29.820 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), null, 2022-01-07 17:38:10.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 77(Integer)
2022-01-07 17:38:29.826 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:38:30.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:38:30.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:38:30.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:38:30.208 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:38:30.208 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:38:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:38:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:38:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:38:55.915 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:38:55.915 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:39:00.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:39:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:39:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:39:00.210 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:39:00.210 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:39:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:39:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:39:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:39:19.056 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:39:19.056 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 17:39:19.057 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:39:19.058 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:39:19.058 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@5e82f9ff(byte[]), 2022-01-07 17:39:00.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 80(Integer)
2022-01-07 17:39:19.064 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:39:19.743 [Thread-61] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:39:19.743 [Thread-61] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 17:39:19.744 [Thread-61] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:39:19.745 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:39:19.745 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), null, 2022-01-07 17:39:00.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 77(Integer)
2022-01-07 17:39:19.750 [Thread-61] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:39:25.921 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:39:25.921 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:39:30.223 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:39:30.223 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:39:38.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:39:38.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:39:38.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:39:48.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:39:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:39:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:39:55.923 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:39:55.923 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:40:00.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:40:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:40:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:40:00.231 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:40:00.231 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:40:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:40:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:40:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:40:16.047 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:40:16.048 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: d5115649-485f-4ee0-8a39-e6f3f62d8aaf: (connection evicted)
2022-01-07 17:40:16.048 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: 8f5967af-16e0-4565-b2e5-adf5eb5c911a: (connection evicted)
2022-01-07 17:40:16.049 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: 299948c5-1beb-4bd9-a9c6-97a2bdda6f0f: (connection evicted)
2022-01-07 17:40:16.049 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 78de7952-2b0c-4703-b449-090a1cfaac6e: (connection evicted)
2022-01-07 17:40:16.049 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 342e5959-1a37-40c5-be92-e4884ce0a136: (connection evicted)
2022-01-07 17:40:16.049 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: 8da427d2-1f08-4c74-85b1-30c95a87717b: (connection evicted)
2022-01-07 17:40:16.049 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: c069ab5d-1aa5-4927-9270-e273078f9b53: (connection evicted)
2022-01-07 17:40:16.049 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: fefbf436-61df-4f46-a034-851207cd3b46: (connection evicted)
2022-01-07 17:40:16.049 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: b99a8394-3fe7-480b-80bb-da4fd36358e1: (connection evicted)
2022-01-07 17:40:16.049 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: e42ff192-a5ab-4270-8c47-0f2c95fc02f3: (connection evicted)
2022-01-07 17:40:16.049 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 17:40:16.050 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:40:16.050 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: 99c2d4e3-b7f8-49a9-8adb-7df249b40260: (connection evicted)
2022-01-07 17:40:16.050 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: c67ca26e-26ca-4a0d-a766-778e36c06bb9: (connection evicted)
2022-01-07 17:40:16.050 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: 9ed4c6a0-ba97-4e46-aa7a-6aa6c73ff69d: (connection evicted)
2022-01-07 17:40:16.051 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: 79575d75-6b6b-47e0-bcc2-7ac66f88fa80: (connection evicted)
2022-01-07 17:40:16.051 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: 9fa9b2ad-26f0-4dc0-8a9e-f26121f475f9: (connection evicted)
2022-01-07 17:40:16.051 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: 1ac7eedd-c472-4855-abcf-0b563af73c9c: (connection evicted)
2022-01-07 17:40:16.051 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: aae0f731-7340-4f22-a7e2-8149bec22782: (connection evicted)
2022-01-07 17:40:16.051 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: 0b84c0c4-989f-40e0-a8f1-9630ed4bd36a: (connection evicted)
2022-01-07 17:40:16.052 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: 071d7489-8096-41e3-ae4e-eb829536d53b: (connection evicted)
2022-01-07 17:40:16.052 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: 6939d297-414e-4cd6-a294-3ad23765b942: (connection evicted)
2022-01-07 17:40:16.052 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 17:40:19.627 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 17:40:20.035 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 17:40:20.395 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@33b967bd
2022-01-07 17:40:20.491 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@33b967bd
2022-01-07 17:40:20.632 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{ [/monitor]}: monitor()
	{GET [/equipment]}: equipment(Model)
	{ [/staffOperation]}: staffOperation()
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{ [/]}: getEquipment()
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{ [/equipment/getData]}: getEquipmentData()
	{ [/history]}: history(Model)
2022-01-07 17:40:20.634 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2022-01-07 17:40:20.645 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 17:40:20.679 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 17:40:20.908 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 17:40:20.910 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:40:20.910 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:40:20.910 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:40:20.910 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:40:20.910 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:40:20.910 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:40:20.910 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:40:20.910 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:40:20.910 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:40:20.911 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:40:20.912 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:40:21.182 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 2c098c5d-0cd6-49f6-bda5-a6bbd0da6cc8
2022-01-07 17:40:21.186 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:40:21.198 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:40:21.209 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:40:21.213 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:40:21.213 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:40:21.214 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:40:21.288 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:40:21.310 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 688cc7b6-f1bc-4962-ac08-2f8e614cf872
2022-01-07 17:40:21.330 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: 9080698c-a167-4165-8abc-d6478509c4ee
2022-01-07 17:40:21.345 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 5a9c1a56-0b65-4401-b9bf-e82b3740b4d7
2022-01-07 17:40:21.357 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 1be3e683-a284-49eb-9217-3bdf1655b21c
2022-01-07 17:40:21.376 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 1b733f5a-0c70-49ea-81b7-e9b960ec18f5
2022-01-07 17:40:21.391 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: bc4e28ec-800f-4620-a834-ceb232e029bf
2022-01-07 17:40:21.413 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 9ce4afae-a502-48f2-9108-87fc3f256549
2022-01-07 17:40:21.424 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 7f26260a-ed22-49ec-b0c9-9a4e669b9557
2022-01-07 17:40:21.439 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: f2e8c15c-862d-42ae-9b2a-048b2312debf
2022-01-07 17:40:21.439 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:40:33.783 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 17:40:33.857 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@3b06ea5
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7b005e62
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2ffd9c7d
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 17:40:33.858 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 17:40:38.724 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 17:40:38.724 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:40:38.724 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:40:38.724 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:40:38.724 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:40:38.725 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:40:38.726 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:40:38.740 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: c1687cf7-cdb8-4605-b980-81bbc58cb614
2022-01-07 17:40:38.740 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:40:38.741 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:40:38.741 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:40:38.848 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:40:38.862 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: e5f33f3d-1ae4-4f5a-936a-46316bdae8ab
2022-01-07 17:40:38.873 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: 7040e10d-59e4-4a13-a678-39aad80e1c6e
2022-01-07 17:40:38.884 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 80836ce2-cea3-4eb1-8ed5-10e05ac5dc5d
2022-01-07 17:40:38.895 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: e15f0fe4-451e-4d66-8060-592afdef263c
2022-01-07 17:40:38.906 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 41b5d9e7-56a0-422a-af43-83775225a5a2
2022-01-07 17:40:38.917 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: d894ff76-27c8-4c80-8207-f34808659528
2022-01-07 17:40:38.927 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: ed684ef0-4cfd-4a33-b25b-a64c65bee504
2022-01-07 17:40:38.939 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: d1aeb18e-2fdd-4985-935c-b5dd12dba300
2022-01-07 17:40:38.950 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: bf98ceff-3e53-43d4-a8d4-70ba2db6bf67
2022-01-07 17:40:38.950 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:40:45.536 [Thread-42] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:40:45.538 [Thread-42] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 17:40:45.542 [Thread-42] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:40:45.543 [Thread-42] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:40:45.544 [Thread-42] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@7b3b3cc7(byte[]), 2022-01-07 17:40:26.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 83(Integer)
2022-01-07 17:40:45.552 [Thread-42] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:40:48.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:40:48.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:40:48.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:40:51.298 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:40:51.298 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:40:56.933 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:40:56.933 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 17:40:56.934 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:40:56.935 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:40:56.935 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@39c4d2(byte[]), 2022-01-07 17:40:38.0(Timestamp), 118(String), 192.168.1.118(String), 1(Integer), null, 82(Integer)
2022-01-07 17:40:56.937 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:41:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:41:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:41:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:41:02.602 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:41:02.602 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 17:41:02.603 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 17:41:02.603 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:41:02.604 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 17:40:43.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 17:41:02.609 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:41:08.861 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:41:08.861 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:41:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:41:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:41:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:41:21.303 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:41:21.303 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:41:31.212 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:41:31.213 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 17:41:31.213 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 17:41:31.214 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:41:31.214 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 17:41:12.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 17:41:31.220 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:41:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:41:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:41:38.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:41:38.864 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:41:38.864 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:41:48.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:41:48.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:41:48.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:41:51.309 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:41:51.309 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:42:00.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:42:00.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:42:00.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:42:08.873 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:42:08.873 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:42:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:42:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:42:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:42:21.316 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:42:21.316 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:42:38.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:42:38.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:42:38.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:42:38.882 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:42:38.882 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:42:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:42:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:42:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:42:51.319 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:42:51.319 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:43:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:43:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:43:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:43:08.895 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:43:08.895 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:43:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:43:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:43:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:43:21.325 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:43:21.325 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:43:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:43:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:43:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:43:38.906 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:43:38.906 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:43:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:43:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:43:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:43:51.335 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:43:51.335 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:44:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:44:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:44:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:44:08.908 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:44:08.908 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:44:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:44:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:44:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:44:21.346 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:44:21.346 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:44:38.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:44:38.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:44:38.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:44:38.923 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:44:38.923 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:44:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:44:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:44:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:44:51.349 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:44:51.349 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:45:00.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:45:00.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:45:00.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:45:08.930 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:45:08.930 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:45:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:45:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:45:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:45:21.360 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:45:21.360 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:45:38.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:45:38.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:45:38.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:45:38.942 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:45:38.942 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:45:48.731 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:45:48.732 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:45:48.733 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:45:51.365 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:45:51.365 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:46:00.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:46:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:46:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:46:08.946 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:46:08.946 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:46:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:46:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:46:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:46:21.367 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:46:21.367 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:46:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:46:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:46:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:46:38.951 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:46:38.951 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:46:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:46:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:46:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:46:51.371 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:46:51.371 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:47:00.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:47:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:47:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:47:08.962 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:47:08.962 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:47:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:47:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:47:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:47:21.383 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:47:21.383 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:47:38.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:47:38.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:47:38.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:47:38.963 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:47:38.963 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:47:43.053 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:47:43.054 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 2c098c5d-0cd6-49f6-bda5-a6bbd0da6cc8: (connection evicted)
2022-01-07 17:47:43.054 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: 688cc7b6-f1bc-4962-ac08-2f8e614cf872: (connection evicted)
2022-01-07 17:47:43.054 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: 9080698c-a167-4165-8abc-d6478509c4ee: (connection evicted)
2022-01-07 17:47:43.054 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 5a9c1a56-0b65-4401-b9bf-e82b3740b4d7: (connection evicted)
2022-01-07 17:47:43.054 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 1be3e683-a284-49eb-9217-3bdf1655b21c: (connection evicted)
2022-01-07 17:47:43.054 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: 1b733f5a-0c70-49ea-81b7-e9b960ec18f5: (connection evicted)
2022-01-07 17:47:43.054 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: bc4e28ec-800f-4620-a834-ceb232e029bf: (connection evicted)
2022-01-07 17:47:43.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: 9ce4afae-a502-48f2-9108-87fc3f256549: (connection evicted)
2022-01-07 17:47:43.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: 7f26260a-ed22-49ec-b0c9-9a4e669b9557: (connection evicted)
2022-01-07 17:47:43.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: f2e8c15c-862d-42ae-9b2a-048b2312debf: (connection evicted)
2022-01-07 17:47:43.055 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 17:47:43.055 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:47:43.055 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: c1687cf7-cdb8-4605-b980-81bbc58cb614: (connection evicted)
2022-01-07 17:47:43.055 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: e5f33f3d-1ae4-4f5a-936a-46316bdae8ab: (connection evicted)
2022-01-07 17:47:43.056 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: 7040e10d-59e4-4a13-a678-39aad80e1c6e: (connection evicted)
2022-01-07 17:47:43.056 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: 80836ce2-cea3-4eb1-8ed5-10e05ac5dc5d: (connection evicted)
2022-01-07 17:47:43.056 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: e15f0fe4-451e-4d66-8060-592afdef263c: (connection evicted)
2022-01-07 17:47:43.056 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: 41b5d9e7-56a0-422a-af43-83775225a5a2: (connection evicted)
2022-01-07 17:47:43.056 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: d894ff76-27c8-4c80-8207-f34808659528: (connection evicted)
2022-01-07 17:47:43.056 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: ed684ef0-4cfd-4a33-b25b-a64c65bee504: (connection evicted)
2022-01-07 17:47:43.056 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: d1aeb18e-2fdd-4985-935c-b5dd12dba300: (connection evicted)
2022-01-07 17:47:43.056 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: bf98ceff-3e53-43d4-a8d4-70ba2db6bf67: (connection evicted)
2022-01-07 17:47:43.056 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 17:47:47.066 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 17:47:47.487 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 17:47:47.842 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@72572143
2022-01-07 17:47:47.941 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@72572143
2022-01-07 17:47:48.077 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{ [/]}: getEquipment()
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{ [/staffOperation]}: staffOperation()
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{GET [/equipment]}: equipment(Model)
	{ [/history]}: history(Model)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
2022-01-07 17:47:48.080 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 17:47:48.090 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 17:47:48.123 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 17:47:48.345 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 17:47:48.346 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:47:48.346 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:47:48.346 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:47:48.346 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:47:48.346 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:47:48.346 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:47:48.346 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:47:48.346 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:47:48.347 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:47:48.347 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:47:48.347 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:47:48.347 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:47:48.347 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:47:48.347 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:47:48.347 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:47:48.347 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:47:48.347 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:47:48.347 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 17:47:48.347 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:47:48.348 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:47:48.612 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 11709bba-48ee-43f2-b382-40167e897221
2022-01-07 17:47:48.617 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:47:48.629 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:47:48.639 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:47:48.643 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:47:48.644 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:47:48.645 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:47:48.715 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:47:48.751 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: eca3a1a8-0b22-49a4-87bd-c326ec4403ee
2022-01-07 17:47:48.771 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: b0072308-d630-4548-b625-b9dd846a90f2
2022-01-07 17:47:48.788 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 59dee963-6d7c-4919-bcce-2484d9838ed8
2022-01-07 17:47:48.806 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 16f50b74-9a51-4ed2-acbe-62f558624c2b
2022-01-07 17:47:48.826 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 3e64fecc-32b0-4008-ac56-bd6d8999f388
2022-01-07 17:47:48.843 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: c5458482-8e8c-419c-9350-64250fbda1e3
2022-01-07 17:47:48.860 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: aca53cd5-9bf4-4933-b1f4-d9bb713bd179
2022-01-07 17:47:48.872 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: e8473a89-6aca-4874-af28-911d1dbfb7b9
2022-01-07 17:47:48.886 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: a722384e-39e4-49c1-8aad-1b9168237c59
2022-01-07 17:47:48.886 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:48:00.008 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 17:48:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:48:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:48:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:48:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:48:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:48:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:48:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:48:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:48:00.009 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:48:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:48:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:48:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:48:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:48:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:48:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:48:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:48:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:48:00.010 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:48:00.011 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:48:00.027 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: ddae44b5-5eed-4a5e-bde8-a2045a57f6da
2022-01-07 17:48:00.027 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:48:00.028 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:48:00.028 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:48:00.133 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:48:00.147 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 8f54c83c-8a6b-42a2-8e66-54d4a6eadd9a
2022-01-07 17:48:00.159 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: 6cb54a96-6c2f-43d0-b87a-509e4d831e28
2022-01-07 17:48:00.169 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 347cb600-5d12-420c-a094-c4a72b3e9367
2022-01-07 17:48:00.180 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: cd64381c-04b2-4aff-9c31-92f56c92ea4e
2022-01-07 17:48:00.191 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: 71ebe795-33a1-4275-bcd1-f385d78cc087
2022-01-07 17:48:00.202 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 6dc56c6f-49a0-4fd5-bcdb-afc647b1d3d0
2022-01-07 17:48:00.213 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: 1fc20bd4-93af-472b-be83-a5b002b9e953
2022-01-07 17:48:00.225 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: a6b9d0c3-dd5e-4f98-b72b-5bbbc02b3593
2022-01-07 17:48:00.236 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: 519c6e9b-79d5-4294-8b08-4a828ce2c346
2022-01-07 17:48:00.236 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:48:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:48:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:48:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:48:18.720 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:48:18.720 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:48:30.145 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:48:30.145 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:48:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:48:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:48:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:48:47.014 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:48:47.014 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 11709bba-48ee-43f2-b382-40167e897221: (connection evicted)
2022-01-07 17:48:47.014 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: eca3a1a8-0b22-49a4-87bd-c326ec4403ee: (connection evicted)
2022-01-07 17:48:47.014 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: b0072308-d630-4548-b625-b9dd846a90f2: (connection evicted)
2022-01-07 17:48:47.014 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 59dee963-6d7c-4919-bcce-2484d9838ed8: (connection evicted)
2022-01-07 17:48:47.014 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 16f50b74-9a51-4ed2-acbe-62f558624c2b: (connection evicted)
2022-01-07 17:48:47.015 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: 3e64fecc-32b0-4008-ac56-bd6d8999f388: (connection evicted)
2022-01-07 17:48:47.015 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: c5458482-8e8c-419c-9350-64250fbda1e3: (connection evicted)
2022-01-07 17:48:47.015 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: aca53cd5-9bf4-4933-b1f4-d9bb713bd179: (connection evicted)
2022-01-07 17:48:47.015 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: e8473a89-6aca-4874-af28-911d1dbfb7b9: (connection evicted)
2022-01-07 17:48:47.015 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: a722384e-39e4-49c1-8aad-1b9168237c59: (connection evicted)
2022-01-07 17:48:47.015 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 17:48:47.015 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:48:47.015 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: ddae44b5-5eed-4a5e-bde8-a2045a57f6da: (connection evicted)
2022-01-07 17:48:47.016 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 8f54c83c-8a6b-42a2-8e66-54d4a6eadd9a: (connection evicted)
2022-01-07 17:48:47.016 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: 6cb54a96-6c2f-43d0-b87a-509e4d831e28: (connection evicted)
2022-01-07 17:48:47.016 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: 347cb600-5d12-420c-a094-c4a72b3e9367: (connection evicted)
2022-01-07 17:48:47.016 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: cd64381c-04b2-4aff-9c31-92f56c92ea4e: (connection evicted)
2022-01-07 17:48:47.016 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: 71ebe795-33a1-4275-bcd1-f385d78cc087: (connection evicted)
2022-01-07 17:48:47.017 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: 6dc56c6f-49a0-4fd5-bcdb-afc647b1d3d0: (connection evicted)
2022-01-07 17:48:47.017 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: 1fc20bd4-93af-472b-be83-a5b002b9e953: (connection evicted)
2022-01-07 17:48:47.017 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: a6b9d0c3-dd5e-4f98-b72b-5bbbc02b3593: (connection evicted)
2022-01-07 17:48:47.017 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: 519c6e9b-79d5-4294-8b08-4a828ce2c346: (connection evicted)
2022-01-07 17:48:47.017 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 17:48:48.858 [restartedMain] DEBUG com.face.server.ServerApplication - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 17:48:49.270 [restartedMain] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 17:48:49.621 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5509fd3f
2022-01-07 17:48:49.719 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@5509fd3f
2022-01-07 17:48:49.859 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{ [/]}: getEquipment()
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{GET [/equipment]}: equipment(Model)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{ [/history]}: history(Model)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{ [/staffOperation]}: staffOperation()
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
2022-01-07 17:48:49.862 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2022-01-07 17:48:49.873 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 17:48:49.907 [restartedMain] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 17:48:50.139 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 17:48:50.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:48:50.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:48:50.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:48:50.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:48:50.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:48:50.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:48:50.140 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:48:50.141 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:48:50.141 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:48:50.141 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:48:50.141 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:48:50.141 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:48:50.141 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:48:50.141 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:48:50.141 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:48:50.141 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:48:50.141 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:48:50.141 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:48:50.142 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:48:50.143 [restartedMain] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:48:50.417 [restartedMain] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 66048080-bbe4-4d8f-a860-40b307b23a4f
2022-01-07 17:48:50.422 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:48:50.435 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:48:50.446 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:48:50.450 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 17:48:50.451 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 17:48:50.452 [restartedMain] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 17:48:50.525 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:48:50.547 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: 1e7bd62a-3488-4505-a7ac-a53291d105b2
2022-01-07 17:48:50.568 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: 84a8e0c8-933e-4f28-951d-b99892829ea1
2022-01-07 17:48:50.580 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 7c94d176-d0a6-48c4-8e9f-829c9373a901
2022-01-07 17:48:50.591 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: 675a333b-2b23-493f-9f08-fe11ba25018a
2022-01-07 17:48:50.605 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 51ff86fa-465a-444d-a279-d10a8244a0ba
2022-01-07 17:48:50.622 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: beb48e31-8646-4284-bee1-7774c670d943
2022-01-07 17:48:50.638 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: c19d45f7-6a92-4967-b0ef-e2b7d60fc043
2022-01-07 17:48:50.649 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 749bfb6f-6617-4c26-8f2d-1b576883d684
2022-01-07 17:48:50.665 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 0c881934-e1ee-425b-bd27-917154cfc0e3
2022-01-07 17:48:50.665 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:49:00.014 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 17:49:00.015 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 17:49:00.016 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 17:49:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 17:49:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 17:49:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 17:49:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 17:49:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 17:49:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 17:49:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 17:49:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 17:49:00.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 17:49:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 17:49:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 17:49:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 17:49:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 17:49:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 17:49:00.018 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 17:49:00.032 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: 1591e5c6-f659-422b-8e5c-f0e29c305b71
2022-01-07 17:49:00.032 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:49:00.033 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:49:00.033 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:49:00.139 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 17:49:00.153 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: 2493d3dd-9750-4e40-966c-c43ac8ae2f99
2022-01-07 17:49:00.164 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: 6ce6adee-4d67-40d5-ab9c-56423f0bf20a
2022-01-07 17:49:00.174 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: 24d1dcb6-e7f6-491d-8981-24ecf33dfad6
2022-01-07 17:49:00.185 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: 84d665f3-f802-447c-b726-9a75bc747066
2022-01-07 17:49:00.195 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: cc626689-fead-456b-95b0-5b13c640f826
2022-01-07 17:49:00.205 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 6305e5f7-4af6-4d03-940a-554c12ec4c72
2022-01-07 17:49:00.215 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: acc0e58c-b65a-4c44-a853-ba5fd4f77307
2022-01-07 17:49:00.226 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 16beded8-6ee0-4ceb-854e-ab1ae5abc52e
2022-01-07 17:49:00.236 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: d474ff73-fc5e-4fb6-8199-ef42cdf8b4b2
2022-01-07 17:49:00.236 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:49:12.471 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2022-01-07 17:49:12.529 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine.CONFIG - Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@346a72ab
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@3dcae046
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1dd82e71
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2022-01-07 17:49:12.530 [http-nio-8080-exec-1] DEBUG org.thymeleaf.TemplateEngine - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2022-01-07 17:49:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:49:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:49:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:49:20.540 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:49:20.540 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:49:30.142 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:49:30.142 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:49:38.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:49:38.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:49:38.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:49:46.954 [http-nio-8080-exec-5] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==>  Preparing: select * from V_UserInfo where staffImage is not null;
2022-01-07 17:49:46.954 [http-nio-8080-exec-5] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==> Parameters: 
2022-01-07 17:49:47.281 [http-nio-8080-exec-5] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - <==      Total: 5058
2022-01-07 17:49:47.293 [http-nio-8080-exec-5] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==>  Preparing: select * from V_UserInfo where staffCardNumber in (212831,212605,212548,211866,212798,212697,212698,5010,5011,210273,212606,212590,212549,212775,212134,5021,212744,5025,212799,213046,212754,213412,998877,213331,213332,210060,212648,212755,213334,212649,213336,213414,212691,213351,210990,213437,212800,213438,213439,213352,213440,210429,211615,213354,213443,213444,212144,212762,752359,213355,213356,213446,213447,213449,213357,210272,212877,213450,212677,210428,213359,210810,210805,213452,213453,212678,213454,213049,212954,212834,212801,213122,213121,212745,212802,212534,212535,210356,919949,211736,212878,213174,212623,212867,213345,212675,210153,213347,222048,212760,213433,213434,213435,212955,213436,212622,210978,213350,212670,213415,210330,213417,210982,210374,213418,212620,212621,213047,212692,210155,213420,212299,213421,213422,210114,212672,213423,210346,210393,213425,210044,213342,212674,213426,210403,210977,210285,211835,213429,213430,210975,237319,224345,213249,212805,212607,212625,213175,212806,212592,210353,213176,212933,212298,210989,212956,210188,213177,213362,212807,210382,212879,213455,212558,213180,213364,213456,212934,212958,210243,213366,212627,212664,212837,212808,212838,212959,212763,213119,212589,212693,210307,232197,237868,236411,243886,230616,237820,233213,233209,233219,221663,330506,323654,236787,237802,237158,244838,331366,236151,237560,234105,12345,666666666,7777777,11223344,224359,234797,231493,232779,222550,221645,235776,231704,231703,237994,236579,237767,236598,237398,220048,236254,230462,234482,234492,234512,243853,233374,237030,221629,237955,236965,236461,236477,232862,222592,752027,211505,230427,331635,331706,200712,233437,233735,237073,237835,230979,834361,333810,220547,237704,233138,233133,237563,237768,236466,221759,237412,330428,200574,236208,236210,234699,233108,236137,237105,236260,237131,323601,222093,233713,237343,232441,211729,212741,210220,212536,212537,212628,213093,212747,212936,212629,212135,212748,213117,211590,210398,213457,213369,213370,213458,213371,210137,213373,213459,213460,243809,212839,210399,212743,212809,213094,210210,210811,212871,212961,213182,212560,213252,213253,213254,233632,213183,212810,213184,211611,212632,212938,212742,213391,213490,212964,213392,210384,213491,210283,212883,212846,213493,210387,221876,212634,212585,213187,213394,210328,213494,212941,212779,212683,213495,212684,213190,212945,213108,212868,210245,210299,213400,210056,211992,211700,211993,211994,213477,211995,211996,211997,213482,211998,211999,213191,212576,212886,212000,212966,212001,213153,212021,213173,213263,210433,211901,212023,212024,212025,211902,211903,210397,210410,211906,212026,210127,212027,211856,210321,211908,212030,210133,210215,211911,212610,212811,212967,212669,212814,212578,210324,213203,213204,210236,211858,212969,212636,213207,210204,213262,210960,212638,212970,212703,212704,211750,213208,212764,210386,212948,212890,212596,212580,212581,212891,213267,213268,213269,213270,213112,210296,213114,210103,210370,211913,212033,212034,210230,213303,212572,213209,211560,213210,212949,212950,210011,212706,212707,212972,212973,212974,212892,213124,213304,213305,213271,212709,213306,212597,212975,212582,213307,213133,210381,220540,212864,213273,213308,212750,213212,212586,210213,212849,212751,212611,212786,212612,213274,211875,212787,212817,212766,212977,212710,212893,213051,212599,213309,213042,213310,213043,212711,210131,212712,213129,213130,210331,213137,211828,213312,210146,213313,212894,212980,212981,213314,213052,212713,213276,213315,213278,212588,212506,213316,213053,212714,210993,213138,213330,213139,212896,213055,210183,210974,213056,210226,213319,210214,210426,213214,213142,210277,213321,213141,212820,210812,213143,211918,212615,213144,211919,213058,212901,213322,211920,211921,210292,213059,210261,220113,212716,212850,212768,212982,213061,212036,213062,213215,210435,211555,210194,212902,210202,210239,212983,213280,211593,210303,213065,210415,213149,213066,213067,212898,210983,212509,212985,212851,213281,212986,210308,212616,919945,210995,212790,212906,212514,213328,210988,212989,212617,212907,210343,213329,213218,213286,213287,213288,210287,212695,212618,212515,213290,213291,213073,210042,212603,212532,212604,213040,212660,211572,212646,212773,235378,222566,237477,236640,221739,222428,221730,222546,221627,221704,222207,848980,220482,222210,237501,221649,222434,211738,236707,221618,221650,222204,220079,221622,235899,236741,221607,222446,222163,221620,236328,236197,220089,236762,237511,237883,236067,221628,220541,236608,221606,221742,222441,221732,222413,221796,222556,237758,237461,236537,205556,234075,234011,224316,220534,221985,224315,236547,234010,236794,234036,234037,220528,224337,224363,224351,224304,236332,224368,220169,224335,224333,220567,220431,222354,221811,222352,224364,224365,224367,221897,212613,224377,220589,221623,222234,222407,236747,222240,221784,220098,222435,220096,244889,220458,222312,221617,206841,222439,221782,230569,200637,220594,222557,222342,221729,222202,220433,222214,222363,221619,220593,220440,222590,222332,235391,221639,237268,222007,222589,222176,231370,230796,234018,237784,235140,236764,345963,220411,224256,236381,234602,235135,230917,235066,234746,234743,236842,205338,234748,234394,231410,200573,236238,237414,235666,234606,831159,235136,236853,231293,237769,220609,235239,235138,232356,234635,235075,220526,222460,224758,206022,230623,234483,230467,230816,234395,234414,234411,234417,234515,234516,234508,234514,234510,234396,234540,234541,237072,224915,220595,221699,224535,206366,224423,220559,224495,210125,210409,224893,224982,220112,233994,222009,210207,210250,220032,213185,212842,212881,210065,212939,212681,212633,212844,210173,210031,213474,213475,834550,210414,212882,213388,213389,210217,213255,213256,213257,213132,213390,205178,234888,235938,243845,230046,221790,221972,233362,224467,222008,323760,332240,231707,236545,210171,233273,237458,334361,828035,815383,330650,220591,330422,751994,828167,818825,235342,234724,233590,235653,849216,232400,237364,234147,234048,236624,234578,237786,236484,236593,237382,220181,236246,230033,237750,231686,235925,234031,232967,230220,244905,345421,232557,232342,236926,828153,333943,329645,237950,242776,334018,236925,233957,231297,233223,349077,236933,236586,234081,234053,236318,235737,237163,237165,236212,847809,236317,243866,236798,237167,234403,232663,235307,807855,850249,237419,236932,237170,829704,235730,237164,807465,243875,232789,237569,807428,243878,231783,234116,232932,235662,349091,243868,243865,237471,807499,237166,807477,243867,243978,807547,237570,237459,807469,236532,230788,230783,243971,236922,243863,236879,236406,230697,237169,234113,235833,236852,236837,230282,230666,231502,230215,230493,332225,230107,331069,320534,237646,222136,244841,753657,761685,329366,332358,329564,833865,332373,244942,231778,222480,329779,221689,236463,331154,334141,336169,331348,237770,834205,331679,751926,752267,814519,233220,220511,237171,221668,345475,212546,237508,235772,237431,345509,329920,329714,234371,237937,330026,235704,329353,237135,336173,235102,333697,213083,210123,213082,761689,329682,236172,236121,236123,236155,236150,237655,236027,237633,861909,236265,237794,236348,236252,848942,236384,862855,210176,220459,236436,850610,220164,236427,236168,236506,220465,220466,236555,210281,235855,832355,235558,221904,235981,237358,237632,235503,237755,232350,232289,333508,232351,232883,232884,848957,232861,233112,220510,220512,221771,323517,221756,221838,235550,828970,236405,236215,233389,807420,237340,221638,234029,220546,233545,237615,339081,236099,234159,237228,236549,233390,340310,236069,243881,234581,232599,243864,237172,243977,220442,236344,236863,847766,233166,329529,236928,243862,848818,237934,243880,243976,237842,231669,236465,244939,237731,200700,235002,237017,237395,230557,850469,221789,232777,231697,330386,207671,235567,237692,211569,236467,222377,221644,236877,234136,850051,814841,237685,236937,234094,236934,237341,233979,237176,206098,830970,220401,224835,236628,243924,243931,220092,861072,753203,753199,243940,243941,222185,237790,220554,236599,203621,237864,213164,213165,212733,237463,329215,232907,322264,210987,237870,231515,220085,232348,220056,220074,232302,230729,237202,234832,330515,237049,235717,236298,236326,236474,850476,237771,329887,236596,220171,234857,330586,222541,233363,242669,237435,236380,242730,753202,237989,224888,752480,237833,243936,231362,752482,243995,212538,237302,237299,237300,237292,237297,237305,237640,237309,220525,330127,237336,330205,220560,220557,861056,237415,237406,237669,200667,200447,236203,222063,237678,348694,331181,242813,242899,236507,333905,834360,320547,237052,237764,237648,242815,331086,320548,753090,332154,235367,333925,827794,829457,236130,834234,236230,206268,233794,233987,235296,230020,220571,200408,222056,224626,224906,222494,224745,212848,211680,329399,236323,235038,330448,233797,332206,834340,222458,211583,242995,333706,237783,242746,322864,230603,230795,233864,237157,230573,237583,220621,237773,230624,333941,323863,753081,232337,232962,323639,834035,333510,206343,237278,230720,230723,230717,331076,220486,230335,230341,230238,237196,230263,230244,234556,231327,333981,237837,332207,333428,220615,236689,237935,236433,329238,222548,237162,211740,237832,236648,236327,333500,237204,237197,237206,237208,237368,237498,220531,237116,237216,237213,237117,237118,804786,828886,237174,752044,761693,220551,220550,220552,237322,220553,220569,237314,237757,237413,220402,235516,230848,234058,234061,234063,235753,233848,237512,233936,237460,236378,236921,234182,237878,205442,237388,234090,234091,237241,329424,230034,210119,224397,345419,211575,234382,234378,234381,220613,235838,203445,237452,220584,237481,237505,237506,237828,237667,237668,237852,222474,222469,222481,222454,222455,220590,222468,211582,222470,220404,222473,220627,233050,233231,237845,233875,224318,224308,234034,224430,230787,330645,211751,213000,211730,752983,331081,220586,333900,828233,332437,320509,329655,237602,232730,235430,235210,232753,222065,237931,231303,232765,232764,232763,237601,237327,236664,329262,764092,339432,220530,323606,348072,332356,237183,237184,237185,220565,237474,237291,237290,851516,236969,235781,235782,235816,235784,236884,237699,236097,213098,213193,212813,213260,212946,212782,212701,213099,210288,212968,211735,213109,213194,211731,213196,213197,213198,213199,236061,230744,230664,235508,237232,237556,237280,236397,235872,329196,232276,230740,235716,235175,850477,236779,236874,237436,234752,237597,234751,232665,232285,220607,237660,237831,211900,237386,332134,336853,236724,237200,752170,237286,237288,237316,237296,237315,237817,237962,237630,237674,237180,204221,847842,813969,829768,807699,813966,828815,203508,814610,807690,807682,813964,849041,847852,205540,848958,828962,237877,220523,763703,26462,814809,340418,850555,850342,349155,322551,230018,345440,244901,244906,230093,237325,753180,236828,211854,230094,230106,834194,230128,831149,220585,230941,233943,222140,230109,237649,232288,231311,752107,230105,220080,236612,244984,234782,210003,331715,331345,752010,221966,752061,236241,234812,235213,237785,212734,212735,210979,235111,211595,212927,212925,213087,211598,221646,222451,234161,221812,222576,322199,221680,237792,222073,221915,334144,213169,323608,211886,232002,237781,232291,206640,237588,230701,224958,237605,334263,236717,331174,330008,236472,236236,235709,244839,828489,235245,234491,234474,231843,230460,230497,231428,230370,230376,234535,230394,235370,230396,233927,237591,230382,230398,230295,237656,231495,230272,230273,231349,231497,233312,230333,230324,230292,230241,230306,333988,236739,231513,230887,231838,235740,237585,234423,231363,231562,220490,242795,243999,211821,236024,237582,233919,230165,242860,237616,230088,231490,230287,230548,230529,230126,753114,211737,236505,242947,211744,211842,242953,222084,330503,210420,230886,230915,242788,242956,210803,221780,212865,222417,220601,234539,236968,237787,212835,237951,236890,232780,237145,807546,237706,236435,236247,336722,237407,237580,237279,237355,220497,237576,850248,237666,220519,829137,237320,237281,807507,220561,237598,237663,237600,237453,330369,752564,233941,231890,330648,237636,237635,237111,237112,237113,237155,237245,237503,237504,220504,237795,237496,237078,237081,237480,237080,237082,345848,220605,237240,237728,237087,237088,237095,237574,237092,237680,237086,752415,345986,237500,236986,237269,237270,237839,237265,237257,237276,237264,237103,237104,235428,233938,236847,204361,237426,235932,235903,236036,827649,210126,237849,236836,236032,236649,237371,832764,236018,833822,235929,861135,236249,237972,237995,233484,233984,233814,237848,235860,237432,220020,237308,236284,212643,212855,212856,212769,212530,213247,212297,211556,212952,212739,213409,213091,213092,212128,212129,212830,212531,323732,237856,237865,237662,237499,237670,237409,237695,234472,236026,237399,230582,236166,235450,235864,237562,235780,237904,235722,236098,752046,751966,234140,236240,236592,236564,236305,829015,828812,237651,834236,349262,235018,828999,233292,234796,236789,231588,231460,230239,230718,235334,236558,234076,230047,222560,236456,235657,244895,221713,231738,234813,242810,232182,220587,222586,234590,231739,237586,220515,205044,236366,233355,234496,231345,234559,234457,236892,236347,234385,235298,234375,236581,828986,233304,230013,235109,220410,230197,236225,323575,329740,237992,236376,237584,222569,212136,220548,231378,222467,212659,212657,212658,235819,231709,200305,222464,237821,233089,334295,220088,212109,752335,235902,210081,210082,210083,210084,210085,210087,210310,210090,210091,210098,235880,235877,236580,236620,237321,234146,210113,236574,220616,236075,237846,235910,236010,236584,210110,814472,237429,224341,224373,329626,231381,230605,235826,237696,236976,329667,224624,235901,232790,237625,235096,237016,231986,234778,236953,234042,235304,323759,333786,236733,329526,331150,236950,210984,213151,212718,212040,211869,210274,213227,210332,212991,212997,212041,211898,210237,213294,212908,212042,213221,212644,211931,333766,220624,222364,242723,236948,242711,220072,220545,323752,234131,237967,231377,237102,222568,232589,234052,234151,236626,234725,231305,231713,237226,237851,236322,242959,237813,237360,242960,242961,242962,761694,349204,329281,236688,244913,242641,242644,242617,753187,237575,233812,243808,242783,244863,244865,204683,761606,333931,232859,830327,236991,236803,752969,331678,237961,833771,230490,329841,234739,232980,237715,236196,237954,237953,237956,237957,753096,237965,237966,237964,235518,235656,234770,242728,231477,230533,230347,230227,332489,332416,211855,244967,230070,230682,333520,333518,333427,333600,333509,211823,244917,237609,333525,235425,220444,237377,236848,236708,230043,230022,210419,231561,236217,230857,322313,221682,232534,347961,330798,235806,235931,235985,237274,236858,236605,235788,235787,235789,235794,235983,235802,235803,235805,237741,235811,235813,235815,236087,849619,236998,231945,234386,236330,211698,236700,211559,232930,752285,828482,233442,233443,232141,233473,211549,221847,230505,237791,345379,235537,233853,210181,211526,211525,211522,211521,210178,233485,210009,211695,211513,233905,230703,211512,236500,231299,211619,211510,236910,210385,210014,234494,234521,234488,234526,234430,234431,234465,234429,234413,232131,234548,234447,234527,234418,237462,230413,237478,236893,234791,221798,243804,213150,210148,210379,213324,212903,211925,211926,211927,213326,212038,213072,210262,211929,213285,210352,212510,212513,210039,213479,212002,213480,210053,212003,211608,213484,210373,212006,213485,210268,210279,210302,212010,213487,213488,210030,210801,211759,212013,212014,211662,212015,212016,212017,210358,212019,212020,232260,9988776,213461,213374,210416,213462,210301,210430,211599,210258,213464,834220,213378,213466,210326,213379,213468,213380,213469,213381,210162,211587,213470,213385,213386,213471,213472,212960,213387,224454,234595,236468,210247,210192,213230,212601,212105,213231,213237,212047,212520,213076,211935,212910,210402,212050,213077,213232,212720,212051,212052,210417,213300,213233,211936,212994,212721,212130,210344,210244,210980,212054,212996,212687,212655,212055,210122,210338,212912,232294,233222,237433,236221,236306,200765,235019,237659,815381,234863,234834,236394,243897,224266,220625,211622,329297,234843,236533,236535,224322,234538,237730,237190,234762,242752,206865,851182,237036,828180,221684,222404,235770,237776,237766,234787,235597,235588,237422,237420,236194,211933,211932,212048,213295,212688,210232,212043,212653,210362,211603,213224,213226,213266,213223,211934,212103,213228,210059,212519,212045,213222,212823,212909,213171,211879,212516,213296,236243,222035,235410,222133,234858,233614,329394,230127,233889,231285,753660,237401,234372,237441,236534,833762,233371,231329,331346,814533,220533,221635,234519,234520,234446,234493,234547,234432,234524,234466,234437,244849,234438,234522,235941,234489,234523,234544,235850,234440,234543,234419,234525,243830,237143,237487,849949,236136,236931,243891,236543,234400,234407,203778,237137,233624,331350,200701,242714,222197,233783,237774,234786,814725,235083,237843,235844,751956,234033,751960,233380,220481,334131,323645,211756,210305,213044,220102,234074,233800,221681,861850,332440,220532,212793,233676,221654,212106,212857,236556,233056,221676,331676,329810,237038,212861,213003,236276,234014,234015,330682,323744,242639,213154,212913,236510,236886,237743,212860,212858,212859,828098,243921,222178,234099,210350,233272,849315,232357,833959,235439,230756,222000,221675,237762,236802,234511,235142,234103,230747,243838,237091,232387,234845,234844,220426,222371,233015,235839,233633,222226,204473,833898,237658,224370,234019,234138,237233,224398,236470,233375,221693,234567,233061,221683,224928,221685,231975,221643,224267,213116,222190,213005,221783,236734,236355,329498,234727,234768,331607,234397,234398,237392,237608,329781,233090,212645,232052,236773,233287,236473,222476,237464,753091,200699,233218,204288,222327,231642,234773,234892,237698,234110,235758,234108,234112,318478,334198,220418,210276,213497,213498,212584,213396,213259,212942,212573,213499,210034,211989,213188,212574,212885,212943,212944,212666,212667,213096,210248,212668,230373,231831,231835,230368,230424,329707,332246,221763,221696,230506,230472,233901,205526,236512,237963,232642,236625,236594,233955,220073,243872,236475,814584,224330,850765,235729,231402,230725,230453,237175,230299,230297,237115,230454,232822,231833,230402,232247,230271,230274,231572,230385,230276,230277,230450,230431,230625,244908,234451,230432,234533,234530,232484,230425,235800,222583,834317,320525,320599,237065,233467,230564,231418,230489,236845,230491,231403,237592,235320,230381,236106,237195,233119,231917,222047,333790,330013,236403,829003,237253,224319,222175,237138,233091,237416,242880,232626,233712,220450,221695,221717,323731,232352,235092,235962,236636,235947,235950,235952,235601,237623,235604,237396,235606,235610,235608,235609,235611,235612,235616,235618,235663,235622,235623,235624,235625,235626,235633,235634,235828,235636,235637,235638,235639,235890,235640,235641,235966,332496,206575,333436,332328,211899,244937,243813,237671,860470,231436,753661,235866,236158,235960,232071,236444,236479,235553,231529,237342,231700,224325,224328,235719,234021,222386,336829,236429,237993,211764,237689,235106,236462,220577,221712,237726,235821,236207,323578,220484,224932,236450,212078,212077,210157,212073,212076,212082,210229,210269,212112,210147,212110,211578,213246,213017,213019,210322,213021,213022,213023,210991,211827,212602,235156,232482,212529,233096,236483,234779,235014,231796,236641,213411,235728,210317,210115,221706,237379,234833,237788,221710,329229,323479,221873,323817,211541,211542,211528,210335,210197,210436,211885,210149,210345,211539,232081,200427,329325,231818,231814,210208,752570,752722,333636,334325,236520,230636,333512,230782,220006,230638,230639,230735,220097,230633,230073,220034,751964,220445,236546,231678,237929,231698,222221,222162,235667,236248,236952,235797,236216,237948,236244,236792,220518,220626,833960,242989,220583,237294,232877,203382,231809,234889,203766,233333,237042,221661,236336,233111,237801,234481,237039,206716,336315,235176,753031,232560,232556,232554,237179,232828,232487,231343,235997,236982,336384,235706,224255,235875,235769,230647,221648,212523,833828,221757,234794,237777,221761,233063,233918,213008,210422,210010,213009,210339,233068,213244,242917,212656,224741,232349,220472,206185,232423,329679,205170,230132,224331,761670,233160,222068,234380,235189,236277,231731,237617,212547,752846,231342,233310,221947,234408,234529,236459,236903,213157,210112,212915,212916,212917,210175,210159,212919,212918,210369,334062,213406,213404,213407,213403,231417,234495,235843,231553,234449,234517,234502,234450,236753,230365,235374,230380,232818,230372,236984,230378,230374,230375,230423,230388,235714,235372,236870,234528,233978,233926,230296,230327,237906,230325,230323,230328,231836,230307,230234,234455,237467,231468,230531,231889,234712,336879,345945,329475,235301,236282,236297,220028,235756,833718,329702,210016,233162,231735,234057,235164,234553,230521,235948,234558,231467,234549,234557,230528,830458,235048,323848,235145,233094,207102,235147,235146,231380,334226,237958,232325,237402,237356,232328,232304,232298,236977,232362,232329,232314,237357,232306,232363,232308,232310,232312,231558,231566,231567,231574,231585,231590,232202,237186,232206,232212,232213,231594,231598,231599,232201,232221,232223,237642,753194,220053,220057,220055,232369,237107,232934,237797,232262,220617,331104,232869,237425,232871,237697,232372,232382,235724,232380,232381,236940,235774,237564,751095,235143,244803,210136,236503,235845,233973,330450,752232,212794,829060,235521,220574,323583,323798,237796,334014,333523,333604,230919,210002,834203,222549,330919,834228,237709,230815,230814,850876,752256,232341,237333,237754,232257,235744,237442,235748,232694,232675,237903,236960,752584,346142,204324,200787,236514,828756,242760,222158,333882,211606,232682,345394,242840,237819,242839,820676,244813,242888,242648,236302,236315,236325,236476,230736,204768,220407,331598,237682,334342,231857,237818,236365,221980,232880,231733,232978,847853,211965,211966,235158,210391,236280,211617,210140,210225,211956,211676,211967,211971,211976,211962,211959,211961,210116,210013,211954,210363,210196,220470,211892,236732,235891,220581,220471,220420,220469,834276,234566,230250,237947,234470,230466,236659,232566,231988,232093,244943,221885,233849,236895,244869,221753,232136,220025,320370,828174,833747,232898,232133,815086,237720,237374,236482,237146,231977,232129,329261,244974,231952,236829,234460,231563,234442,234931,231832,234428,230443,231480,230243,230445,237404,234453,231334,236065,233101,234552,220415,220052,236469,236234,236303,230826,237026,236300,236455,236209,237015,234912,320518,234789,323611,329542,211745,231611,330461,828491,332315,232041,205568,235727,206158,236882,233372,236096,235069,203922,237686,212816,232417,230805,237191,233093,231647,235037,234730,234733,231501,230298,230291,237124,231547,231540,230252,230248,237621,235487,230399,244907,237199,230435,230444,236678,224931,231475,230315,230313,230308,230549,231462,231457,231829,234554,231456,230486,230482,230280,213041,233100,235837,330593,233519,231680,231450,235323,230565,231401,230802,230337,235371,230561,230511,230496,236552,237840,753088,232340,231360,237428,236630,236647,242789,235995,235863,236972,237809,232927,237765,236062,230981,231364,232399,236288,828176,232875,207657,220051,237753,235068,236174,221929,243810,332360,333447,232837,348450,211864,331062,235522,333519,236613,230965,232292,230532,210186,332294,333777,320520,323493,236979,231536,336171,849540,235100,235104,329335,221954,203641,329751,345447,236222,329189,329286,320619,233635,211558,211501,235793,231451,333751,331033,231521,230330,235316,230350,242842,230415,230416,232225,230305,230310,230321,230383,230219,237912,237468,230224,230536,752581,232983,829004,236214,236220,236228,236226,242932,236551,232888,230209,236304,221813,242951,213239,230050,221660,220485,221658,329510,334237,230716,200502,236519,233087,233639,236410,237857,235842,237385,237763,236567,234774,236281,235742,211829,329857,213156,212920,211830,213243,213245,213241,213242,237936,237235,234132,230679,236088,220114,236413,211570,242685,200549,233983,206645,234806,212732,211592,210389,211725,220488,751991,752441,210312,212862,212727,212724,212731,212725,212061,210227,211943,211940,212071,212062,211755,211942,212060,210334,212059,210253,210118,212066,212067,210209,211941,210396,212058,212072,211844,213014,211616,210004,210265,210392,213013,213162,213155,237875,210309,212064,210376,221686,210166,212525,212526,210368,207038,329466,323792,323617,224268,212738,234776,242662,330585,334282,330678,235090,237988,230958,233768,232699,834327,235973,236818,236308,231681,237800,237742,233097,850470,332432,320527,330016,237676,235408,233928,237923,237888,236971,236973,236975,236974,334168,834192,237108,237069,237339,753192,237273,237271,237862,237217,236989,237011,236990,237317,207115,237013,237068,220489,210927,210928,210929,210930,210931,210932,210297,210934,210935,210936,210937,210940,210941,210942,210943,210945,210954,210955,210956,210958,236993,237021,237064,237066,220517,237067,237867,243826,243827,237973,220566,236460,237150,230813,237863,242718,236114,236793,236268,235984,828191,331112,329254,244882,230201,231489,242868,220611,751943,751944,221785,329258,323857,236255,323620,236918,237444,237485,233811,233461,236321,220050,242812,237869,237109,232377,236964,851743,827751,231358,231357,230818,220618,220010,236319,236292,236224,231388,237421,847709,235178,220580,230925,232847,230948,230943,329413,237330,231314,231320,753111,232343,221711,212722,222131,233397,224309,320623,320510,344949,329288,320511,333789,329193,203374,236377,237446,237349,236320,323542,849585,829002,235865,235647,236438,230115,334231,236550,205386,220539,232919,233942,236704,236310,236293,233274,230005,204500,237227,230060,235061,751923,220422,236485,220568,237311,237793,232653,236681,236682,236680,236683,236896,827673,236963,220575,236572,236573,236576,220478,236699,236751,236712,236713,236701,237063,236750,236748,236857,850457,237614,232231,232868,206548,236657,220477,333539,332426,333613,236888,236692,236799,236796,236809,236703,237023,236800,220506,236916,236832,237677,237025,237376,237054,235118,231842,231421,234471,237482,235614,236725,237807,235086,221634,234977,236206,235715,204910,224360,237987,237400,236205,237077,233366,233370,220090,200379,235739,236999,237000,237654,237611,237009,237004,237293,237260,237259,237272,237295,236795,236830,220564,220514,237053,207661,237486,236951,237057,236949,237149,237058,332281,237759,236945,237263,230689,753108,242806,333926,242830,233906,761611,233832,232941,333483,235904,233818,233817,233819,232989,333994,233802,333456,237657,335898,236905,333530,832044,851517,235996,235924,233803,332422,236651,235527,220189,237417,242772,242774,203767,242775,232801,233280,233281,234631,221691,237644,235335,234518,230483,222341,230459,220623,752490,235062,237132,234742,234719,231849,230978,211930,331294,233949,237641,235457,333517,233965,220435,235771,332330,220436,237027,236784,236785,236721,200101,235027,236431,220419,234389,236309,206006,237085,204581,244843,235851,220047,230122,232138,222155,833635,323705,233877,237732,236894,832849,831694,828150,210600,210876,236615,236913,237337,232905,850830,236585,235926,232947,236084,236695,832850,237684,236074,210395,210238,210340,210836,210838,210355,210840,828173,210842,210138,210844,210378,210251,210847,210816,210817,210818,210819,210848,210849,210850,210827,210851,210828,210877,210878,210347,210879,210946,210431,210947,210948,210882,210825,210357,210884,210885,210371,210888,210182,210890,210891,210427,210095,210894,210895,210897,210898,210908,210914,210912,210924,210813,210364,210815,232952,329804,237798,232391,232392,233807,232917,235835,232816,232819,236631,237652,210961,210963,210964,210965,210821,210822,210823,210824,210826,210966,210969,210970,210971,210852,210206,210854,210855,210856,210311,210858,210375,210404,210861,210412,210367,210421,210865,210314,210869,210151,210871,210203,210333,210284,210900,210973,210104,210904,210905,210906,210909,210910,210911,210913,210915,210916,210212,210919,210920,210380,210922,210926,220060,752159,333573,237218,232959,334169,236927,236839,236652,331088,340010,221945,232570,221913,236311,236312,236313,236314,230452,230434,230290,230390,230389,230414,231487,230392,230391,237147,230417,237841,232432,232431,210047,232464,232463,232425,237971,236499,237384,237876,231406,230504,237650,230468,230475,231445,237366,230320,232659,231504,232486,236008,203069,243966,231454,231471,230534,230525,232454,237896,237959,242879,330875,232243,230319,236509,336820,236115,850921,222542,236716,236432,236480,236481,235368,235361,235363,236566,230456,230500,230455,230476,230281,230404,230255,235566,235580,235571,236147,220161,330854,237613,235874,235873,235870,236041,236040,761610,832852,236570,236851,236843,237410,336302,236900,320550,220111,236416,236486,210260,237952,220409,236273,236274,237047,236538,236685,827650,236340,200713,236362,236343,752000,236352,220599,236335,236364,236184,236185,236578,318924,232117,236907,236745,235765,237701,237879,230133,230653,230791,237424,237799,230746,230742,230743,230799,230102,333423,333526,230150,236738,235762,230202,230205,230206,230207,230217,230225,230266,230267,230268,230269,230278,230286,230288,230300,233850,230352,230355,230356,230357,230403,230406,236805,235725,230410,230411,230420,230421,230433,230442,230775,230465,230477,237423,230487,237141,329211,237250,230502,230503,230539,230540,230544,233876,235055,243806,236513,236515,237451,220455,236709,236727,236746,220521,236361,236774,332455,333979,236826,220439,236777,236710,236711,236673,236674,236675,236676,236677,236694,849325,236561,220454,211597,850417,222594,235945,236449,232848,234069,220061,236786,200316,200708,231688,235119,235049,221647,330393,323706,213166,222165,222575,213090,213089,211734,212085,211727,212090,212088,212089,212093,212086,210294,210432,212095,212097,210037,210286,212118,234575,336329,211980,210383,211982,210315,211983,211973,210394,211988,211984,210360,211972,211985,212138,234583,212125,212127,210413,210293,210134,230301,231455,212829,236091,235285,752188,232569,200462,204185,237567,235825,235823,232678,235202,237847,235288,237653,761699,236838,200557,200565,237873,237872,237871,237880,237882,237881,807685,751038,847841,849539,830813,832357,850872,804789,827675,340184,237902,861362,850065,333620,828816,813967,815357,807701,847851,807686,807689,237938,237939,237940,237941,203936,237942,237907,237943,237910,237944,237911,237945,237915,237914,237908,237909,237926,237928,237927,200247,237946,237975,237976,319789,233052,236068,236291,236023,237129,210156,236080,236078,210165,236671,236607,237721,232248,230258,230256,230259,206233,236033,828497,236744,236875,237751,237727,235919,235920,237683,210169,220453,236834,236154,237827,235965,237930,236898,235418,236066,235906,237378,235474,237051,235514,235512,236619,236618,236602,237489,236883,235759,235411,336193,336192,237507,345398,237231,236864,236865,236866,236867,237101,231766,231770,233378,210029,213037,213035,210167,213033,213032,212929,210316,212928,210341,213028,210049,210423,212737,233009,233066,752934,332476,220457,834314,236324,236242,236464,210144,222392,211503,236034,242866,237860,236396,230672,234412,210390,210327,236111,211665,211714,210211,211673,211674,211675,211672,210185,210400,211635,211670,211634,210349,211628,211629,211630,211631,211632,211633,211644,211643,211642,211641,211640,211639,211638,211637,211636,236152,211667,211668,210313,211671,220468,237700,236388,333932,210233,211683,211684,211685,211687,211688,211689,211690,329565,828534,753175,211724,752316,220610,236846,205581,753237,243847,232836,752548,205743,242614,242889,211715,211717,211718,211860,236346,237969,237672,237708,220619,237181,220101,210092,210377,210094,210097,815388,210069,210079,234459,236025,234435,230180,242738,242745,242799,222193,220016,752456,828457,333965,200757,237203,236917,336189,236862,237334,237335,236889,236807,236808,236810,236813,236812,237075,237324,323845,329426,330088,320555,236878,236769,207109,236923,236765,236941,236860,236861,237024,236082,236635,236667,236634,320238,323610,329684,222078,834416,237789,332451,235578,320526,242884,222079,232811,242882,237243,235375,235376,235377,211711,211709,211645,211646,211647,211648,210319,211651,211652,211677,211663,211653,210336,210205,210372,230790,237874,230812,222141,230671,230101,230599,232397,211834,333511,230650,232856,236939,230079,329591,236980,236981,237514,834046,230955,230131,220622,203699,230032,200754,848981,336207,236086,236891,231312,330018,211839,211841,333923,329206,232436,232437,235859,232089,200625,232114,232060,211793,211816,211770,211769,211768,211767,210058,211782,210425,210255,211774,211772,210189,753186,244886,244885,231347,205186,211783,211784,210323,210132,210405,211790,211792,210342,210424,211797,211798,210304,211800,211801,211802,210242,211804,210804,211806,210271,243980,243942,211893,211894,210252,237411,237772,222130,211809,211810,211811,211812,211813,211814,211815,222169,752605,244897,333424,211840,828585,220620,851742,237861,236816,237289,243807,242952,220434,220423,237932,236970,211890,230963,222137,237326,220177,237307,230014,220602,333522,231341,210012,211838,210407,230143,237242,237761,237681,345400,237472,807480,232051,235431,237159,329232,236392,232142,237687,329336,761708,331116,761683,236299,236294,237717,807448,233824,832551,232939,233820,233813,233833,237887,237725,235982,237239,237465,232954,814779,237780,220447,237901,237661,236105,236101,236093,237710,237645,237775,237778,237859,236060,236559,236138,236073,236148,236283,236501,210172,235928,236496,237454,237018,850233,235936,235533,235498,210040,235565,210102,237593,235564,235572,235944,235444,332325,235423,235482,235481,236049,235510,235551,235511,237694,237693,236173,236428,220582,329304,329307,837713,237479,237509,210348,345943,237664,237824,861086,237502,237533,237534,237537,237538,237539,237540,237541,237543,237521,237522,237523,237550,237551,237552,237553,237554,237524,237517,237525,237557,237527,237528,237516,237529,237530,237518,237520,237515,237548,237549,237558,237559,807417,348264,849946,849942,832084,311203,830968,232987,233804,827659,827660,827661,827662,827760,220475,232973,827694,827693,827692,827658,220180,236665,236650,235486,220573,235455,210007,235927,237034,235406,332355,332331,334054,334051,332329,334043,237719,235908,236736,205928,210028,220086,237573,237594,237510,237823,237595,220579,220578,237578,237606,237561,323851,237590,237724,237638,204161,237822,237712,237921,237977,237637,237733,237749,237970,220606,237850,237916,237917,237688,237804,237803,237812,237805,237806,237745,232398,235746,235964,237445,236849,237974,336730,237702,237703,237748,332337,334052,332335,827712,237836,237858,237891,329643,332288,345424,332016,237747,237746,237892,237739,237740,237738,237736,237737,237734,237735,220608,237918,818827,237886,237889,237890,237814,237834,237815,204735,237811,237894,237895,237897,237898,237899,237893,237825,237826,752837,780442,780451,811088,811058,333861,829246,237866,203920,752250,220596,237919,237675,237925,237924,752021,237808,237810,237884,237885,237838,237949,220612,237855,237853,332396,334324,828140,237960,237905,210520,329197,828661,829766,332385,329680) and staffImage is not null;
2022-01-07 17:49:47.295 [http-nio-8080-exec-5] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==> Parameters: 
2022-01-07 17:49:48.143 [http-nio-8080-exec-5] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - <==      Total: 5058
2022-01-07 17:49:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:49:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:49:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:49:50.553 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:49:50.553 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:50:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:50:00.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:50:00.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:50:00.152 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:50:00.152 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:50:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:50:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:50:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:50:20.556 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:50:20.556 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:50:30.166 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:50:30.166 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:50:38.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:50:38.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:50:38.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:50:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:50:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:50:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:50:50.569 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:50:50.569 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:51:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:51:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:51:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:51:00.181 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:51:00.181 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:51:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:51:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:51:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:51:20.581 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:51:20.581 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:51:30.193 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:51:30.193 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:51:38.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:51:38.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:51:38.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:51:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:51:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:51:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:51:50.593 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:51:50.593 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:52:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:52:00.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:52:00.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:52:00.197 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:52:00.197 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:52:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:52:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:52:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:52:20.599 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:52:20.599 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:52:30.212 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:52:30.212 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:52:38.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:52:38.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:52:38.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:52:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:52:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:52:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:52:50.604 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:52:50.604 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:53:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:53:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:53:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:53:00.218 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:53:00.218 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:53:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:53:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:53:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:53:20.613 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:53:20.613 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:53:30.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:53:30.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:53:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:53:30.224 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:53:30.224 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:53:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:53:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:53:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:53:50.620 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:53:50.620 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:54:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:54:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:54:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:54:00.235 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:54:00.235 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:54:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:54:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:54:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:54:20.622 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:54:20.622 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:54:30.236 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:54:30.236 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:54:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:54:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:54:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:54:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:54:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:54:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:54:50.636 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:54:50.636 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:55:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:55:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:55:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:55:00.239 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:55:00.239 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:55:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:55:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:55:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:55:20.639 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:55:20.639 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:55:30.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:55:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:55:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:55:30.251 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:55:30.251 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:55:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:55:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:55:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:55:50.646 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:55:50.646 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:56:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:56:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:56:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:56:00.251 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:56:00.251 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:56:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:56:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:56:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:56:16.195 [http-nio-8080-exec-2] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==>  Preparing: select * from V_UserInfo where staffImage is not null;
2022-01-07 17:56:16.195 [http-nio-8080-exec-2] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==> Parameters: 
2022-01-07 17:56:16.476 [http-nio-8080-exec-2] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - <==      Total: 5058
2022-01-07 17:56:16.503 [http-nio-8080-exec-2] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==>  Preparing: select * from V_UserInfo where staffCardNumber in (237319,224345,232197,237868,236411,243886,230616,237820,233213,233209,233219,221663,330506,323654,236787,237802,237158,244838,331366,236151,237560,234105,12345,666666666,7777777,11223344,224359,234797,231493,232779,222550,221645,235776,231704,231703,237994,236579,237767,236598,237398,220048,236254,230462,234482,234492,234512,243853,233374,237030,221629,236461,236477,232862,222592,752027,211505,230427,331635,331706,200712,233437,233735,237073,237835,230979,834361,333810,220547,237704,233138,233133,237563,237768,236466,221759,237412,330428,200574,236208,236210,237105,236260,237131,323601,233713,237343,232441,243809,212572,235378,222566,237477,236640,221739,222428,221730,222546,221627,221704,222207,848980,220482,222210,237501,221649,222434,211738,236707,221618,221650,222204,220079,221622,235899,236741,221607,222446,222163,221620,236328,236197,220089,236762,237511,237883,236067,221628,220541,236608,221606,221742,222441,221732,222413,221796,222556,237758,237461,236537,205556,234075,234011,224316,220534,221985,224315,236547,234010,236794,234036,234037,220528,224337,224363,224351,224304,236332,224368,220169,224335,224333,220567,220431,222354,221811,222352,224364,224365,224367,221897,212613,224377,220589,221623,222234,222407,236747,222240,221784,220098,222435,220096,244889,220458,222312,221617,206841,222439,221782,230569,200637,220594,222557,222342,221729,222202,220433,222214,222363,221619,220593,220440,222590,222332,235391,221639,237268,222007,222589,222176,231370,230796,234018,237784,235140,236764,345963,220411,224256,236381,234602,235135,230917,235066,234746,234743,236842,205338,234748,234394,231410,200573,236238,237414,235666,234606,831159,235136,236853,231293,237769,220609,235239,235138,232356,234635,235075,220526,222460,224758,206022,230623,234483,230467,230816,234395,234414,234411,234417,234515,234516,234508,234514,234510,234396,234540,234541,237072,224915,220595,221699,224535,206366,224423,220559,224495,210125,210409,224893,224982,220112,233994,222009,210207,210250,220032,205178,234888,235938,243845,230046,221790,221972,233362,224467,222008,323760,332240,231707,236545,210171,233273,237458,334361,828035,815383,330650,220591,330422,751994,828167,818825,235342,234724,233590,235653,849216,232400,237364,234147,234048,236624,234578,237786,236484,236593,237382,220181,236246,230033,237750,231686,235925,234031,232967,230220,244905,345421,232557,232342,236926,828153,333943,329645,237950,242776,334018,236925,233957,231297,233223,349077,236933,236586,234081,234053,236318,235737,237163,237165,236212,847809,236317,243866,236798,237167,234403,232663,235307,807855,850249,237419,236932,237170,829704,235730,237164,807465,243875,232789,237569,807428,243878,231783,234116,232932,235662,349091,243868,243865,237471,807499,237166,807477,243867,243978,807547,237570,237459,807469,236532,230788,230783,243971,236922,243863,236879,236406,230697,237169,234113,235833,236852,236837,230282,230666,231502,230215,230493,332225,230107,331069,320534,237646,222136,244841,753657,761685,329366,332358,329564,833865,332373,244942,231778,222480,329779,221689,236463,331154,334141,336169,331348,237770,834205,331679,751926,752267,814519,233220,220511,237171,221668,345475,212546,237508,235772,237431,345509,329920,329714,234371,237937,330026,235704,329353,237135,336173,235102,333697,213083,210123,213082,761689,329682,236172,236121,236123,236155,236150,237655,236027,237633,861909,236265,237794,236348,236252,848942,236384,862855,210176,220459,236436,850610,220164,236427,236168,236506,220465,220466,236555,210281,235855,832355,235558,221904,235981,237358,237632,235503,237755,232350,232289,333508,232351,232883,232884,848957,221838,235550,828970,236405,236215,233389,807420,237340,221638,234029,220546,233545,237615,339081,236099,234159,237228,236549,233390,340310,236069,243881,234581,232599,243864,237172,243977,220442,236344,236863,847766,233166,329529,236928,243862,848818,237934,243880,243976,237842,231669,236465,244939,237731,200700,235002,237017,237395,230557,850469,221789,232777,231697,330386,207671,235567,237692,211569,236467,222377,221644,236877,234136,850051,814841,237685,236937,234094,236934,237341,233979,237176,206098,830970,220401,224835,236628,243924,243931,220092,861072,753203,753199,243940,243941,222185,237790,220554,236599,203621,237864,213164,213165,212733,237463,329215,232907,322264,210987,237870,231515,220085,232348,220056,220074,232302,230729,237202,234832,330515,237049,235717,236298,236326,236474,850476,237771,329887,236596,220171,234857,330586,222541,233363,242669,237435,236380,242730,753202,237989,224888,752480,237833,243936,231362,752482,243995,237302,237299,237300,237292,237297,237305,237640,237309,220525,330127,237336,330205,220560,220557,861056,237415,237406,237669,200667,200447,236203,222063,237678,348694,331181,242813,242899,236507,333905,834360,320547,237052,237764,237648,242815,331086,320548,753090,332154,235367,333925,827794,829457,236130,834234,236230,206268,233794,233987,235296,230020,220571,200408,222056,224626,224906,222494,224745,212848,211680,329399,236323,235038,330448,233797,332206,834340,222458,211583,242995,333706,237783,242746,322864,230603,230795,233864,237157,230573,237583,220621,237773,230624,333941,323863,753081,232337,232962,323639,834035,333510,206343,237278,230720,230723,230717,331076,220486,230335,230341,230238,237196,230263,230244,234556,231327,333981,237837,332207,333428,220615,236689,237935,236433,329238,222548,237162,211740,237832,236648,236327,333500,237204,237197,237206,237208,237368,237498,220531,237116,237216,237213,237117,237118,804786,828886,237174,752044,761693,220551,220550,220552,237322,220553,220569,237314,237757,237413,220402,230848,234058,234061,234063,235753,233848,237512,233936,237460,236378,236921,234182,237878,205442,237388,234090,234091,237241,210119,224397,220613,235838,203445,237452,220584,237481,237505,237506,237828,237667,237668,237852,222474,222469,222481,222454,222455,220590,222468,211582,222470,220404,222473,220627,233050,233231,237845,233875,224318,224308,234034,224430,230787,330645,211751,213000,211730,752983,331081,220586,333900,828233,332437,320509,329655,237602,232730,235430,235210,232753,222065,237931,231303,232765,232764,232763,237601,237327,236664,329262,764092,339432,220530,323606,348072,332356,237183,237184,237185,220565,237474,237291,237290,851516,236969,235781,235782,235816,235784,236884,237699,236097,236061,230744,230664,235508,237232,237556,237280,236397,235872,329196,232276,230740,235716,235175,850477,236779,236874,237436,234752,237597,234751,232665,232285,220607,237660,237831,211900,237386,332134,336853,236724,237200,752170,237286,237288,237316,237296,237315,237817,237962,237630,237674,237180,204221,847842,813969,829768,807699,813966,828815,203508,814610,807690,807682,813964,849041,847852,205540,848958,828962,237877,220523,763703,26462,814809,340418,850555,850342,349155,322551,230018,345440,244901,244906,230093,237325,753180,236828,211854,230094,230106,834194,230128,831149,220585,230941,233943,222140,230109,237649,232288,231311,752107,230105,220080,236612,244984,234782,210003,331715,331345,752010,221966,752061,236241,234812,235213,237785,212734,212735,210979,235111,211595,212927,212925,213087,211598,221646,222451,234161,221812,222576,322199,221680,237792,222073,221915,334144,213169,323608,211886,232002,237781,232291,206640,237588,230701,224958,237605,334263,236717,331174,330008,236472,236236,235709,244839,828489,235245,234491,234474,231843,230460,230497,231428,230370,230376,234535,230394,235370,230396,233927,237591,230382,230398,230295,237656,231495,230272,230273,231349,231497,233312,230333,230324,230292,230241,230306,333988,236739,231513,230887,231838,235740,237585,234423,231363,231562,220490,242795,243999,211821,236024,237582,233919,230165,242860,237616,230088,231490,230287,230548,230529,230126,753114,211737,236505,242947,211744,211842,242953,222084,330503,210420,230886,230915,242788,242956,210803,221780,212865,222417,220601,234539,236968,237787,212835,237951,236890,232780,237145,807546,237706,236435,236247,336722,237407,237580,237279,237355,220497,237576,850248,237666,220519,829137,237320,237281,807507,220561,237598,237663,237600,237453,330369,752564,233941,231890,330648,237636,237635,237111,237112,237113,237155,237245,237503,237504,220504,237795,237496,237078,237081,237480,237080,237082,345848,220605,237240,237728,237087,237088,237095,237574,237092,237680,237086,752415,345986,237500,236986,237269,237270,237839,237265,237257,237276,237264,237103,237104,235428,233938,236847,204361,237426,235932,235903,236036,827649,210126,237849,236836,236032,236649,237371,832764,236018,833822,235929,861135,236249,237972,237995,233484,233984,233814,237848,235860,237432,220020,237308,236284,323732,237856,237865,237662,237499,237670,237409,237695,234472,236026,237399,230582,236166,235450,235864,237562,235780,237904,235722,236098,752046,751966,234140,236240,236592,236564,236305,829015,828812,237651,834236,349262,235018,828999,233292,234796,236789,231588,231460,230239,230718,235334,236558,234076,244895,234813,242810,231739,237586,236892,236347,234385,235298,234375,236581,828986,233304,230013,235109,220410,230197,236225,323575,329740,237992,236376,237584,222569,212136,220548,231378,222467,212659,212657,212658,235819,231709,200305,222464,237821,233089,220088,212109,752335,235902,210081,210082,210083,210084,210085,210087,210310,210090,210091,210098,235880,235877,236580,236620,237321,234146,210113,236574,220616,236075,237846,235910,236010,236584,210110,814472,237429,224341,224373,329626,231381,230605,235826,237696,236976,224624,235901,234778,236953,234042,235304,323759,236733,329526,331150,236950,210984,213151,212718,212040,211869,210274,213227,210332,212991,212997,212041,211898,210237,213294,212908,212042,213221,212644,211931,333766,220624,222364,242723,236948,242711,220072,220545,323752,234131,237967,231377,237102,222568,232589,234052,234151,236626,234725,231305,231713,237226,237851,236322,242959,237813,237360,242960,242961,242962,761694,349204,329281,236688,244913,242641,242644,242617,753187,237575,233812,243808,242783,244863,244865,204683,761606,333931,232859,830327,236991,236803,752969,331678,237961,833771,230490,329841,234739,232980,237715,236196,237954,237953,237956,237957,753096,237965,237966,237964,235518,235656,234770,242728,231477,230533,230347,230227,332489,332416,211855,244967,230070,230682,333520,333518,333427,333600,333509,211823,244917,237609,333525,235425,220444,237377,236848,236708,230043,230022,210419,231561,236217,230857,322313,221682,232534,347961,330798,235806,235931,235985,237274,236858,236605,235788,235787,235789,235794,235983,235802,235803,235805,237741,235811,235813,235815,236087,849619,236998,234386,236330,211698,236700,211559,232930,752285,828482,233442,233443,232141,233473,211549,221847,230505,237791,345379,235537,233853,210181,211526,211525,211522,211521,210178,233485,210009,211695,211513,233905,230703,211512,236500,231299,211619,211510,236910,210385,210014,234494,234521,234488,234526,234430,234431,234465,234429,234413,232131,234548,234447,234527,234418,237462,230413,237478,236893,234791,221798,243804,232260,9988776,224454,234595,236468,210247,210192,213230,212601,212105,213231,213237,212047,212520,213076,211935,212910,210402,212050,213077,213232,212720,212051,212052,210417,213300,213233,211936,212994,212721,212130,210344,210244,210980,212054,212996,212687,212655,212055,210122,210338,212912,232294,233222,237433,236221,236306,200765,235019,237659,815381,234863,234834,236394,243897,224266,220625,211622,329297,234843,236533,236535,224322,234538,237730,237190,234762,242752,206865,851182,237036,828180,221684,222404,235770,237776,237766,234787,235597,235588,237422,237420,236194,211933,211932,212048,213295,212688,210232,212043,212653,210362,211603,213224,213226,213266,213223,211934,212103,213228,210059,212519,212045,213222,212823,212909,213171,211879,212516,213296,236243,222035,235410,222133,234858,233614,329394,230127,233889,231285,753660,237401,234372,237441,236534,833762,233371,231329,331346,814533,220533,221635,234519,234520,234446,234493,234547,234432,234524,234466,234437,244849,234438,234522,235941,234489,234523,234544,235850,234440,234543,234419,234525,243830,237143,237487,849949,236136,236931,243891,236543,234400,234407,203778,237137,233624,331350,200701,242714,222197,233783,237774,234786,814725,235083,237843,235844,751956,234033,751960,233380,220481,334131,323645,211756,210305,213044,220102,234074,233800,221681,861850,332440,220532,212793,233676,221654,212106,212857,236556,233056,221676,331676,329810,237038,212861,213003,236276,234014,234015,330682,323744,242639,213154,212913,236510,236886,237743,212860,212858,212859,828098,243921,222178,234099,210350,233272,849315,232357,833959,235439,230756,222000,221675,237762,236802,234511,235142,234103,230747,243838,237091,232387,234845,234844,220426,222371,233015,235839,233633,222226,204473,833898,237658,224370,234019,234138,237233,224398,236470,233375,221693,234567,233061,221683,224928,221685,231975,221643,224267,213116,222190,213005,221783,236734,236355,329498,234727,234768,331607,234397,234398,237392,237608,329781,233090,212645,232052,236773,233287,236473,222476,237464,753091,200699,233218,204288,222327,231642,234773,234892,237698,234110,235758,234108,234112,318478,334198,220418,210276,230373,231831,231835,230368,230424,329707,332246,221763,221696,230506,230472,233901,205526,236512,237963,232642,236625,236594,233955,220073,243872,236475,814584,224330,850765,235729,231402,230725,230453,237175,230299,230297,237115,230454,232822,222583,834317,320525,320599,237065,233467,230564,231418,230489,236845,230491,231403,237592,235320,230381,236106,237195,233119,231917,222047,333790,330013,236403,829003,237253,224319,222175,237138,233091,237416,242880,232626,233712,220450,221695,221717,323731,232352,235092,235962,236636,235947,235950,235952,235601,237623,235604,237396,235606,235610,235608,235609,235611,235612,235616,235618,235663,235622,235623,235624,235625,235626,235633,235634,235828,235636,235637,235638,235639,235890,235640,235641,235966,332496,206575,333436,332328,211899,244937,243813,237671,860470,231436,753661,235866,236158,235960,232071,236444,236479,235553,231529,237342,231700,224325,224328,235719,234021,222386,336829,236429,237993,211764,237689,235106,236462,220577,221712,237726,323578,220484,224932,212078,212077,210157,212073,212076,212082,210229,210269,212112,210147,212110,211578,213246,212529,233096,236483,234779,235014,231796,236641,213411,235728,210317,210115,221706,237379,234833,237788,221710,329229,323479,221873,323817,211541,211542,211528,210335,210197,210436,211885,210149,210345,211539,232081,200427,329325,231818,231814,210208,752570,752722,333636,334325,236520,230636,333512,230782,220006,230638,230639,230735,220097,230633,230073,220034,751964,220445,236546,231678,237929,231698,222221,222162,235667,236248,236952,235797,236216,237948,236244,236792,220518,220626,833960,242989,220583,237294,232877,203382,234889,237801,234481,237039,206716,336315,235176,753031,232560,232556,232554,237179,232828,232487,231343,235997,236982,336384,235706,224255,235875,235769,230647,221648,212523,833828,233063,233918,224741,232349,220472,206185,232423,329679,205170,230132,224331,761670,233160,222068,234380,235189,236277,231731,237617,212547,752846,231342,233310,221947,234408,234529,236459,236903,213404,231417,234502,220028,235756,833718,329702,210016,233162,231735,234057,235048,323848,207102,235147,235146,334226,237958,232325,237402,237356,232328,232304,232298,236977,232362,232329,232314,237357,232306,232363,232308,232310,232312,231558,231566,231567,231574,231585,231590,232202,237186,232206,232212,232213,231598,231599,232201,232221,232223,237642,753194,220053,220057,220055,232369,237107,232934,237797,232262,220617,331104,232869,237425,232871,237697,232372,232382,235724,232380,232381,236940,235774,237564,751095,235143,244803,210136,236503,235845,233973,330450,752232,212794,829060,235521,220574,323583,323798,237796,334014,333523,333604,230919,210002,834203,222549,330919,834228,237709,230815,230814,850876,752256,232341,237333,237754,232257,235744,237442,235748,232694,232675,237903,236960,752584,346142,204324,200787,236514,828756,242760,222158,333882,211606,232682,345394,242840,237819,242839,820676,244813,242888,242648,236302,236315,236325,236476,230736,204768,220407,331598,237682,334342,231857,237818,236365,221980,232880,231733,232978,220471,220420,220469,236659,232566,231988,232093,244943,221885,233849,236895,244869,221753,232136,220025,320370,828174,833747,232898,232133,815086,237720,237374,236482,237146,231977,232129,329261,244974,231952,236829,234460,231563,234442,234931,234453,233101,234552,220415,220052,236469,236234,236303,230826,237026,236300,236455,236209,237015,234912,320518,234789,323611,329542,211745,231611,330461,828491,332315,232041,205568,235727,206158,236882,233372,236096,235069,203922,237686,212816,232417,230805,237191,235837,330593,233519,237840,753088,232340,231360,237428,236630,236647,242789,235995,235863,236972,237809,232927,237765,236062,230981,231364,232399,236288,828176,232875,207657,220051,237753,235068,236174,221929,243810,332360,333447,232837,348450,211864,331062,235522,333519,236613,230965,232292,230532,210186,332294,333777,320520,323493,236979,231536,336171,849540,235100,235104,329335,221954,203641,329751,345447,236222,329189,329286,320619,233635,211558,211501,235793,231451,333751,331033,231521,230330,235316,230350,242842,230415,230416,232225,230305,230310,230321,230383,230219,237912,237468,230224,230536,752581,232983,829004,236214,236220,236228,236226,242932,236551,232888,230209,236304,221813,242951,213239,230050,221660,220485,221658,329510,334237,230716,200502,236519,233087,233639,236410,237857,235842,237385,237763,236567,234774,236281,235742,211829,329857,213156,212920,211830,213243,213245,213241,213242,237936,234132,230679,236088,220114,236413,211570,242685,200549,233983,206645,234806,212732,211592,210389,211725,220488,751991,752441,210312,212862,212727,212724,212731,212725,212061,210227,211943,211940,212071,212062,211755,211942,212060,210334,212059,210253,210118,212066,212067,210209,211941,210396,212058,212072,211844,213014,211616,210004,210265,210392,213013,213162,213155,237875,329466,323792,323617,224268,212738,234776,242662,330585,334282,330678,235090,237988,230958,233768,232699,233097,237676,237923,237888,236971,236973,236975,236974,334168,834192,237108,237069,237339,753192,237273,237271,237862,237217,236989,237011,236990,237317,207115,237013,237068,220489,210927,210928,210929,210930,210931,210932,210297,210934,210935,210936,210937,210940,210941,210942,210943,210945,210954,210955,210956,210958,236993,237021,237064,237066,220517,237067,237867,243826,243827,237973,220566,236460,237150,230813,237863,242718,236114,236793,236268,235984,244882,230201,231489,221785,329258,323857,233811,233461,236321,220050,242812,237869,237109,232377,236964,851743,827751,231358,231357,230818,231388,237421,847709,235178,220580,230925,232847,230948,230943,329413,237330,231314,231320,753111,232343,221711,212722,222131,233397,320623,320510,344949,329288,320511,333789,329193,203374,236377,237446,237349,236320,323542,849585,829002,235865,235647,236438,230115,334231,236550,205386,220539,232919,233942,236704,236310,236293,233274,230005,204500,237227,230060,235061,751923,220422,236485,220568,237311,237793,232653,236681,236682,236680,236683,236896,827673,236963,220575,236572,236573,236576,220478,236699,236751,236712,236713,236701,237063,236750,236748,236857,850457,237614,232231,232868,206548,236657,220477,333539,332426,333613,236888,236692,236799,236796,236809,236703,237023,236800,220506,236916,236832,237677,237025,237376,237054,235118,236725,237807,235086,221634,234977,236206,235715,204910,224360,237987,237400,236205,237077,233366,233370,220090,200379,235739,236999,237000,237654,237611,237009,237004,237293,237260,237259,237272,237295,236795,236830,220564,220514,237053,207661,237486,236951,237057,236949,237149,237058,332281,237759,236945,237263,230689,753108,242806,333926,242830,233906,761611,233832,232941,333483,235904,233818,233817,233819,232989,333994,233802,333456,237657,335898,236905,333530,832044,851517,235996,235924,233803,332422,236651,235527,220189,237417,242772,242774,203767,242775,232801,233280,233281,234631,221691,237644,235335,234518,230483,222341,230459,220623,752490,235062,237132,234742,234719,231849,230978,211930,331294,233949,237641,235457,333517,233965,220435,332330,220436,237027,236784,236785,236721,200101,235027,236431,220419,234389,236309,206006,237085,204581,244843,235851,220047,230122,232138,222155,833635,323705,233877,237732,236894,832849,831694,828150,210600,210876,236615,236913,237337,232905,850830,236585,235926,232947,236084,236695,832850,237684,236074,210395,210238,210340,210836,210838,210355,210840,210842,210138,210844,210378,210251,210847,210816,210817,210818,210819,210848,210849,210850,210827,210851,210828,210877,210878,210347,210879,210946,210431,210947,210948,210882,210825,210357,210884,210885,210371,210888,210182,210890,210891,210427,210095,210894,210895,210897,210898,210908,210914,210912,210924,210813,210364,210815,232952,329804,237798,232391,232392,233807,232917,235835,232816,232819,236631,237652,210961,210963,210964,210965,210821,210822,210823,210824,210826,210966,210969,210970,210971,210852,210206,210854,210855,210856,210311,210858,210375,210404,210861,210412,210367,210421,210865,210314,210869,210151,210871,210203,210333,210284,210900,210973,210104,210904,210905,210906,210909,210910,210911,210913,210915,210916,210212,210919,210920,210380,210922,210926,220060,752159,333573,237218,232959,334169,236927,236839,236652,331088,340010,221945,232570,221913,236311,236312,236313,236314,230452,230434,230290,230390,230389,230414,231487,230392,230391,237147,230417,232464,232463,232425,236499,237384,237876,231406,230504,237650,230468,230475,231445,237366,230320,232659,231504,232486,236008,203069,243966,231454,231471,230534,230525,232454,237896,237959,242879,330875,232243,230319,236509,336820,236115,850921,222542,236716,236432,236480,236481,235368,235361,235363,236566,230456,230500,230455,230476,230281,230404,230255,235566,235580,235571,236147,220161,330854,237613,235874,235873,235870,236041,236040,761610,832852,236570,236851,236843,237410,336302,236900,320550,220111,236416,236486,210260,237952,220409,236273,236274,237047,236538,236685,827650,236340,200713,236362,236343,752000,236352,220599,236335,236364,236184,236185,236578,318924,232117,236907,236745,235765,237879,230133,230653,230791,237424,237799,230746,230742,230743,230799,230102,333423,333526,230150,236738,235762,230202,230205,230206,230207,230217,230225,230266,230267,230268,230269,230278,230286,230288,230300,233850,230352,230355,230356,230357,230403,230406,236805,235725,230410,230411,230420,230421,230433,230442,230775,230465,230477,237423,230487,237141,329211,237250,230502,230503,230539,230540,230544,233876,235055,243806,236513,236515,237451,220455,236709,236727,236746,220521,236361,236774,332455,333979,236826,220439,236777,236710,236711,236673,236674,236675,236676,236677,236694,849325,236561,220454,222594,235945,236449,232848,234069,220061,235119,235049,221647,213166,222575,213090,213089,211734,212085,211727,212090,212088,212089,212093,212086,210294,210432,212095,212097,210037,210286,212118,234575,336329,211980,210383,211982,210315,211983,211973,210394,211988,211984,210360,211972,211985,212138,234583,212125,212127,210413,210293,210134,230301,231455,212829,236091,235285,752188,232569,200462,204185,237567,235825,235823,232678,235202,237847,235288,237653,761699,236838,200557,200565,237873,237872,237871,237880,237882,237881,807685,751038,847841,849539,830813,832357,850872,804789,827675,340184,237902,861362,850065,333620,828816,813967,815357,807701,847851,807686,807689,237938,237939,237940,237941,203936,237942,237907,237943,237910,237944,237911,237945,237915,237914,237908,237909,237926,237928,237927,200247,237946,237975,237976,319789,233052,236068,236291,236023,237129,210156,236080,236078,210165,236671,236607,237721,232248,230258,230256,230259,206233,236033,828497,236744,236875,237751,237727,235919,235920,237683,210169,220453,236834,236154,237827,235965,237930,236898,235418,236066,235906,237378,235474,237051,235514,235512,236619,236618,236602,237489,236883,235759,235411,336193,336192,237507,345398,237231,236864,236865,236866,236867,237101,231766,231770,233378,210029,213037,213035,210167,213033,213032,212929,210316,212928,210341,213028,210049,210423,212737,233009,233066,752934,332476,220457,834314,236324,236242,236464,211503,236034,242866,237860,236396,210390,210327,236111,211665,211714,210211,211673,211674,211675,211672,210185,210400,211635,211670,211634,210349,211628,211629,211630,211631,211632,211633,211644,211643,211642,211641,211640,211639,211638,211637,211636,236152,211667,211668,210313,211671,220468,237700,236388,333932,210233,211683,211684,211685,211687,211688,211689,211690,329565,828534,753175,211724,752316,220610,236846,205581,753237,243847,232836,752548,205743,242614,242889,211715,211717,211718,211860,236346,237969,237672,237708,220619,237181,220101,210092,210377,210094,210097,815388,210069,210079,230180,242738,242745,242799,222193,220016,752456,828457,333965,200757,237203,236917,336189,236862,237334,237335,236889,236807,236808,236810,236813,236812,237075,237324,323845,329426,330088,320555,236878,236769,207109,236923,236765,236941,236860,236861,237024,236082,236635,236667,236634,320238,323610,329684,222078,834416,237789,332451,235578,320526,242884,222079,232811,242882,237243,235375,235376,235377,211711,211709,211645,211646,211647,211648,210319,211651,211652,211677,211663,211653,210336,210205,210372,230790,237874,230812,222141,230671,230101,230599,232397,211834,333511,230650,232856,236939,230079,329591,236980,236981,237514,834046,230955,230131,220622,203699,230032,200754,848981,336207,236086,236891,231312,330018,211839,211841,333923,329206,232436,232437,235859,232089,200625,232114,232060,211793,211816,211770,211769,211768,211767,210058,211782,210425,210255,211774,211772,210189,753186,244886,244885,231347,205186,211783,211784,210323,210132,210405,211790,211792,210342,210424,211797,211798,210304,211800,211801,211802,210242,211804,210804,211806,210271,243980,243942,211893,211894,210252,237411,237772,222130,211809,211810,211811,211812,211813,211814,211815,222169,752605,244897,333424,211840,828585,220620,851742,237861,236816,237289,243807,242952,220434,220423,237932,236970,211890,230963,222137,237326,220177,237307,230014,220602,333522,231341,210012,211838,210407,230143,237242,237761,237681,345400,237472,807480,232051,235431,237159,329232,236392,232142,236299,236294,237717,807448,233824,832551,232939,233820,233813,233833,237887,237725,235982,237239,237465,232954,814779,237780,220447,237901,237661,236105,236101,236093,237710,237645,237775,237778,237859,236060,236559,236138,236073,236148,236283,236501,210172,235928,236496,237454,237018,850233,235936,235533,235498,210040,235565,210102,237593,235564,235572,235944,235444,332325,235423,235482,235481,236049,235510,235551,235511,237694,237693,236173,236428,220582,329304,329307,837713,237479,237509,210348,345943,237664,237824,861086,237502,237533,237534,237537,237538,237539,237540,237541,237543,237521,237522,237523,237550,237551,237552,237553,237554,237524,237517,237525,237557,237527,237528,237516,237529,237530,237518,237520,237515,237548,237549,237558,237559,807417,348264,849946,849942,832084,311203,830968,232987,233804,827659,827660,827661,827662,827760,220475,232973,827694,827693,827692,827658,220180,236665,236650,235486,220573,235455,210007,235927,237034,235406,332355,332331,334054,334051,332329,334043,237719,235908,236736,205928,210028,220086,237573,237594,237510,237823,237595,220579,220578,237578,237606,237561,323851,237590,237724,237638,204161,237822,237712,237921,237977,237637,237733,237749,237970,220606,237850,237916,237917,237688,237804,237803,237812,237805,237806,237745,232398,235746,235964,237445,236849,237974,336730,237702,237703,237748,332337,334052,332335,827712,237836,237858,237891,329643,332288,345424,332016,237747,237746,237892,237739,237740,237738,237736,237737,237734,237735,220608,237918,818827,237886,237889,237890,237814,237834,237815,204735,237811,237894,237895,237897,237898,237899,237893,237825,237826,752837,780442,780451,811088,811058,333861,829246,237866,203920,752250,220596,237919,237675,237925,237924,752021,237808,237810,237884,237885,237838,237949,220612,237855,237853,332396,334324,828140,237960,237905,210520,329197,828661,829766,332385,329680) and staffImage is not null;
2022-01-07 17:56:16.505 [http-nio-8080-exec-2] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - ==> Parameters: 
2022-01-07 17:56:17.150 [http-nio-8080-exec-2] DEBUG c.f.s.mapper.staffInfo.StaffMapper.getStaffByCards - <==      Total: 4058
2022-01-07 17:56:20.655 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:56:20.655 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:56:30.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:56:30.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:56:30.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:56:30.265 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:56:30.265 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:56:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:56:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:56:48.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:56:50.670 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:56:50.670 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:56:57.719 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:56:57.721 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 17:56:57.723 [Thread-46] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 17:56:57.724 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:56:57.724 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 17:56:38.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 17:56:57.732 [Thread-46] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:57:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:57:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:57:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:57:00.281 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:57:00.281 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:57:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:57:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:57:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:57:20.679 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:57:20.679 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:57:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:57:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:57:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:57:30.295 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:57:30.295 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:57:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:57:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:57:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:57:50.683 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:57:50.683 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:58:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:58:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:58:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:58:00.301 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:58:00.301 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:58:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:58:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:58:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:58:20.694 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:58:20.694 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:58:30.310 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:58:30.310 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:58:38.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:58:38.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:58:38.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:58:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:58:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:58:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:58:50.703 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:58:50.703 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:59:00.000 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:59:00.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:59:00.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:59:00.313 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:59:00.313 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:59:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:59:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:59:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:59:20.704 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:59:20.704 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:59:23.411 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 17:59:23.412 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919945(String)
2022-01-07 17:59:23.413 [Thread-47] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 17:59:23.414 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 17:59:23.414 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 岳进蛟(String), 919945(String), 371102198204163813(String), 福建宁德核电有限公司(String), 138091(String), [B@6e9f4329(byte[]), 2022-01-07 17:59:04.0(Timestamp), 118(String), 192.168.1.118(String), 2(Integer), null, 22(Integer)
2022-01-07 17:59:23.419 [Thread-47] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 17:59:30.318 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:59:30.318 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 17:59:38.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:59:38.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:59:38.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:59:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 17:59:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 17:59:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 17:59:50.706 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 17:59:50.706 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:00:00.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:00:00.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:00:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:00:00.330 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:00:00.330 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:00:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:00:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:00:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:00:20.719 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:00:20.719 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:00:30.334 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:00:30.334 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:00:38.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:00:38.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:00:38.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:00:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:00:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:00:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:00:50.722 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:00:50.722 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:01:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:01:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:01:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:01:00.344 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:01:00.344 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:01:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:01:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:01:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:01:20.735 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:01:20.735 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:01:30.353 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:01:30.353 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:01:38.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:01:38.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:01:38.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:01:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:01:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:01:48.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:01:50.744 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:01:50.744 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:02:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:02:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:02:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:02:00.366 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:02:00.366 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:02:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:02:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:02:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:02:20.756 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:02:20.756 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:02:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:02:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:02:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:02:30.368 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:02:30.368 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:02:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:02:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:02:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:02:50.758 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:02:50.758 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:03:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:03:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:03:00.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:03:00.380 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:03:00.380 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:03:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:03:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:03:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:03:20.769 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:03:20.769 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:03:30.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:03:30.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:03:30.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:03:30.392 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:03:30.392 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:03:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:03:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:03:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:03:50.771 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:03:50.771 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:04:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:04:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:04:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:04:00.406 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:04:00.406 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:04:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:04:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:04:15.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:04:20.780 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:04:20.780 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:04:30.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:04:30.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:04:30.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:04:30.409 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:04:30.409 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:04:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:04:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:04:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:04:50.783 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:04:50.783 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:05:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:05:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:05:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:05:00.417 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:05:00.417 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:05:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:05:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:05:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:05:20.788 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:05:20.788 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:05:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:05:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:05:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:05:30.425 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:05:30.425 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:05:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:05:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:05:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:05:50.793 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:05:50.793 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:06:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:06:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:06:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:06:00.435 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:06:00.435 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:06:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:06:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:06:15.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:06:20.793 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:06:20.793 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:06:30.439 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:06:30.439 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:06:38.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:06:38.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:06:38.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:06:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:06:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:06:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:06:50.795 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:06:50.795 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:07:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:07:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:07:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:07:00.443 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:07:00.443 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:07:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:07:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:07:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:07:20.800 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:07:20.800 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:07:30.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:07:30.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:07:30.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:07:30.451 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:07:30.451 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:07:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:07:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:07:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:07:50.805 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:07:50.805 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:08:00.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:08:00.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:08:00.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:08:00.455 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:08:00.455 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:08:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:08:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:08:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:08:20.816 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:08:20.816 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:08:30.468 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:08:30.468 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:08:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:08:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:08:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:08:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:08:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:08:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:08:50.821 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:08:50.821 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:09:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:09:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:09:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:09:00.477 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:09:00.477 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:09:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:09:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:09:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:09:20.835 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:09:20.835 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:09:30.478 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:09:30.478 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:09:38.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:09:38.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:09:38.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:09:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:09:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:09:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:09:50.837 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:09:50.837 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:10:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:10:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:10:00.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:10:00.491 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:10:00.491 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:10:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:10:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:10:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:10:20.845 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:10:20.845 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:10:30.493 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:10:30.493 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:10:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:10:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:10:38.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:10:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:10:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:10:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:10:50.846 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:10:50.846 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:11:00.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:11:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:11:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:11:00.500 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:11:00.500 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:11:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:11:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:11:15.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:11:20.853 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:11:20.853 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:11:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:11:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:11:30.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:11:30.506 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:11:30.506 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:11:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:11:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:11:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:11:50.863 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:11:50.863 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:11:58.412 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:11:58.412 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 18:11:58.413 [Thread-49] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 18:11:58.413 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:11:58.414 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 18:11:39.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 18:11:58.419 [Thread-49] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:12:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:12:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:12:00.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:12:00.517 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:12:00.517 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:12:15.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:12:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:12:15.015 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:12:20.872 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:12:20.872 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:12:30.519 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:12:30.519 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:12:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:12:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:12:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:12:39.448 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:12:39.448 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 18:12:39.449 [Thread-50] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 18:12:39.449 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:12:39.450 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 18:12:20.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 18:12:39.450 [Thread-50] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:12:48.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:12:48.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:12:48.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:12:50.878 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:12:50.878 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:13:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:13:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:13:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:13:00.528 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:13:00.528 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:13:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:13:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:13:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:13:20.888 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:13:20.888 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:13:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:13:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:13:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:13:30.540 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:13:30.540 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:13:48.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:13:48.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:13:48.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:13:50.900 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:13:50.900 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:14:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:14:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:14:00.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:14:00.555 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:14:00.555 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:14:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:14:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:14:15.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:14:20.906 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:14:20.906 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:14:30.564 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:14:30.564 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:14:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:14:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:14:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:14:48.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:14:48.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:14:48.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:14:50.921 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:14:50.921 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:15:00.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:15:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:15:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:15:00.577 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:15:00.577 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:15:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:15:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:15:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:15:20.936 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:15:20.936 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:15:30.579 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:15:30.579 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:15:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:15:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:15:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:15:48.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:15:48.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:15:48.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:15:50.946 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:15:50.946 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:16:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:16:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:16:00.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:16:00.593 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:16:00.593 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:16:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:16:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:16:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:16:20.960 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:16:20.960 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:16:30.594 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:16:30.594 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:16:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:16:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:16:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:16:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:16:48.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:16:48.716 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:16:50.969 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:16:50.969 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:17:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:17:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:17:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:17:00.603 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:17:00.603 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:17:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:17:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:17:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:17:20.973 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:17:20.973 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:17:30.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:17:30.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:17:30.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:17:30.611 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:17:30.611 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:17:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:17:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:17:48.730 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:17:50.977 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:17:50.977 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:18:00.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:18:00.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:18:00.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:18:00.623 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:18:00.623 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:18:09.464 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: 1e7bd62a-3488-4505-a7ac-a53291d105b2: (connection has passed maxLifetime)
2022-01-07 18:18:09.479 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:21 ClientConnectionId: a929e872-7d2e-4666-ab55-f65f2da65a63
2022-01-07 18:18:09.854 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: 675a333b-2b23-493f-9f08-fe11ba25018a: (connection has passed maxLifetime)
2022-01-07 18:18:09.864 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:22 ClientConnectionId: a369c20d-7d47-405b-a0a9-3612a8a63a38
2022-01-07 18:18:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:18:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:18:15.007 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:18:16.048 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: 749bfb6f-6617-4c26-8f2d-1b576883d684: (connection has passed maxLifetime)
2022-01-07 18:18:16.061 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:23 ClientConnectionId: e851a458-7a70-429d-baab-57b5da30d877
2022-01-07 18:18:17.105 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: beb48e31-8646-4284-bee1-7774c670d943: (connection has passed maxLifetime)
2022-01-07 18:18:17.118 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:24 ClientConnectionId: fb55b3dd-3c19-4c0b-9c75-750e5741ee70
2022-01-07 18:18:20.982 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:18:20.982 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:18:27.091 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: d474ff73-fc5e-4fb6-8199-ef42cdf8b4b2: (connection has passed maxLifetime)
2022-01-07 18:18:27.104 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:25 ClientConnectionId: acc50567-ffa3-4ae9-923d-5559467efe29
2022-01-07 18:18:27.853 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: c19d45f7-6a92-4967-b0ef-e2b7d60fc043: (connection has passed maxLifetime)
2022-01-07 18:18:27.865 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:26 ClientConnectionId: c650f226-38e9-4986-a241-0412bb944c87
2022-01-07 18:18:29.130 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: 24d1dcb6-e7f6-491d-8981-24ecf33dfad6: (connection has passed maxLifetime)
2022-01-07 18:18:29.143 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:27 ClientConnectionId: d0aad8c2-d431-4aff-abd3-bea3e1575165
2022-01-07 18:18:29.718 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: 1591e5c6-f659-422b-8e5c-f0e29c305b71: (connection has passed maxLifetime)
2022-01-07 18:18:29.730 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:28 ClientConnectionId: c7421f9c-ccbf-4792-ad0b-3d9ecb440e08
2022-01-07 18:18:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:18:30.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:18:30.014 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:18:30.638 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:18:30.638 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:18:32.397 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: 51ff86fa-465a-444d-a279-d10a8244a0ba: (connection has passed maxLifetime)
2022-01-07 18:18:32.410 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:29 ClientConnectionId: fcba5d29-3823-4d28-b94e-73eafd095a21
2022-01-07 18:18:35.353 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: cc626689-fead-456b-95b0-5b13c640f826: (connection has passed maxLifetime)
2022-01-07 18:18:35.364 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:30 ClientConnectionId: 0262f874-3c37-47b0-94f6-0f0ec9fa9603
2022-01-07 18:18:36.885 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 66048080-bbe4-4d8f-a860-40b307b23a4f: (connection has passed maxLifetime)
2022-01-07 18:18:36.897 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:31 ClientConnectionId: 7b169119-8aee-462e-88d2-44f27ca42d31
2022-01-07 18:18:42.353 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: 6305e5f7-4af6-4d03-940a-554c12ec4c72: (connection has passed maxLifetime)
2022-01-07 18:18:42.367 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:32 ClientConnectionId: a81130a9-8394-4dd1-b3e2-8d2801323395
2022-01-07 18:18:42.508 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: 0c881934-e1ee-425b-bd27-917154cfc0e3: (connection has passed maxLifetime)
2022-01-07 18:18:42.521 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:33 ClientConnectionId: 3d586665-37a8-4aa3-a27d-394a9c52b92d
2022-01-07 18:18:43.252 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 7c94d176-d0a6-48c4-8e9f-829c9373a901: (connection has passed maxLifetime)
2022-01-07 18:18:43.264 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:34 ClientConnectionId: 8ee8cd2c-ac74-4bc0-9fa5-86abbf07b29a
2022-01-07 18:18:43.284 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: 6ce6adee-4d67-40d5-ab9c-56423f0bf20a: (connection has passed maxLifetime)
2022-01-07 18:18:43.296 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:35 ClientConnectionId: 6e143588-5194-467e-9215-fbfec4efbda4
2022-01-07 18:18:45.186 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: 16beded8-6ee0-4ceb-854e-ab1ae5abc52e: (connection has passed maxLifetime)
2022-01-07 18:18:45.198 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:36 ClientConnectionId: 42e03e5b-4fa9-4bae-aa1a-86ff90eb3a5c
2022-01-07 18:18:45.683 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: 84a8e0c8-933e-4f28-951d-b99892829ea1: (connection has passed maxLifetime)
2022-01-07 18:18:45.695 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:37 ClientConnectionId: fbf3773a-2f5c-46ae-b557-c7ea5372d7b0
2022-01-07 18:18:46.513 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: 84d665f3-f802-447c-b726-9a75bc747066: (connection has passed maxLifetime)
2022-01-07 18:18:46.525 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:38 ClientConnectionId: 0df821c1-931a-4501-9720-a9571584ea9d
2022-01-07 18:18:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:18:48.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:18:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:18:50.992 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:18:50.992 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:18:52.171 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: acc0e58c-b65a-4c44-a853-ba5fd4f77307: (connection has passed maxLifetime)
2022-01-07 18:18:52.184 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:39 ClientConnectionId: d69b31fe-3285-4b65-b46b-81e3980218be
2022-01-07 18:18:53.660 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: 2493d3dd-9750-4e40-966c-c43ac8ae2f99: (connection has passed maxLifetime)
2022-01-07 18:18:53.671 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:40 ClientConnectionId: 205e867c-284d-4772-9f4a-34a6c2cfae86
2022-01-07 18:19:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:19:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:19:00.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:19:00.644 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:19:00.644 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:19:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:19:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:19:15.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:19:21.007 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:19:21.007 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:19:30.654 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:19:30.654 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:19:38.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:19:38.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:19:38.727 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:19:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:19:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:19:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:19:51.016 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:19:51.016 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:20:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:20:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:20:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:20:00.657 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:20:00.657 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:20:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:20:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:20:15.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:20:21.023 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:20:21.023 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:20:30.658 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:20:30.658 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:20:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:20:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:20:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:20:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:20:48.728 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:20:48.729 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:20:51.031 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:20:51.031 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:21:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:21:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:21:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:21:00.659 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:21:00.659 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:21:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:21:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:21:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:21:21.041 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:21:21.041 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:21:30.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:21:30.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:21:30.004 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:21:30.667 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:21:30.667 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:21:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:21:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:21:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:21:51.051 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:21:51.051 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:22:00.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:22:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:22:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:22:00.668 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:22:00.668 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:22:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:22:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:22:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:22:21.058 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:22:21.058 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:22:30.669 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:22:30.669 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:22:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:22:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:22:38.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:22:48.718 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:22:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:22:48.719 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:22:51.072 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:22:51.072 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:23:00.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:23:00.012 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:23:00.013 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:23:00.685 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:23:00.685 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:23:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:23:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:23:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:23:21.084 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:23:21.084 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:23:30.690 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:23:30.690 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:23:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:23:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:23:38.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:23:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:23:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:23:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:23:51.087 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:23:51.087 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:24:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:24:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:24:00.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:24:00.702 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:24:00.702 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:24:05.541 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:24:05.541 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 18:24:05.541 [Thread-51] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 18:24:05.541 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:24:05.541 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 18:23:47.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 18:24:05.541 [Thread-51] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:24:10.302 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:24:10.302 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 18:24:10.303 [Thread-52] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 18:24:10.303 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:24:10.303 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 18:23:52.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 18:24:10.309 [Thread-52] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:24:15.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:24:15.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:24:15.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:24:21.102 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:24:21.102 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:24:21.843 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:24:21.843 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 18:24:21.843 [Thread-53] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 18:24:21.843 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:24:21.843 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 18:24:03.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 18:24:21.843 [Thread-53] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:24:24.487 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:24:24.487 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 18:24:24.487 [Thread-54] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 18:24:24.487 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:24:24.487 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 18:24:06.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 18:24:24.487 [Thread-54] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:24:28.160 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:24:28.160 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 18:24:28.160 [Thread-55] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 18:24:28.160 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:24:28.160 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 18:24:09.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 18:24:28.167 [Thread-55] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:24:30.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:24:30.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:24:30.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:24:30.709 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:24:30.709 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:24:31.337 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:24:31.337 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 18:24:31.338 [Thread-56] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 18:24:31.338 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:24:31.339 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 18:24:12.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 18:24:31.339 [Thread-56] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:24:34.528 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:24:34.528 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 18:24:34.528 [Thread-57] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 18:24:34.528 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:24:34.528 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 18:24:16.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 18:24:34.537 [Thread-57] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:24:37.272 [Thread-58] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:24:37.272 [Thread-58] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 18:24:37.272 [Thread-58] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 18:24:37.272 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:24:37.272 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 18:24:18.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 18:24:37.291 [Thread-58] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:24:40.463 [Thread-59] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:24:40.463 [Thread-59] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 3356561920(String)
2022-01-07 18:24:40.463 [Thread-59] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 0
2022-01-07 18:24:40.463 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:24:40.463 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, 3356561920(String), null, null, null, null, 2022-01-07 18:24:22.0(Timestamp), 118(String), 192.168.1.118(String), 3(Integer), null, 0(Integer)
2022-01-07 18:24:40.472 [Thread-59] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:24:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:24:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:24:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:24:51.108 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:24:51.108 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:24:55.306 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==>  Preparing: select * from V_UserInfo where staffCardNumber = ? and staffImage is not null;
2022-01-07 18:24:55.306 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - ==> Parameters: 919949(String)
2022-01-07 18:24:55.306 [Thread-60] DEBUG c.f.s.m.s.StaffMapper.getStaffByCardForPass - <==      Total: 1
2022-01-07 18:24:55.306 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:24:55.306 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: 李隆安(String), 919949(String), 321081197206147530(String), 福建宁德核电有限公司(String), 106410(String), [B@3fe2f77c(byte[]), 2022-01-07 18:24:36.0(Timestamp), 118(String), 192.168.1.118(String), 2(Integer), null, 38(Integer)
2022-01-07 18:24:55.315 [Thread-60] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:25:00.018 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:25:00.019 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:25:00.019 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:25:00.724 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:25:00.724 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:25:15.005 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:25:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:25:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:25:21.113 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:25:21.113 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:25:30.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:25:30.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:25:30.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:25:30.739 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:25:30.739 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:25:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:25:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:25:48.723 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:25:51.123 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:25:51.123 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:26:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:26:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:26:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:26:00.741 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:26:00.741 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:26:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:26:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:26:15.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:26:21.134 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:26:21.134 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:26:30.756 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:26:30.756 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:26:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:26:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:26:38.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:26:48.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:26:48.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:26:48.726 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:26:51.143 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:26:51.143 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:27:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:27:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:27:00.003 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:27:00.763 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:27:00.763 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:27:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:27:15.016 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:27:15.017 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:27:21.155 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:27:21.155 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:27:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:27:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:27:30.011 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:27:30.773 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:27:30.773 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:27:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:27:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:27:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:27:51.161 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:27:51.161 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:28:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:28:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:28:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:28:00.779 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:28:00.779 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:28:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:28:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:28:15.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:28:21.173 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:28:21.173 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:28:30.779 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:28:30.779 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:28:33.463 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==>  Preparing: INSERT INTO PassTable (staffName,staffCardNumber,staffCardId,staffCompany,staffUserId,passCaptureImage,passTime,passEquipmentName,passEquipmentIp,passResult,passNote,passSimilarity) values (?,?,?,?,?,?,?,?,?,?,?,?)
2022-01-07 18:28:33.464 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - ==> Parameters: null, null, null, null, null, null, 2022-01-07 18:28:14.0(Timestamp), 118(String), 192.168.1.118(String), 4(Integer), null, 0(Integer)
2022-01-07 18:28:33.469 [Thread-63] DEBUG c.f.s.mapper.faceRecognition.PassMapper.insertPass - <==    Updates: 1
2022-01-07 18:28:38.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:28:38.714 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:28:38.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:28:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:28:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:28:48.717 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:28:51.188 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:28:51.188 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:29:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:29:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:29:00.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:29:00.783 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:29:00.783 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:29:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:29:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:29:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:29:21.193 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:29:21.193 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:29:30.009 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:29:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:29:30.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:29:30.797 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:29:30.797 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:29:48.720 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:29:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:29:48.721 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:29:51.207 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:29:51.207 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:30:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:30:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:30:00.008 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:30:00.800 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:30:00.800 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:30:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:30:15.001 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:30:15.002 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:30:21.216 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:30:21.216 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:30:30.803 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:30:30.803 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:30:38.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:30:38.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:30:38.715 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:30:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:30:48.724 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:30:48.725 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:30:51.226 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:30:51.226 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:31:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:31:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:31:00.006 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:31:00.814 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:31:00.815 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:31:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:31:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:31:15.010 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:31:21.196 [http-nio-8080-exec-10] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==>  Preparing: select * from V_UserInfo where staffImage is not null;
2022-01-07 18:31:21.196 [http-nio-8080-exec-10] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==> Parameters: 
2022-01-07 18:31:21.227 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:31:21.227 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:31:21.464 [http-nio-8080-exec-10] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - <==      Total: 5058
2022-01-07 18:31:30.227 [http-nio-8080-exec-1] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==>  Preparing: select * from V_UserInfo where staffImage is not null;
2022-01-07 18:31:30.227 [http-nio-8080-exec-1] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - ==> Parameters: 
2022-01-07 18:31:30.511 [http-nio-8080-exec-1] DEBUG c.face.server.mapper.staffInfo.StaffMapper.getAll - <==      Total: 5058
2022-01-07 18:31:30.818 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:31:30.818 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Fill pool skipped, pool is at sufficient level.
2022-01-07 18:31:38.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:31:38.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:31:38.722 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:33:05.706 [main] DEBUG com.face.server.ServerApplicationTests - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 18:33:06.155 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 18:33:06.867 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader sun.misc.Launcher$AppClassLoader@42a57993
2022-01-07 18:33:07.087 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader sun.misc.Launcher$AppClassLoader@42a57993
2022-01-07 18:33:07.385 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{GET [/equipment]}: equipment(Model)
	{ [/staffOperation]}: staffOperation()
	{ [/]}: getEquipment()
	{ [/history]}: history(Model)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{GET [/staffSynchronization]}: staffSynchronization(Model)
2022-01-07 18:33:07.385 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2022-01-07 18:33:07.432 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 18:33:07.463 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 18:33:07.856 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 18:33:07.856 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 18:33:07.856 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 18:33:07.856 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 18:33:07.856 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 18:33:07.856 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 18:33:07.859 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 18:33:08.201 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: ae07d331-3a67-4cec-b492-5757efd5b48d
2022-01-07 18:33:08.217 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 18:33:08.232 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 18:33:08.248 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 18:33:08.248 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 18:33:08.248 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 18:33:08.248 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 18:33:08.326 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 18:33:08.360 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: b7d16897-7b64-4dec-9dfd-3d02fed11e81
2022-01-07 18:33:08.405 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: 6dbb6bac-2c78-4fff-a50f-7576b9ddb426
2022-01-07 18:33:08.420 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 4a5bcb17-93db-454e-b569-34aac822e14a
2022-01-07 18:33:08.436 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: d2aa22e4-17ec-404e-aad8-0fbabfd15f48
2022-01-07 18:33:08.460 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: efe0ab1f-8233-47fc-a0b4-77c450a0a2d7
2022-01-07 18:33:08.468 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: f70f363e-58d8-41c8-8dde-07db4a7e0d68
2022-01-07 18:33:08.483 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 119c84b7-d6ce-4b76-bcfb-fa0b8b1e1b1e
2022-01-07 18:33:08.515 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: 9f8bdb4d-2d89-4787-bc79-035deda5cd66
2022-01-07 18:33:08.546 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: 00f4bee6-1e52-4f6b-aa47-6a3ac2bcd9bc
2022-01-07 18:33:08.546 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-2 - configuration:
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=StaffInfo
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-2"
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 18:33:15.017 [scheduling-1] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 18:33:15.032 [scheduling-1] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:11 ClientConnectionId: e578e23b-62d7-4e40-9ef0-9cf72bf2bdb7
2022-01-07 18:33:15.032 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==>  Preparing: select * from StaffStat;
2022-01-07 18:33:15.032 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - ==> Parameters: 
2022-01-07 18:33:15.032 [scheduling-1] DEBUG c.f.server.mapper.staffInfo.StaffStatMapper.getAll - <==      Total: 0
2022-01-07 18:33:15.142 [HikariPool-2 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 18:33:15.142 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:12 ClientConnectionId: b5c163d4-ac83-4c7a-8223-02d25b878d32
2022-01-07 18:33:15.158 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:13 ClientConnectionId: 679e9022-847f-49fa-bf96-1055223c2d31
2022-01-07 18:33:15.174 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:14 ClientConnectionId: ae285836-7c93-479b-a751-6190e51ac015
2022-01-07 18:33:15.174 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:15 ClientConnectionId: d7944767-38a7-474a-adb2-6f2f5d19979a
2022-01-07 18:33:15.189 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:16 ClientConnectionId: b39d85e0-3783-40da-8a20-667cf28af693
2022-01-07 18:33:15.205 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:17 ClientConnectionId: 6abd047e-2e74-49f1-a705-30f7b8ed7805
2022-01-07 18:33:15.205 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:18 ClientConnectionId: a9bb3b61-143a-4159-8302-3e560033cf91
2022-01-07 18:33:15.221 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:19 ClientConnectionId: 471155a0-2015-4546-8f10-9740555e84ef
2022-01-07 18:33:15.236 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection ConnectionID:20 ClientConnectionId: f28551c1-71e1-4f11-bff7-a888831033de
2022-01-07 18:33:15.236 [HikariPool-2 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:33:20.530 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:33:20.530 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: ae07d331-3a67-4cec-b492-5757efd5b48d: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: b7d16897-7b64-4dec-9dfd-3d02fed11e81: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: 6dbb6bac-2c78-4fff-a50f-7576b9ddb426: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 4a5bcb17-93db-454e-b569-34aac822e14a: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: d2aa22e4-17ec-404e-aad8-0fbabfd15f48: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: efe0ab1f-8233-47fc-a0b4-77c450a0a2d7: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: f70f363e-58d8-41c8-8dde-07db4a7e0d68: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: 119c84b7-d6ce-4b76-bcfb-fa0b8b1e1b1e: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: 9f8bdb4d-2d89-4787-bc79-035deda5cd66: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: 00f4bee6-1e52-4f6b-aa47-6a3ac2bcd9bc: (connection evicted)
2022-01-07 18:33:20.530 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 18:33:20.530 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:33:20.530 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:11 ClientConnectionId: e578e23b-62d7-4e40-9ef0-9cf72bf2bdb7: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:12 ClientConnectionId: b5c163d4-ac83-4c7a-8223-02d25b878d32: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:13 ClientConnectionId: 679e9022-847f-49fa-bf96-1055223c2d31: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:14 ClientConnectionId: ae285836-7c93-479b-a751-6190e51ac015: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:15 ClientConnectionId: d7944767-38a7-474a-adb2-6f2f5d19979a: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:16 ClientConnectionId: b39d85e0-3783-40da-8a20-667cf28af693: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:17 ClientConnectionId: 6abd047e-2e74-49f1-a705-30f7b8ed7805: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:18 ClientConnectionId: a9bb3b61-143a-4159-8302-3e560033cf91: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:19 ClientConnectionId: 471155a0-2015-4546-8f10-9740555e84ef: (connection evicted)
2022-01-07 18:33:20.530 [HikariPool-2 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Closing connection ConnectionID:20 ClientConnectionId: f28551c1-71e1-4f11-bff7-a888831033de: (connection evicted)
2022-01-07 18:33:20.530 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2022-01-07 18:35:13.210 [main] DEBUG com.face.server.ServerApplicationTests - Running with Spring Boot v2.5.7, Spring v5.3.13
2022-01-07 18:35:13.656 [main] DEBUG org.apache.ibatis.logging.LogFactory - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2022-01-07 18:35:14.410 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader sun.misc.Launcher$AppClassLoader@42a57993
2022-01-07 18:35:14.622 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.microsoft.sqlserver.jdbc.SQLServerDriver found in Thread context class loader sun.misc.Launcher$AppClassLoader@42a57993
2022-01-07 18:35:14.927 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	c.f.s.c.ServerController:
	{ [/monitor]}: monitor()
	{ [/]}: getEquipment()
	{GET [/staffSynchronization]}: staffSynchronization(Model)
	{POST [/staffSynchronization/getData], produces [application/json;charset=UTF-8]}: getStaffSynchronizationData(JSONObject)
	{POST [/staffOperation/getData], produces [application/json;charset=UTF-8]}: getStaffOperationData(JSONObject)
	{POST [/staffOperation/setStaff], produces [application/json;charset=UTF-8]}: setStaff(JSONObject)
	{POST [/staffOperation/delStaff], produces [application/json;charset=UTF-8]}: delStaff(JSONObject)
	{POST [/history/getHistoryData], produces [application/json;charset=UTF-8]}: getHistoryData(JSONObject)
	{ [/history]}: history(Model)
	{POST [/staffOperation/delStaffs], produces [application/json;charset=UTF-8]}: delStaffs(JSONArray)
	{POST [/staffOperation/setStaffs], produces [application/json;charset=UTF-8]}: setStaffs(JSONArray)
	{ [/staffOperation]}: staffOperation()
	{ [/equipment/getData]}: getEquipmentData()
	{POST [/equipment/getCardNum], produces [application/json;charset=UTF-8]}: getCardNum(JSONObject)
	{GET [/equipment]}: equipment(Model)
	{POST [/equipment/synchronization], produces [application/json;charset=UTF-8]}: synchronization(JSONObject)
2022-01-07 18:35:14.931 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
	{ [/error]}: error(HttpServletRequest)
2022-01-07 18:35:14.972 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'beanNameHandlerMapping' {}
2022-01-07 18:35:14.996 [main] DEBUG _.s.web.servlet.HandlerMapping.Mappings - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2022-01-07 18:35:15.426 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2022-01-07 18:35:15.428 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2022-01-07 18:35:15.428 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2022-01-07 18:35:15.429 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2022-01-07 18:35:15.429 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2022-01-07 18:35:15.429 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2022-01-07 18:35:15.429 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2022-01-07 18:35:15.429 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2022-01-07 18:35:15.429 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2022-01-07 18:35:15.429 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2022-01-07 18:35:15.430 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2022-01-07 18:35:15.430 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.microsoft.sqlserver.jdbc.SQLServerDriver"
2022-01-07 18:35:15.430 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2022-01-07 18:35:15.430 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2022-01-07 18:35:15.431 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2022-01-07 18:35:15.431 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2022-01-07 18:35:15.431 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2022-01-07 18:35:15.431 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2022-01-07 18:35:15.431 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:sqlserver://localhost:1433;DatabaseName=FaceRecognition
2022-01-07 18:35:15.431 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2022-01-07 18:35:15.432 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2022-01-07 18:35:15.432 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2022-01-07 18:35:15.432 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2022-01-07 18:35:15.432 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2022-01-07 18:35:15.432 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2022-01-07 18:35:15.432 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2022-01-07 18:35:15.432 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2022-01-07 18:35:15.432 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2022-01-07 18:35:15.433 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2022-01-07 18:35:15.433 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2022-01-07 18:35:15.433 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2022-01-07 18:35:15.433 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2022-01-07 18:35:15.433 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2022-01-07 18:35:15.433 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2022-01-07 18:35:15.433 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"sa"
2022-01-07 18:35:15.433 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2022-01-07 18:35:15.805 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:1 ClientConnectionId: 32c2aeaf-4788-4e4e-89fc-d337433e9307
2022-01-07 18:35:15.810 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 18:35:15.825 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 18:35:15.837 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 18:35:15.844 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==>  Preparing: select * from EquipmentTable where equipmentType=1;
2022-01-07 18:35:15.845 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - ==> Parameters: 
2022-01-07 18:35:15.846 [main] DEBUG c.f.s.m.f.EquipmentMapper.getAllEquipment - <==      Total: 5
2022-01-07 18:35:15.907 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2022-01-07 18:35:15.965 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:2 ClientConnectionId: ce7467f9-564c-4e93-9571-44a0ec0e1da4
2022-01-07 18:35:15.988 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:3 ClientConnectionId: adef3669-5933-45bc-b1c5-b693a3be353b
2022-01-07 18:35:16.000 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:4 ClientConnectionId: 719fedc3-a46e-40c2-b4ee-bc3a3ad6ec33
2022-01-07 18:35:16.014 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:5 ClientConnectionId: afffa3a4-2db8-4b55-8814-6c8fde0b9801
2022-01-07 18:35:16.037 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:6 ClientConnectionId: 97de2d9f-7220-49dc-b55b-7730c135319b
2022-01-07 18:35:16.066 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:7 ClientConnectionId: ebb9ef3f-eb14-4fbd-b7b7-0b052ad1ad58
2022-01-07 18:35:16.089 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:8 ClientConnectionId: 23ed3373-1134-455e-89ad-9a224be12dba
2022-01-07 18:35:16.115 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:9 ClientConnectionId: af107d7f-2df3-476b-829c-ed42d17bdeac
2022-01-07 18:35:16.128 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection ConnectionID:10 ClientConnectionId: cbc5fc45-88e3-4626-816b-e0b89f709e14
2022-01-07 18:35:16.128 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:35:28.054 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2022-01-07 18:35:28.054 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:1 ClientConnectionId: 32c2aeaf-4788-4e4e-89fc-d337433e9307: (connection evicted)
2022-01-07 18:35:28.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:2 ClientConnectionId: ce7467f9-564c-4e93-9571-44a0ec0e1da4: (connection evicted)
2022-01-07 18:35:28.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:3 ClientConnectionId: adef3669-5933-45bc-b1c5-b693a3be353b: (connection evicted)
2022-01-07 18:35:28.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:4 ClientConnectionId: 719fedc3-a46e-40c2-b4ee-bc3a3ad6ec33: (connection evicted)
2022-01-07 18:35:28.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:5 ClientConnectionId: afffa3a4-2db8-4b55-8814-6c8fde0b9801: (connection evicted)
2022-01-07 18:35:28.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:6 ClientConnectionId: 97de2d9f-7220-49dc-b55b-7730c135319b: (connection evicted)
2022-01-07 18:35:28.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:7 ClientConnectionId: ebb9ef3f-eb14-4fbd-b7b7-0b052ad1ad58: (connection evicted)
2022-01-07 18:35:28.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:8 ClientConnectionId: 23ed3373-1134-455e-89ad-9a224be12dba: (connection evicted)
2022-01-07 18:35:28.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:9 ClientConnectionId: af107d7f-2df3-476b-829c-ed42d17bdeac: (connection evicted)
2022-01-07 18:35:28.055 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection ConnectionID:10 ClientConnectionId: cbc5fc45-88e3-4626-816b-e0b89f709e14: (connection evicted)
2022-01-07 18:35:28.055 [SpringApplicationShutdownHook] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
